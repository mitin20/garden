{"msg":"Scanning for configs","section":"","timestamp":"2023-02-25T17:23:34.294Z","level":"silly","allSections":[]}
{"msg":"Scanning for configs in /workspaces/garden/garden/examples/demo-project-start","section":"","timestamp":"2023-02-25T17:23:34.315Z","level":"silly","allSections":[]}
{"msg":"Scanning project root at /workspaces/garden/garden/examples/demo-project-start\n→ Includes: **/*garden.y*ml\n→ Excludes: .garden/**/*,.git,.gitmodules,.garden/**/*,debug-info*/**","section":"","timestamp":"2023-02-25T17:23:34.315Z","level":"debug","allSections":[]}
{"msg":"Calling git with args 'diff-index --name-only HEAD /workspaces/garden/garden/examples/demo-project-start' in /workspaces/garden/garden/examples/demo-project-start","section":"","timestamp":"2023-02-25T17:23:34.318Z","level":"silly","allSections":[]}
{"msg":"Calling git with args 'ls-files --ignored --cached --exclude /workspaces/garden/garden/examples/demo-project-start/.garden --exclude-per-directory .gardenignore' in /workspaces/garden/garden/examples/demo-project-start","section":"","timestamp":"2023-02-25T17:23:34.401Z","level":"silly","allSections":[]}
{"msg":"Calling git with args 'ls-files -s --others --cached --exclude /workspaces/garden/garden/examples/demo-project-start/.garden --exclude-per-directory .gardenignore :(glob)**/*garden.y*ml' in /workspaces/garden/garden/examples/demo-project-start","section":"","timestamp":"2023-02-25T17:23:34.447Z","level":"silly","allSections":[]}
{"msg":"Found 3 files in project root /workspaces/garden/garden/examples/demo-project-start","section":"","timestamp":"2023-02-25T17:23:34.706Z","level":"debug","allSections":[]}
{"msg":"Load module and workflow configs from /workspaces/garden/garden/examples/demo-project-start/backend/garden.yml","section":"","timestamp":"2023-02-25T17:23:34.707Z","level":"silly","allSections":[]}
{"msg":"Load module and workflow configs from /workspaces/garden/garden/examples/demo-project-start/frontend/garden.yml","section":"","timestamp":"2023-02-25T17:23:34.708Z","level":"silly","allSections":[]}
{"msg":"Load module and workflow configs from /workspaces/garden/garden/examples/demo-project-start/project.garden.yml","section":"","timestamp":"2023-02-25T17:23:34.708Z","level":"silly","allSections":[]}
{"msg":"Loaded module and workflow configs from /workspaces/garden/garden/examples/demo-project-start/backend/garden.yml","section":"","timestamp":"2023-02-25T17:23:34.723Z","level":"silly","allSections":[]}
{"msg":"Loaded module and workflow configs from /workspaces/garden/garden/examples/demo-project-start/frontend/garden.yml","section":"","timestamp":"2023-02-25T17:23:34.742Z","level":"silly","allSections":[]}
{"msg":"Loaded module and workflow configs from /workspaces/garden/garden/examples/demo-project-start/project.garden.yml","section":"","timestamp":"2023-02-25T17:23:34.746Z","level":"silly","allSections":[]}
{"msg":"Adding module backend","section":"","timestamp":"2023-02-25T17:23:34.748Z","level":"silly","allSections":[]}
{"msg":"Adding module frontend","section":"","timestamp":"2023-02-25T17:23:34.750Z","level":"silly","allSections":[]}
{"msg":"Scanned and found 2 modules and 0 workflows","section":"","timestamp":"2023-02-25T17:23:34.750Z","level":"silly","allSections":[]}
{"msg":"Resolving providers","section":"","timestamp":"2023-02-25T17:23:34.874Z","level":"silly","allSections":[]}
{"msg":"Getting status...","section":"providers","timestamp":"2023-02-25T17:23:34.874Z","level":"info","allSections":["providers"]}
{"msg":"Loading plugins","section":"","timestamp":"2023-02-25T17:23:34.880Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin container","section":"","timestamp":"2023-02-25T17:23:35.512Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin exec","section":"","timestamp":"2023-02-25T17:23:35.521Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin hadolint","section":"","timestamp":"2023-02-25T17:23:35.524Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:35.604Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:35.613Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin octant","section":"","timestamp":"2023-02-25T17:23:35.615Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin openfaas","section":"","timestamp":"2023-02-25T17:23:35.621Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:35.623Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:35.626Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:35.628Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin npm-package","section":"","timestamp":"2023-02-25T17:23:35.628Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin templated","section":"","timestamp":"2023-02-25T17:23:35.633Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin conftest","section":"","timestamp":"2023-02-25T17:23:35.638Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin conftest-container","section":"","timestamp":"2023-02-25T17:23:35.639Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin conftest-kubernetes","section":"","timestamp":"2023-02-25T17:23:35.641Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin jib","section":"","timestamp":"2023-02-25T17:23:35.667Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin maven-container","section":"","timestamp":"2023-02-25T17:23:35.682Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin terraform","section":"","timestamp":"2023-02-25T17:23:35.709Z","level":"silly","allSections":[]}
{"msg":"Loaded plugin pulumi","section":"","timestamp":"2023-02-25T17:23:35.732Z","level":"silly","allSections":[]}
{"msg":"Validating plugin container","section":"","timestamp":"2023-02-25T17:23:35.743Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin container","section":"","timestamp":"2023-02-25T17:23:36.134Z","level":"silly","allSections":[]}
{"msg":"Validating plugin hadolint","section":"","timestamp":"2023-02-25T17:23:36.134Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin hadolint","section":"","timestamp":"2023-02-25T17:23:36.137Z","level":"silly","allSections":[]}
{"msg":"Validating plugin jib","section":"","timestamp":"2023-02-25T17:23:36.137Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin jib","section":"","timestamp":"2023-02-25T17:23:36.146Z","level":"silly","allSections":[]}
{"msg":"Validating plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:36.146Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:36.154Z","level":"silly","allSections":[]}
{"msg":"Validating plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.154Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.158Z","level":"silly","allSections":[]}
{"msg":"Validating plugin octant","section":"","timestamp":"2023-02-25T17:23:36.158Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin octant","section":"","timestamp":"2023-02-25T17:23:36.162Z","level":"silly","allSections":[]}
{"msg":"Validating plugin openfaas","section":"","timestamp":"2023-02-25T17:23:36.162Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin openfaas","section":"","timestamp":"2023-02-25T17:23:36.165Z","level":"silly","allSections":[]}
{"msg":"Validating plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:36.165Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:36.168Z","level":"silly","allSections":[]}
{"msg":"Validating plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:36.168Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:36.179Z","level":"silly","allSections":[]}
{"msg":"Validating plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:36.179Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:36.182Z","level":"silly","allSections":[]}
{"msg":"Validating plugin exec","section":"","timestamp":"2023-02-25T17:23:36.182Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin exec","section":"","timestamp":"2023-02-25T17:23:36.185Z","level":"silly","allSections":[]}
{"msg":"Validating plugin npm-package","section":"","timestamp":"2023-02-25T17:23:36.185Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin npm-package","section":"","timestamp":"2023-02-25T17:23:36.188Z","level":"silly","allSections":[]}
{"msg":"Validating plugin templated","section":"","timestamp":"2023-02-25T17:23:36.188Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin templated","section":"","timestamp":"2023-02-25T17:23:36.191Z","level":"silly","allSections":[]}
{"msg":"Validating plugin conftest","section":"","timestamp":"2023-02-25T17:23:36.191Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin conftest","section":"","timestamp":"2023-02-25T17:23:36.194Z","level":"silly","allSections":[]}
{"msg":"Validating plugin conftest-container","section":"","timestamp":"2023-02-25T17:23:36.194Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin conftest-container","section":"","timestamp":"2023-02-25T17:23:36.197Z","level":"silly","allSections":[]}
{"msg":"Validating plugin conftest-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.197Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin conftest-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.200Z","level":"silly","allSections":[]}
{"msg":"Validating plugin maven-container","section":"","timestamp":"2023-02-25T17:23:36.200Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin maven-container","section":"","timestamp":"2023-02-25T17:23:36.204Z","level":"silly","allSections":[]}
{"msg":"Validating plugin terraform","section":"","timestamp":"2023-02-25T17:23:36.204Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin terraform","section":"","timestamp":"2023-02-25T17:23:36.208Z","level":"silly","allSections":[]}
{"msg":"Validating plugin pulumi","section":"","timestamp":"2023-02-25T17:23:36.208Z","level":"silly","allSections":[]}
{"msg":"Done loading plugin pulumi","section":"","timestamp":"2023-02-25T17:23:36.214Z","level":"silly","allSections":[]}
{"msg":"Loaded plugins: exec, container, templated, local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.218Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Processing 4 tasks: resolve-provider.exec,resolve-provider.container,resolve-provider.templated,resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.227Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.exec","section":"","timestamp":"2023-02-25T17:23:36.228Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:36.228Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.templated","section":"","timestamp":"2023-02-25T17:23:36.228Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.228Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.exec:","section":"","timestamp":"2023-02-25T17:23:36.230Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.container:","section":"","timestamp":"2023-02-25T17:23:36.231Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.templated:","section":"","timestamp":"2023-02-25T17:23:36.231Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Got 1 dependencies for node resolve-provider.local-kubernetes: resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:36.233Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Partitioning into batches","section":"","timestamp":"2023-02-25T17:23:36.236Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Split into 3 batches","section":"","timestamp":"2023-02-25T17:23:36.239Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: this.index before processing","section":"","timestamp":"2023-02-25T17:23:36.239Z","level":"silly","allSections":[]}
{"msg":"---------------------------------------","section":"","timestamp":"2023-02-25T17:23:36.239Z","level":"silly","allSections":[]}
{"msg":"{}","section":"","timestamp":"2023-02-25T17:23:36.239Z","level":"silly","allSections":[]}
{"msg":"Processing tasks...","section":"","timestamp":"2023-02-25T17:23:36.245Z","level":"silly","allSections":[]}
{"msg":"Remaining tasks 4","section":"","timestamp":"2023-02-25T17:23:36.245Z","level":"silly","allSections":[]}
{"msg":"Currently in progress [resolve-provider.exec.22ebff30-b531-11ed-aa0d-6fe020002795, resolve-provider.container.22ebff31-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.22ebff32-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.245Z","level":"silly","allSections":[]}
{"msg":"Processing task resolve-provider.exec.22ebff30-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.exec","status":"active","uid":"22ebff30-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.245Z","level":"silly","allSections":["tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.22ebff30-b531-11ed-aa0d-6fe020002795, resolve-provider.container.22ebff31-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.22ebff32-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.245Z","level":"silly","allSections":[]}
{"msg":"Resolving template strings for provider exec","section":"","timestamp":"2023-02-25T17:23:36.246Z","level":"silly","allSections":["providers"]}
{"msg":"Validating exec config","section":"","timestamp":"2023-02-25T17:23:36.246Z","level":"silly","allSections":["providers"]}
{"msg":"Calling configureProvider on exec","section":"","timestamp":"2023-02-25T17:23:36.246Z","level":"silly","allSections":["providers"]}
{"msg":"Processing task resolve-provider.container.22ebff31-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.container","status":"active","uid":"22ebff31-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.247Z","level":"silly","allSections":["tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.22ebff30-b531-11ed-aa0d-6fe020002795, resolve-provider.container.22ebff31-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.22ebff32-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.247Z","level":"silly","allSections":[]}
{"msg":"Resolving template strings for provider container","section":"","timestamp":"2023-02-25T17:23:36.247Z","level":"silly","allSections":["providers"]}
{"msg":"Validating container config","section":"","timestamp":"2023-02-25T17:23:36.247Z","level":"silly","allSections":["providers"]}
{"msg":"Calling configureProvider on container","section":"","timestamp":"2023-02-25T17:23:36.248Z","level":"silly","allSections":["providers"]}
{"msg":"Processing task resolve-provider.templated.22ebff32-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.templated","status":"active","uid":"22ebff32-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.248Z","level":"silly","allSections":["tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.22ebff30-b531-11ed-aa0d-6fe020002795, resolve-provider.container.22ebff31-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.22ebff32-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.248Z","level":"silly","allSections":[]}
{"msg":"Resolving template strings for provider templated","section":"","timestamp":"2023-02-25T17:23:36.248Z","level":"silly","allSections":["providers"]}
{"msg":"Validating templated config","section":"","timestamp":"2023-02-25T17:23:36.248Z","level":"silly","allSections":["providers"]}
{"msg":"Calling configureProvider on templated","section":"","timestamp":"2023-02-25T17:23:36.249Z","level":"silly","allSections":["providers"]}
{"msg":"Creating ActionRouter with 4 configured providers","section":"","timestamp":"2023-02-25T17:23:36.250Z","level":"silly","allSections":[]}
{"msg":"Creating ActionRouter with 4 configured providers","section":"","timestamp":"2023-02-25T17:23:36.253Z","level":"silly","allSections":[]}
{"msg":"Creating ActionRouter with 4 configured providers","section":"","timestamp":"2023-02-25T17:23:36.253Z","level":"silly","allSections":[]}
{"msg":"Calling 'configureProvider' handler on 'exec'","section":"","timestamp":"2023-02-25T17:23:36.267Z","level":"silly","allSections":[]}
{"msg":"Calling 'configureProvider' handler on 'container'","section":"","timestamp":"2023-02-25T17:23:36.267Z","level":"silly","allSections":[]}
{"msg":"Calling 'configureProvider' handler on 'templated'","section":"","timestamp":"2023-02-25T17:23:36.267Z","level":"silly","allSections":[]}
{"msg":"Returned default 'configureProvider' handler for 'exec'","section":"","timestamp":"2023-02-25T17:23:36.267Z","level":"silly","allSections":[]}
{"msg":"Returned default 'configureProvider' handler for 'container'","section":"","timestamp":"2023-02-25T17:23:36.267Z","level":"silly","allSections":[]}
{"msg":"Returned default 'configureProvider' handler for 'templated'","section":"","timestamp":"2023-02-25T17:23:36.267Z","level":"silly","allSections":[]}
{"msg":"Called 'configureProvider' handler on 'exec'","section":"","timestamp":"2023-02-25T17:23:36.268Z","level":"silly","allSections":[]}
{"msg":"Called 'configureProvider' handler on 'container'","section":"","timestamp":"2023-02-25T17:23:36.268Z","level":"silly","allSections":[]}
{"msg":"Called 'configureProvider' handler on 'templated'","section":"","timestamp":"2023-02-25T17:23:36.268Z","level":"silly","allSections":[]}
{"msg":"Validating exec config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.268Z","level":"silly","allSections":["providers"]}
{"msg":"Ensuring exec provider is ready","section":"","timestamp":"2023-02-25T17:23:36.269Z","level":"silly","allSections":["providers"]}
{"msg":"Validating container config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.270Z","level":"silly","allSections":["providers"]}
{"msg":"Ensuring container provider is ready","section":"","timestamp":"2023-02-25T17:23:36.270Z","level":"silly","allSections":["providers"]}
{"msg":"Validating templated config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.270Z","level":"silly","allSections":["providers"]}
{"msg":"Ensuring templated provider is ready","section":"","timestamp":"2023-02-25T17:23:36.271Z","level":"silly","allSections":["providers"]}
{"msg":"Getting status for exec","section":"","timestamp":"2023-02-25T17:23:36.274Z","level":"silly","allSections":["providers"]}
{"msg":"Checking provider status cache for exec at /workspaces/garden/garden/examples/demo-project-start/.garden/cache/provider-statuses/exec.json","section":"","timestamp":"2023-02-25T17:23:36.274Z","level":"silly","allSections":["providers"]}
{"msg":"Getting status for container","section":"","timestamp":"2023-02-25T17:23:36.276Z","level":"silly","allSections":["providers"]}
{"msg":"Checking provider status cache for container at /workspaces/garden/garden/examples/demo-project-start/.garden/cache/provider-statuses/container.json","section":"","timestamp":"2023-02-25T17:23:36.277Z","level":"silly","allSections":["providers"]}
{"msg":"Getting status for templated","section":"","timestamp":"2023-02-25T17:23:36.277Z","level":"silly","allSections":["providers"]}
{"msg":"Checking provider status cache for templated at /workspaces/garden/garden/examples/demo-project-start/.garden/cache/provider-statuses/templated.json","section":"","timestamp":"2023-02-25T17:23:36.277Z","level":"silly","allSections":["providers"]}
{"msg":"Completed task resolve-provider.exec.22ebff30-b531-11ed-aa0d-6fe020002795 (took 0.051 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.exec","status":"success","uid":"22ebff30-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":51}},"section":"tasks","timestamp":"2023-02-25T17:23:36.296Z","level":"silly","allSections":["tasks"]}
{"msg":"Remaining tasks 3","section":"","timestamp":"2023-02-25T17:23:36.297Z","level":"silly","allSections":[]}
{"msg":"Completed task resolve-provider.templated.22ebff32-b531-11ed-aa0d-6fe020002795 (took 0.07 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.templated","status":"success","uid":"22ebff32-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":70}},"section":"tasks","timestamp":"2023-02-25T17:23:36.318Z","level":"silly","allSections":["tasks"]}
{"msg":"Remaining tasks 2","section":"","timestamp":"2023-02-25T17:23:36.318Z","level":"silly","allSections":[]}
{"msg":"Completed task resolve-provider.container.22ebff31-b531-11ed-aa0d-6fe020002795 (took 0.072 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.container","status":"success","uid":"22ebff31-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":72}},"section":"tasks","timestamp":"2023-02-25T17:23:36.319Z","level":"silly","allSections":["tasks"]}
{"msg":"Remaining tasks 1","section":"","timestamp":"2023-02-25T17:23:36.320Z","level":"silly","allSections":[]}
{"msg":"Processing task resolve-provider.local-kubernetes.22ebff33-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.local-kubernetes","status":"active","uid":"22ebff33-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.320Z","level":"silly","allSections":["tasks"]}
{"msg":"Currently in progress [resolve-provider.local-kubernetes.22ebff33-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.320Z","level":"silly","allSections":[]}
{"msg":"Resolving template strings for provider local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.320Z","level":"silly","allSections":["providers"]}
{"msg":"Validating local-kubernetes config","section":"","timestamp":"2023-02-25T17:23:36.320Z","level":"silly","allSections":["providers"]}
{"msg":"Calling configureProvider on local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.321Z","level":"silly","allSections":["providers"]}
{"msg":"Calling 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:36.322Z","level":"silly","allSections":[]}
{"msg":"Found 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:36.323Z","level":"silly","allSections":[]}
{"msg":"Called 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:36.323Z","level":"silly","allSections":[]}
{"msg":"Execing '/home/node/.garden/tools/kubectl/49eb930aa565a80f/kubectl --context=k3d-k3s-default config view --raw' in /home/node/.garden/tools/kubectl/49eb930aa565a80f","section":"","timestamp":"2023-02-25T17:23:36.326Z","level":"silly","allSections":["providers"]}
{"msg":"An attempt to get kind version failed with Error: Command \"kind version\" failed with code ENOENT:","section":"","timestamp":"2023-02-25T17:23:36.437Z","level":"debug","allSections":["providers"]}
{"msg":"Validating local-kubernetes config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.439Z","level":"silly","allSections":["providers"]}
{"msg":"Validating 'local-kubernetes' config against 'kubernetes' schema","section":"","timestamp":"2023-02-25T17:23:36.440Z","level":"silly","allSections":["providers"]}
{"msg":"Ensuring local-kubernetes provider is ready","section":"","timestamp":"2023-02-25T17:23:36.441Z","level":"silly","allSections":["providers"]}
{"msg":"Getting status for local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.442Z","level":"silly","allSections":["providers"]}
{"msg":"Checking provider status cache for local-kubernetes at /workspaces/garden/garden/examples/demo-project-start/.garden/cache/provider-statuses/local-kubernetes.json","section":"","timestamp":"2023-02-25T17:23:36.442Z","level":"silly","allSections":["providers"]}
{"msg":"Unable to find or read provider status from /workspaces/garden/garden/examples/demo-project-start/.garden/cache/provider-statuses/local-kubernetes.json: ENOENT: no such file or directory, open '/workspaces/garden/garden/examples/demo-project-start/.garden/cache/provider-statuses/local-kubernetes.json'","section":"","timestamp":"2023-02-25T17:23:36.450Z","level":"silly","allSections":["providers"]}
{"msg":"Found 'getEnvironmentStatus' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:36.451Z","level":"silly","allSections":[]}
{"msg":"Execing '/home/node/.garden/tools/kubectl/49eb930aa565a80f/kubectl --context=k3d-k3s-default config view --raw' in /home/node/.garden/tools/kubectl/49eb930aa565a80f","section":"","timestamp":"2023-02-25T17:23:36.453Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/version","section":"","timestamp":"2023-02-25T17:23:36.520Z","level":"silly","allSections":["providers"]}
{"msg":"Kubernetes: Getting API resource info for group networking.k8s.io/v1","section":"","timestamp":"2023-02-25T17:23:36.567Z","level":"debug","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/apis/networking.k8s.io/v1","section":"","timestamp":"2023-02-25T17:23:36.568Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/apis/networking.k8s.io/v1/ingressclasses","section":"","timestamp":"2023-02-25T17:23:36.583Z","level":"silly","allSections":["providers"]}
{"msg":"An ingressClass “nginx\" was set in the provider config for the Kubernetes provider but no matching IngressClass resource was found in the cluster. IngressClass resources are typically created by your Ingress Controller so this may suggest that it has not been properly set up.","section":"","timestamp":"2023-02-25T17:23:36.600Z","level":"warn","allSections":["providers"]}
{"msg":"Initializing...","section":"garden system","timestamp":"2023-02-25T17:23:36.604Z","level":"debug","allSections":["providers","garden system"]}
{"msg":"Calling git with args 'rev-parse --abbrev-ref HEAD' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:36.607Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'config --get remote.origin.url' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:36.623Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Tried to retrieve git remote.origin.url but encountered an error: Error: Command \"git config --get remote.origin.url\" failed with code 1:","section":"","timestamp":"2023-02-25T17:23:36.640Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'config --get-all safe.directory' in /garden/static","section":"","timestamp":"2023-02-25T17:23:36.682Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'status' in /garden/static","section":"","timestamp":"2023-02-25T17:23:36.697Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'status' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:36.714Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'rev-parse --show-toplevel' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:36.729Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loading plugins","section":"","timestamp":"2023-02-25T17:23:36.745Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin container","section":"","timestamp":"2023-02-25T17:23:36.761Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin exec","section":"","timestamp":"2023-02-25T17:23:36.766Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin hadolint","section":"","timestamp":"2023-02-25T17:23:36.768Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:36.801Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.808Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin octant","section":"","timestamp":"2023-02-25T17:23:36.809Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin openfaas","section":"","timestamp":"2023-02-25T17:23:36.811Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:36.811Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:36.813Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:36.813Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin npm-package","section":"","timestamp":"2023-02-25T17:23:36.813Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin templated","section":"","timestamp":"2023-02-25T17:23:36.817Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin container","section":"","timestamp":"2023-02-25T17:23:36.822Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin container","section":"","timestamp":"2023-02-25T17:23:36.830Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin hadolint","section":"","timestamp":"2023-02-25T17:23:36.830Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin hadolint","section":"","timestamp":"2023-02-25T17:23:36.833Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin jib","section":"","timestamp":"2023-02-25T17:23:36.833Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:36.833Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin jib","section":"","timestamp":"2023-02-25T17:23:36.839Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:36.839Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.839Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.843Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin octant","section":"","timestamp":"2023-02-25T17:23:36.843Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin octant","section":"","timestamp":"2023-02-25T17:23:36.846Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin openfaas","section":"","timestamp":"2023-02-25T17:23:36.846Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin openfaas","section":"","timestamp":"2023-02-25T17:23:36.849Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:36.849Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:36.853Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:36.853Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:36.855Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:36.856Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:36.858Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin exec","section":"","timestamp":"2023-02-25T17:23:36.858Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin exec","section":"","timestamp":"2023-02-25T17:23:36.864Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin npm-package","section":"","timestamp":"2023-02-25T17:23:36.864Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin npm-package","section":"","timestamp":"2023-02-25T17:23:36.867Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin templated","section":"","timestamp":"2023-02-25T17:23:36.867Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin templated","section":"","timestamp":"2023-02-25T17:23:36.870Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugins: exec, container, templated, local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.871Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Creating ActionRouter with 4 configured providers","section":"","timestamp":"2023-02-25T17:23:36.871Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving providers","section":"","timestamp":"2023-02-25T17:23:36.872Z","level":"silly","allSections":["providers"]}
{"msg":"Getting status...","section":"providers","timestamp":"2023-02-25T17:23:36.872Z","level":"info","allSections":["providers","providers"]}
{"msg":"Tracking Run Command event.\nPayload:\n  {\"anonymousId\":\"5f123b0a-feb3-450b-b870-c4d415a5fca8\",\"event\":\"Run Command\",\"properties\":{\"projectId\":\"08313c5f0c95d99900e134a6874c9ccd9009a90982800c8ab12cda014ba87ac8d097ab84922618db3eb6ba437fea8e6d2f4c5fa7abcb32c5e769c1a0391f6a00\",\"projectIdV2\":\"harsh-wild-ability_08313c5f0c95d99900e134a6874c9ccd\",\"projectName\":\"71af402054fdb26dfa41cb420265e3596e1bfe88886e18fc2ecd71e2740d3d5a80e7c633121b23f15cab46a899abf3749f637a6bf9f9fc575ba28c53824a450b\",\"projectNameV2\":\"solid-impartial-birthday_71af402054fdb26dfa41cb420265e359\",\"isLoggedIn\":false,\"ciName\":null,\"system\":{\"platform\":\"linux\",\"platformVersion\":\"5.15.68-0-virt\",\"gardenVersion\":\"0.12.51\"},\"isCI\":false,\"sessionId\":\"47fd8b10-11f6-4297-9a86-1c0f4e36fd78\",\"projectMetadata\":{\"modulesCount\":2,\"moduleTypes\":[\"container\"],\"tasksCount\":0,\"servicesCount\":2,\"testsCount\":0},\"firstRunAt\":\"Sat, 25 Feb 2023 16:32:27 GMT\",\"latestRunAt\":\"Sat, 25 Feb 2023 17:23:34 GMT\",\"isRecurringUser\":false,\"name\":\"deploy\"}}","section":"","timestamp":"2023-02-25T17:23:36.876Z","level":"silly","allSections":[]}
{"msg":"TaskGraph: Processing 4 tasks: resolve-provider.exec,resolve-provider.container,resolve-provider.templated,resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.879Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.exec","section":"","timestamp":"2023-02-25T17:23:36.879Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:36.880Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.templated","section":"","timestamp":"2023-02-25T17:23:36.880Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.880Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.exec:","section":"","timestamp":"2023-02-25T17:23:36.883Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.container:","section":"","timestamp":"2023-02-25T17:23:36.883Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.templated:","section":"","timestamp":"2023-02-25T17:23:36.883Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 1 dependencies for node resolve-provider.local-kubernetes: resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:36.883Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Partitioning into batches","section":"","timestamp":"2023-02-25T17:23:36.884Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Split into 3 batches","section":"","timestamp":"2023-02-25T17:23:36.885Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: this.index before processing","section":"","timestamp":"2023-02-25T17:23:36.885Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"---------------------------------------","section":"","timestamp":"2023-02-25T17:23:36.885Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"{}","section":"","timestamp":"2023-02-25T17:23:36.885Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing tasks...","section":"","timestamp":"2023-02-25T17:23:36.886Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Remaining tasks 4","section":"","timestamp":"2023-02-25T17:23:36.887Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Currently in progress [resolve-provider.exec.234f54e0-b531-11ed-aa0d-6fe020002795, resolve-provider.container.234f54e1-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.234f54e2-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.887Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task resolve-provider.exec.234f54e0-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.exec","status":"active","uid":"234f54e0-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.887Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.234f54e0-b531-11ed-aa0d-6fe020002795, resolve-provider.container.234f54e1-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.234f54e2-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.887Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider exec","section":"","timestamp":"2023-02-25T17:23:36.887Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating exec config","section":"","timestamp":"2023-02-25T17:23:36.887Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on exec","section":"","timestamp":"2023-02-25T17:23:36.888Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Processing task resolve-provider.container.234f54e1-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.container","status":"active","uid":"234f54e1-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.888Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.234f54e0-b531-11ed-aa0d-6fe020002795, resolve-provider.container.234f54e1-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.234f54e2-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.888Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider container","section":"","timestamp":"2023-02-25T17:23:36.888Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating container config","section":"","timestamp":"2023-02-25T17:23:36.888Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on container","section":"","timestamp":"2023-02-25T17:23:36.889Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Processing task resolve-provider.templated.234f54e2-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.templated","status":"active","uid":"234f54e2-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.889Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.234f54e0-b531-11ed-aa0d-6fe020002795, resolve-provider.container.234f54e1-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.234f54e2-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.889Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider templated","section":"","timestamp":"2023-02-25T17:23:36.889Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating templated config","section":"","timestamp":"2023-02-25T17:23:36.889Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on templated","section":"","timestamp":"2023-02-25T17:23:36.889Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling 'configureProvider' handler on 'exec'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling 'configureProvider' handler on 'container'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling 'configureProvider' handler on 'templated'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Returned default 'configureProvider' handler for 'exec'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Returned default 'configureProvider' handler for 'container'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Returned default 'configureProvider' handler for 'templated'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'exec'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'container'","section":"","timestamp":"2023-02-25T17:23:36.893Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'templated'","section":"","timestamp":"2023-02-25T17:23:36.894Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating exec config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.894Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring exec provider is ready","section":"","timestamp":"2023-02-25T17:23:36.894Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating container config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.894Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring container provider is ready","section":"","timestamp":"2023-02-25T17:23:36.894Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating templated config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.894Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring templated provider is ready","section":"","timestamp":"2023-02-25T17:23:36.895Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for exec","section":"","timestamp":"2023-02-25T17:23:36.897Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for exec at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/exec.json","section":"","timestamp":"2023-02-25T17:23:36.897Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for container","section":"","timestamp":"2023-02-25T17:23:36.897Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for container at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/container.json","section":"","timestamp":"2023-02-25T17:23:36.897Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for templated","section":"","timestamp":"2023-02-25T17:23:36.897Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for templated at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/templated.json","section":"","timestamp":"2023-02-25T17:23:36.897Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Completed task resolve-provider.templated.234f54e2-b531-11ed-aa0d-6fe020002795 (took 0.015 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.templated","status":"success","uid":"234f54e2-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":15}},"section":"tasks","timestamp":"2023-02-25T17:23:36.904Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 3","section":"","timestamp":"2023-02-25T17:23:36.905Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Completed task resolve-provider.exec.234f54e0-b531-11ed-aa0d-6fe020002795 (took 0.019 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.exec","status":"success","uid":"234f54e0-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":19}},"section":"tasks","timestamp":"2023-02-25T17:23:36.906Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 2","section":"","timestamp":"2023-02-25T17:23:36.906Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Completed task resolve-provider.container.234f54e1-b531-11ed-aa0d-6fe020002795 (took 0.019 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.container","status":"success","uid":"234f54e1-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":19}},"section":"tasks","timestamp":"2023-02-25T17:23:36.907Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 1","section":"","timestamp":"2023-02-25T17:23:36.907Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task resolve-provider.local-kubernetes.234f54e3-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.local-kubernetes","status":"active","uid":"234f54e3-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:36.907Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.local-kubernetes.234f54e3-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:36.907Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.907Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating local-kubernetes config","section":"","timestamp":"2023-02-25T17:23:36.908Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.908Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:36.909Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Found 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:36.909Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:36.909Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Execing '/home/node/.garden/tools/kubectl/49eb930aa565a80f/kubectl --context=k3d-k3s-default config view --raw' in /home/node/.garden/tools/kubectl/49eb930aa565a80f","section":"","timestamp":"2023-02-25T17:23:36.911Z","level":"silly","allSections":["providers","providers"]}
{"msg":"An attempt to get kind version failed with Error: Command \"kind version\" failed with code ENOENT:","section":"","timestamp":"2023-02-25T17:23:36.988Z","level":"debug","allSections":["providers","providers"]}
{"msg":"Validating local-kubernetes config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:36.989Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating 'local-kubernetes' config against 'kubernetes' schema","section":"","timestamp":"2023-02-25T17:23:36.990Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring local-kubernetes provider is ready","section":"","timestamp":"2023-02-25T17:23:36.991Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for local-kubernetes","section":"","timestamp":"2023-02-25T17:23:36.992Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for local-kubernetes at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/local-kubernetes.json","section":"","timestamp":"2023-02-25T17:23:36.992Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Completed task resolve-provider.local-kubernetes.234f54e3-b531-11ed-aa0d-6fe020002795 (took 0.092 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.local-kubernetes","status":"success","uid":"234f54e3-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":92}},"section":"tasks","timestamp":"2023-02-25T17:23:36.999Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:36.999Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:37.000Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting status... - Cached","section":"providers","timestamp":"2023-02-25T17:23:37.001Z","level":"info","allSections":["providers","providers"]}
{"msg":"Run with --force-refresh to force a refresh of provider statuses.","section":"","timestamp":"2023-02-25T17:23:37.003Z","level":"info","allSections":["providers","providers"]}
{"msg":"Resolved providers: exec, container, local-kubernetes, templated","section":"","timestamp":"2023-02-25T17:23:37.006Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Scanning for configs","section":"","timestamp":"2023-02-25T17:23:37.006Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Scanning for configs in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.015Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Scanning project root at /garden/static/kubernetes/system\n→ Includes: **/*garden.y*ml\n→ Excludes: ../../../../workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/**/*,.git,.gitmodules,.garden/**/*,debug-info*/**","section":"","timestamp":"2023-02-25T17:23:37.015Z","level":"debug","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'diff-index --name-only HEAD /garden/static/kubernetes/system' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.016Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'ls-files --ignored --cached --exclude /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden --exclude-per-directory .gardenignore' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.030Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'ls-files -s --others --cached --exclude /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden --exclude-per-directory .gardenignore :(glob)**/*garden.y*ml' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.054Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Found 11 files in project root /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.088Z","level":"debug","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/build-sync/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.090Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/default-backend/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.090Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/docker-daemon/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.090Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/docker-registry/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.091Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/ingress-class/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.091Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/ingress-controller/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.091Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/nfs-provisioner/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.092Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-new.garden.yml","section":"","timestamp":"2023-02-25T17:23:37.092Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-old.garden.yml","section":"","timestamp":"2023-02-25T17:23:37.092Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/registry-proxy/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.092Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/util/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.093Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/build-sync/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.105Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/default-backend/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.116Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/docker-registry/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.122Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/docker-daemon/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.127Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/ingress-class/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.133Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/ingress-controller/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.143Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/nfs-provisioner/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.149Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-new.garden.yml","section":"","timestamp":"2023-02-25T17:23:37.167Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-old.garden.yml","section":"","timestamp":"2023-02-25T17:23:37.174Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/util/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.181Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/registry-proxy/garden.yml","section":"","timestamp":"2023-02-25T17:23:37.188Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module build-sync","section":"","timestamp":"2023-02-25T17:23:37.222Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module default-backend","section":"","timestamp":"2023-02-25T17:23:37.222Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module docker-daemon","section":"","timestamp":"2023-02-25T17:23:37.222Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module docker-registry","section":"","timestamp":"2023-02-25T17:23:37.222Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:37.223Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.223Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:37.223Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:37.223Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:37.223Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module registry-proxy","section":"","timestamp":"2023-02-25T17:23:37.223Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module util","section":"","timestamp":"2023-02-25T17:23:37.223Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Scanned and found 11 modules and 0 workflows","section":"","timestamp":"2023-02-25T17:23:37.224Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving 11 modules...","section":"graph","timestamp":"2023-02-25T17:23:37.224Z","level":"info","allSections":["providers","graph"]}
{"msg":"ModuleResolver: Loop 1","section":"","timestamp":"2023-02-25T17:23:37.253Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 11 leaves","section":"","timestamp":"2023-02-25T17:23:37.253Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node build-sync","section":"","timestamp":"2023-02-25T17:23:37.254Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config build-sync","section":"","timestamp":"2023-02-25T17:23:37.254Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node default-backend","section":"","timestamp":"2023-02-25T17:23:37.255Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config default-backend","section":"","timestamp":"2023-02-25T17:23:37.256Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node docker-daemon","section":"","timestamp":"2023-02-25T17:23:37.256Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config docker-daemon","section":"","timestamp":"2023-02-25T17:23:37.256Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node docker-registry","section":"","timestamp":"2023-02-25T17:23:37.256Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config docker-registry","section":"","timestamp":"2023-02-25T17:23:37.256Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:37.256Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:37.256Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node registry-proxy","section":"","timestamp":"2023-02-25T17:23:37.257Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config registry-proxy","section":"","timestamp":"2023-02-25T17:23:37.258Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node util","section":"","timestamp":"2023-02-25T17:23:37.258Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config util","section":"","timestamp":"2023-02-25T17:23:37.258Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Calling configure handler for helm module 'build-sync'","section":"","timestamp":"2023-02-25T17:23:37.360Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for container module 'default-backend'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'docker-daemon'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'docker-registry'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for kubernetes module 'nginx-ingress-class'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'ingress-controller'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'nfs-provisioner'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for kubernetes module 'nginx-kind-new'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for kubernetes module 'nginx-kind-old'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'registry-proxy'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'util'","section":"","timestamp":"2023-02-25T17:23:37.361Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called configure handler for kubernetes module 'nginx-ingress-class'","section":"","timestamp":"2023-02-25T17:23:37.372Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called configure handler for kubernetes module 'nginx-kind-new'","section":"","timestamp":"2023-02-25T17:23:37.373Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called configure handler for kubernetes module 'nginx-kind-old'","section":"","timestamp":"2023-02-25T17:23:37.373Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:37.373Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving module nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:37.373Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving module nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:37.373Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'build-sync'","section":"","timestamp":"2023-02-25T17:23:37.374Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module build-sync","section":"","timestamp":"2023-02-25T17:23:37.375Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for container module 'default-backend'","section":"","timestamp":"2023-02-25T17:23:37.375Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module default-backend","section":"","timestamp":"2023-02-25T17:23:37.375Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'docker-daemon'","section":"","timestamp":"2023-02-25T17:23:37.376Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module docker-daemon","section":"","timestamp":"2023-02-25T17:23:37.376Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'docker-registry'","section":"","timestamp":"2023-02-25T17:23:37.377Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module docker-registry","section":"","timestamp":"2023-02-25T17:23:37.377Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'ingress-controller'","section":"","timestamp":"2023-02-25T17:23:37.378Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.378Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'nfs-provisioner'","section":"","timestamp":"2023-02-25T17:23:37.378Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:37.378Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'registry-proxy'","section":"","timestamp":"2023-02-25T17:23:37.379Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module registry-proxy","section":"","timestamp":"2023-02-25T17:23:37.379Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'util'","section":"","timestamp":"2023-02-25T17:23:37.379Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module util","section":"","timestamp":"2023-02-25T17:23:37.380Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nginx-ingress-class\"]","section":"","timestamp":"2023-02-25T17:23:37.380Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:37.380Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nginx-kind-new\"]","section":"","timestamp":"2023-02-25T17:23:37.380Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:37.381Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nginx-kind-old\"]","section":"","timestamp":"2023-02-25T17:23:37.381Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:37.381Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"build-sync\"]","section":"","timestamp":"2023-02-25T17:23:37.381Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module build-sync","section":"","timestamp":"2023-02-25T17:23:37.381Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"default-backend\"]","section":"","timestamp":"2023-02-25T17:23:37.382Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module default-backend","section":"","timestamp":"2023-02-25T17:23:37.382Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"docker-daemon\"]","section":"","timestamp":"2023-02-25T17:23:37.383Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module docker-daemon","section":"","timestamp":"2023-02-25T17:23:37.383Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"docker-registry\"]","section":"","timestamp":"2023-02-25T17:23:37.383Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module docker-registry","section":"","timestamp":"2023-02-25T17:23:37.383Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"ingress-controller\"]","section":"","timestamp":"2023-02-25T17:23:37.383Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.383Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nfs-provisioner\"]","section":"","timestamp":"2023-02-25T17:23:37.384Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:37.384Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"registry-proxy\"]","section":"","timestamp":"2023-02-25T17:23:37.384Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module registry-proxy","section":"","timestamp":"2023-02-25T17:23:37.384Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"util\"]","section":"","timestamp":"2023-02-25T17:23:37.385Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module util","section":"","timestamp":"2023-02-25T17:23:37.385Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nginx-ingress-class\"]","section":"","timestamp":"2023-02-25T17:23:37.390Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nginx-kind-new\"]","section":"","timestamp":"2023-02-25T17:23:37.392Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nginx-kind-old\"]","section":"","timestamp":"2023-02-25T17:23:37.395Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"build-sync\"]","section":"","timestamp":"2023-02-25T17:23:37.397Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"default-backend\"]","section":"","timestamp":"2023-02-25T17:23:37.399Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"docker-registry\"]","section":"","timestamp":"2023-02-25T17:23:37.402Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"ingress-controller\"]","section":"","timestamp":"2023-02-25T17:23:37.410Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nfs-provisioner\"]","section":"","timestamp":"2023-02-25T17:23:37.412Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"docker-daemon\"]","section":"","timestamp":"2023-02-25T17:23:37.414Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"util\"]","section":"","timestamp":"2023-02-25T17:23:37.416Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"registry-proxy\"]","section":"","timestamp":"2023-02-25T17:23:37.419Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nginx-ingress-class resolved","section":"","timestamp":"2023-02-25T17:23:37.424Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.424Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nginx-kind-new resolved","section":"","timestamp":"2023-02-25T17:23:37.424Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.424Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nginx-kind-old resolved","section":"","timestamp":"2023-02-25T17:23:37.425Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.425Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module build-sync resolved","section":"","timestamp":"2023-02-25T17:23:37.425Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.425Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module default-backend resolved","section":"","timestamp":"2023-02-25T17:23:37.426Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.426Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nfs-provisioner resolved","section":"","timestamp":"2023-02-25T17:23:37.426Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.426Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module util resolved","section":"","timestamp":"2023-02-25T17:23:37.427Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.427Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module docker-registry resolved","section":"","timestamp":"2023-02-25T17:23:37.427Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.427Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module ingress-controller resolved","section":"","timestamp":"2023-02-25T17:23:37.428Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.428Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module docker-daemon resolved","section":"","timestamp":"2023-02-25T17:23:37.428Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.428Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module registry-proxy resolved","section":"","timestamp":"2023-02-25T17:23:37.429Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:37.429Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving 11 modules... - Done","section":"graph","timestamp":"2023-02-25T17:23:37.430Z","level":"info","allSections":["providers","graph"]}
{"msg":"TaskGraph: Processing 2 tasks: get-service-status.ingress-controller,get-service-status.default-backend","section":"","timestamp":"2023-02-25T17:23:37.438Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node get-service-status.ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.438Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node get-service-status.default-backend","section":"","timestamp":"2023-02-25T17:23:37.439Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 1 dependencies for node get-service-status.ingress-controller: get-service-status.default-backend","section":"","timestamp":"2023-02-25T17:23:37.439Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node get-service-status.default-backend:","section":"","timestamp":"2023-02-25T17:23:37.439Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Partitioning into batches","section":"","timestamp":"2023-02-25T17:23:37.440Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Split into 1 batches","section":"","timestamp":"2023-02-25T17:23:37.441Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: this.index before processing","section":"","timestamp":"2023-02-25T17:23:37.441Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"---------------------------------------","section":"","timestamp":"2023-02-25T17:23:37.441Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"{}","section":"","timestamp":"2023-02-25T17:23:37.441Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task get-service-status.default-backend.23a4c7e1-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"get-service-status","key":"get-service-status.default-backend","status":"active","uid":"23a4c7e1-b531-11ed-aa0d-6fe020002795","versionString":"v-2d58c28944"}},"section":"tasks","timestamp":"2023-02-25T17:23:37.442Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [get-service-status.default-backend.23a4c7e1-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:37.442Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting getServiceStatus handler for service default-backend","section":"","timestamp":"2023-02-25T17:23:37.442Z","level":"silly","allSections":["providers"]}
{"msg":"Calling getServiceStatus handler for service default-backend","section":"","timestamp":"2023-02-25T17:23:37.444Z","level":"silly","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource apps/v1/Deployment/default-backend","section":"","timestamp":"2023-02-25T17:23:37.447Z","level":"silly","allSections":["providers"]}
{"msg":"Kubernetes: Getting API resource info for group apps/v1","section":"","timestamp":"2023-02-25T17:23:37.448Z","level":"debug","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource v1/Service/default-backend","section":"","timestamp":"2023-02-25T17:23:37.448Z","level":"silly","allSections":["providers"]}
{"msg":"Kubernetes: Getting API resource info for group v1","section":"","timestamp":"2023-02-25T17:23:37.448Z","level":"debug","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/apis/apps/v1","section":"","timestamp":"2023-02-25T17:23:37.448Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/api/v1","section":"","timestamp":"2023-02-25T17:23:37.449Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/apis/apps/v1/namespaces/garden-system/deployments/default-backend","section":"","timestamp":"2023-02-25T17:23:37.482Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/api/v1/namespaces/garden-system/services/default-backend","section":"","timestamp":"2023-02-25T17:23:37.483Z","level":"silly","allSections":["providers"]}
{"msg":"Getting currently deployed resource statuses...","section":"","timestamp":"2023-02-25T17:23:37.512Z","level":"debug","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource apps/v1/Deployment/default-backend","section":"","timestamp":"2023-02-25T17:23:37.513Z","level":"silly","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource v1/Service/default-backend","section":"","timestamp":"2023-02-25T17:23:37.513Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/apis/apps/v1/namespaces/garden-system/deployments/default-backend","section":"","timestamp":"2023-02-25T17:23:37.514Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/api/v1/namespaces/garden-system/services/default-backend","section":"","timestamp":"2023-02-25T17:23:37.514Z","level":"silly","allSections":["providers"]}
{"msg":"Comparing expected and deployed resources...","section":"","timestamp":"2023-02-25T17:23:37.541Z","level":"verbose","allSections":["providers"]}
{"msg":"All resources match.","section":"","timestamp":"2023-02-25T17:23:37.542Z","level":"verbose","allSections":["providers"]}
{"msg":"Completed task get-service-status.default-backend.23a4c7e1-b531-11ed-aa0d-6fe020002795 (took 0.105 sec)","metadata":{"task":{"type":"get-service-status","key":"get-service-status.default-backend","status":"success","uid":"23a4c7e1-b531-11ed-aa0d-6fe020002795","versionString":"v-2d58c28944","durationMs":105}},"section":"tasks","timestamp":"2023-02-25T17:23:37.546Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 1","section":"","timestamp":"2023-02-25T17:23:37.546Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task get-service-status.ingress-controller.23a4c7e0-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"get-service-status","key":"get-service-status.ingress-controller","status":"active","uid":"23a4c7e0-b531-11ed-aa0d-6fe020002795","versionString":"v-b5ac3ef2a2"}},"section":"tasks","timestamp":"2023-02-25T17:23:37.546Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [get-service-status.ingress-controller.23a4c7e0-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:37.546Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting getServiceStatus handler for service ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.547Z","level":"silly","allSections":["providers"]}
{"msg":"Calling getServiceStatus handler for service ingress-controller","section":"","timestamp":"2023-02-25T17:23:37.548Z","level":"silly","allSections":["providers"]}
{"msg":"Getting the release status for garden-nginx","section":"","timestamp":"2023-02-25T17:23:37.548Z","level":"silly","allSections":["providers"]}
{"msg":"Execing '/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system status garden-nginx --output json' in /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64","section":"","timestamp":"2023-02-25T17:23:37.550Z","level":"silly","allSections":["providers"]}
{"msg":"Completed task get-service-status.ingress-controller.23a4c7e0-b531-11ed-aa0d-6fe020002795 (took 0.076 sec)","metadata":{"task":{"type":"get-service-status","key":"get-service-status.ingress-controller","status":"success","uid":"23a4c7e0-b531-11ed-aa0d-6fe020002795","versionString":"v-b5ac3ef2a2","durationMs":76}},"section":"tasks","timestamp":"2023-02-25T17:23:37.622Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:37.622Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:37.622Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Initializing...","section":"garden system","timestamp":"2023-02-25T17:23:37.623Z","level":"debug","allSections":["providers","garden system"]}
{"msg":"local-kubernetes status: not ready","section":"","timestamp":"2023-02-25T17:23:37.624Z","level":"silly","allSections":["providers"]}
{"msg":"Preparing environment...","section":"providers","timestamp":"2023-02-25T17:23:37.624Z","level":"info","allSections":["providers"]}
{"msg":"Configuring...","section":"local-kubernetes","timestamp":"2023-02-25T17:23:37.627Z","level":"info","allSections":["providers","local-kubernetes"]}
{"msg":"Found 'prepareEnvironment' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:37.630Z","level":"silly","allSections":[]}
{"msg":"Initializing...","section":"garden system","timestamp":"2023-02-25T17:23:37.630Z","level":"debug","allSections":["providers","garden system"]}
{"msg":"Calling git with args 'rev-parse --abbrev-ref HEAD' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.634Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'config --get remote.origin.url' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.650Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Tried to retrieve git remote.origin.url but encountered an error: Error: Command \"git config --get remote.origin.url\" failed with code 1:","section":"","timestamp":"2023-02-25T17:23:37.665Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'config --get-all safe.directory' in /garden/static","section":"","timestamp":"2023-02-25T17:23:37.697Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'status' in /garden/static","section":"","timestamp":"2023-02-25T17:23:37.712Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'status' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.727Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'rev-parse --show-toplevel' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:37.744Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving provider local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.758Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving providers","section":"","timestamp":"2023-02-25T17:23:37.759Z","level":"silly","allSections":["providers"]}
{"msg":"Getting status...","section":"providers","timestamp":"2023-02-25T17:23:37.760Z","level":"info","allSections":["providers","providers"]}
{"msg":"Loading plugins","section":"","timestamp":"2023-02-25T17:23:37.764Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin container","section":"","timestamp":"2023-02-25T17:23:37.795Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin exec","section":"","timestamp":"2023-02-25T17:23:37.800Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin hadolint","section":"","timestamp":"2023-02-25T17:23:37.801Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:37.836Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.856Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin octant","section":"","timestamp":"2023-02-25T17:23:37.857Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin openfaas","section":"","timestamp":"2023-02-25T17:23:37.859Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:37.859Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:37.860Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:37.860Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin npm-package","section":"","timestamp":"2023-02-25T17:23:37.861Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugin templated","section":"","timestamp":"2023-02-25T17:23:37.864Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin container","section":"","timestamp":"2023-02-25T17:23:37.865Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin container","section":"","timestamp":"2023-02-25T17:23:37.871Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin hadolint","section":"","timestamp":"2023-02-25T17:23:37.871Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin hadolint","section":"","timestamp":"2023-02-25T17:23:37.874Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin jib","section":"","timestamp":"2023-02-25T17:23:37.874Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:37.874Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin jib","section":"","timestamp":"2023-02-25T17:23:37.879Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin kubernetes","section":"","timestamp":"2023-02-25T17:23:37.880Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.880Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.883Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin octant","section":"","timestamp":"2023-02-25T17:23:37.883Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin octant","section":"","timestamp":"2023-02-25T17:23:37.887Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin openfaas","section":"","timestamp":"2023-02-25T17:23:37.887Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin openfaas","section":"","timestamp":"2023-02-25T17:23:37.898Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:37.898Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin google-app-engine","section":"","timestamp":"2023-02-25T17:23:37.901Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:37.901Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin google-cloud-function","section":"","timestamp":"2023-02-25T17:23:37.904Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:37.904Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin local-google-cloud-functions","section":"","timestamp":"2023-02-25T17:23:37.906Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin exec","section":"","timestamp":"2023-02-25T17:23:37.907Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin exec","section":"","timestamp":"2023-02-25T17:23:37.909Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin npm-package","section":"","timestamp":"2023-02-25T17:23:37.909Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin npm-package","section":"","timestamp":"2023-02-25T17:23:37.912Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating plugin templated","section":"","timestamp":"2023-02-25T17:23:37.912Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Done loading plugin templated","section":"","timestamp":"2023-02-25T17:23:37.914Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded plugins: exec, container, templated, local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.915Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Processing 1 tasks: resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.916Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.916Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 1 dependencies for node resolve-provider.local-kubernetes: resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:37.917Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:37.917Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.container:","section":"","timestamp":"2023-02-25T17:23:37.918Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Partitioning into batches","section":"","timestamp":"2023-02-25T17:23:37.919Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Split into 1 batches","section":"","timestamp":"2023-02-25T17:23:37.919Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: this.index before processing","section":"","timestamp":"2023-02-25T17:23:37.920Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"---------------------------------------","section":"","timestamp":"2023-02-25T17:23:37.920Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"{}","section":"","timestamp":"2023-02-25T17:23:37.920Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing tasks...","section":"","timestamp":"2023-02-25T17:23:37.922Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Remaining tasks 2","section":"","timestamp":"2023-02-25T17:23:37.923Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Currently in progress [resolve-provider.container.23edded0-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:37.923Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task resolve-provider.container.23edded0-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.container","status":"active","uid":"23edded0-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:37.923Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.container.23edded0-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:37.923Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider container","section":"","timestamp":"2023-02-25T17:23:37.923Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating container config","section":"","timestamp":"2023-02-25T17:23:37.923Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on container","section":"","timestamp":"2023-02-25T17:23:37.924Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Creating ActionRouter with 4 configured providers","section":"","timestamp":"2023-02-25T17:23:37.924Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling 'configureProvider' handler on 'container'","section":"","timestamp":"2023-02-25T17:23:37.926Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Returned default 'configureProvider' handler for 'container'","section":"","timestamp":"2023-02-25T17:23:37.926Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'container'","section":"","timestamp":"2023-02-25T17:23:37.926Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating container config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:37.926Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring container provider is ready","section":"","timestamp":"2023-02-25T17:23:37.927Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for container","section":"","timestamp":"2023-02-25T17:23:37.927Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for container at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/container.json","section":"","timestamp":"2023-02-25T17:23:37.928Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Completed task resolve-provider.container.23edded0-b531-11ed-aa0d-6fe020002795 (took 0.01 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.container","status":"success","uid":"23edded0-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":10}},"section":"tasks","timestamp":"2023-02-25T17:23:37.933Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 1","section":"","timestamp":"2023-02-25T17:23:37.934Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task resolve-provider.local-kubernetes.23edb7c0-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.local-kubernetes","status":"active","uid":"23edb7c0-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:37.934Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.local-kubernetes.23edb7c0-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:37.934Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.935Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating local-kubernetes config","section":"","timestamp":"2023-02-25T17:23:37.936Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on local-kubernetes","section":"","timestamp":"2023-02-25T17:23:37.936Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:37.938Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Found 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:37.938Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'local-kubernetes'","section":"","timestamp":"2023-02-25T17:23:37.938Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Execing '/home/node/.garden/tools/kubectl/49eb930aa565a80f/kubectl --context=k3d-k3s-default config view --raw' in /home/node/.garden/tools/kubectl/49eb930aa565a80f","section":"","timestamp":"2023-02-25T17:23:37.939Z","level":"silly","allSections":["providers","providers"]}
{"msg":"An attempt to get kind version failed with Error: Command \"kind version\" failed with code ENOENT:","section":"","timestamp":"2023-02-25T17:23:38.018Z","level":"debug","allSections":["providers","providers"]}
{"msg":"Validating local-kubernetes config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:38.019Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating 'local-kubernetes' config against 'kubernetes' schema","section":"","timestamp":"2023-02-25T17:23:38.020Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring local-kubernetes provider is ready","section":"","timestamp":"2023-02-25T17:23:38.021Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for local-kubernetes","section":"","timestamp":"2023-02-25T17:23:38.022Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for local-kubernetes at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/local-kubernetes.json","section":"","timestamp":"2023-02-25T17:23:38.022Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Completed task resolve-provider.local-kubernetes.23edb7c0-b531-11ed-aa0d-6fe020002795 (took 0.098 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.local-kubernetes","status":"success","uid":"23edb7c0-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":98}},"section":"tasks","timestamp":"2023-02-25T17:23:38.032Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:38.032Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:38.033Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting status... - Cached","section":"providers","timestamp":"2023-02-25T17:23:38.033Z","level":"info","allSections":["providers","providers"]}
{"msg":"Run with --force-refresh to force a refresh of provider statuses.","section":"","timestamp":"2023-02-25T17:23:38.036Z","level":"info","allSections":["providers","providers"]}
{"msg":"Resolved providers: container, local-kubernetes","section":"","timestamp":"2023-02-25T17:23:38.039Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Resolving providers","section":"","timestamp":"2023-02-25T17:23:38.240Z","level":"silly","allSections":["providers"]}
{"msg":"Getting status...","section":"providers","timestamp":"2023-02-25T17:23:38.241Z","level":"info","allSections":["providers","providers"]}
{"msg":"TaskGraph: Processing 4 tasks: resolve-provider.exec,resolve-provider.container,resolve-provider.templated,resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:38.245Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.exec","section":"","timestamp":"2023-02-25T17:23:38.245Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:38.245Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.templated","section":"","timestamp":"2023-02-25T17:23:38.246Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node resolve-provider.local-kubernetes","section":"","timestamp":"2023-02-25T17:23:38.246Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.exec:","section":"","timestamp":"2023-02-25T17:23:38.246Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.container:","section":"","timestamp":"2023-02-25T17:23:38.247Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node resolve-provider.templated:","section":"","timestamp":"2023-02-25T17:23:38.247Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 1 dependencies for node resolve-provider.local-kubernetes: resolve-provider.container","section":"","timestamp":"2023-02-25T17:23:38.247Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Partitioning into batches","section":"","timestamp":"2023-02-25T17:23:38.247Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Split into 3 batches","section":"","timestamp":"2023-02-25T17:23:38.248Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: this.index before processing","section":"","timestamp":"2023-02-25T17:23:38.248Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"---------------------------------------","section":"","timestamp":"2023-02-25T17:23:38.248Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"{}","section":"","timestamp":"2023-02-25T17:23:38.248Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task resolve-provider.exec.241feb50-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.exec","status":"active","uid":"241feb50-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.249Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.241feb50-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.241feb52-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.250Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider exec","section":"","timestamp":"2023-02-25T17:23:38.250Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating exec config","section":"","timestamp":"2023-02-25T17:23:38.250Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on exec","section":"","timestamp":"2023-02-25T17:23:38.250Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Processing task resolve-provider.templated.241feb52-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.templated","status":"active","uid":"241feb52-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.250Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [resolve-provider.exec.241feb50-b531-11ed-aa0d-6fe020002795, resolve-provider.templated.241feb52-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.250Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving template strings for provider templated","section":"","timestamp":"2023-02-25T17:23:38.251Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating templated config","section":"","timestamp":"2023-02-25T17:23:38.251Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling configureProvider on templated","section":"","timestamp":"2023-02-25T17:23:38.251Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Calling 'configureProvider' handler on 'exec'","section":"","timestamp":"2023-02-25T17:23:38.253Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling 'configureProvider' handler on 'templated'","section":"","timestamp":"2023-02-25T17:23:38.253Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Returned default 'configureProvider' handler for 'exec'","section":"","timestamp":"2023-02-25T17:23:38.253Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Returned default 'configureProvider' handler for 'templated'","section":"","timestamp":"2023-02-25T17:23:38.254Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'exec'","section":"","timestamp":"2023-02-25T17:23:38.254Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called 'configureProvider' handler on 'templated'","section":"","timestamp":"2023-02-25T17:23:38.254Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Validating exec config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:38.254Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring exec provider is ready","section":"","timestamp":"2023-02-25T17:23:38.254Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Validating templated config returned from configureProvider handler","section":"","timestamp":"2023-02-25T17:23:38.254Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Ensuring templated provider is ready","section":"","timestamp":"2023-02-25T17:23:38.255Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for exec","section":"","timestamp":"2023-02-25T17:23:38.256Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for exec at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/exec.json","section":"","timestamp":"2023-02-25T17:23:38.256Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Getting status for templated","section":"","timestamp":"2023-02-25T17:23:38.256Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Checking provider status cache for templated at /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/cache/provider-statuses/templated.json","section":"","timestamp":"2023-02-25T17:23:38.256Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Completed task resolve-provider.templated.241feb52-b531-11ed-aa0d-6fe020002795 (took 0.031 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.templated","status":"success","uid":"241feb52-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":31}},"section":"tasks","timestamp":"2023-02-25T17:23:38.281Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 1","section":"","timestamp":"2023-02-25T17:23:38.282Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Completed task resolve-provider.exec.241feb50-b531-11ed-aa0d-6fe020002795 (took 0.035 sec)","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.exec","status":"success","uid":"241feb50-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51","durationMs":35}},"section":"tasks","timestamp":"2023-02-25T17:23:38.284Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:38.284Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:23:38.285Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting status... - Cached","section":"providers","timestamp":"2023-02-25T17:23:38.286Z","level":"info","allSections":["providers","providers"]}
{"msg":"Run with --force-refresh to force a refresh of provider statuses.","section":"","timestamp":"2023-02-25T17:23:38.290Z","level":"info","allSections":["providers","providers"]}
{"msg":"Resolved providers: exec, container, local-kubernetes, templated","section":"","timestamp":"2023-02-25T17:23:38.294Z","level":"silly","allSections":["providers","providers"]}
{"msg":"Scanning for configs","section":"","timestamp":"2023-02-25T17:23:38.294Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Scanning for configs in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:38.302Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Scanning project root at /garden/static/kubernetes/system\n→ Includes: **/*garden.y*ml\n→ Excludes: ../../../../workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/**/*,.git,.gitmodules,.garden/**/*,debug-info*/**","section":"","timestamp":"2023-02-25T17:23:38.302Z","level":"debug","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'diff-index --name-only HEAD /garden/static/kubernetes/system' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:38.304Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'ls-files --ignored --cached --exclude /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden --exclude-per-directory .gardenignore' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:38.326Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling git with args 'ls-files -s --others --cached --exclude /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden --exclude-per-directory .gardenignore :(glob)**/*garden.y*ml' in /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:38.358Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Found 11 files in project root /garden/static/kubernetes/system","section":"","timestamp":"2023-02-25T17:23:38.390Z","level":"debug","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/build-sync/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.391Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/default-backend/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.392Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/docker-daemon/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.392Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/docker-registry/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.392Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/ingress-class/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.393Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/ingress-controller/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.394Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/nfs-provisioner/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.394Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-new.garden.yml","section":"","timestamp":"2023-02-25T17:23:38.394Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-old.garden.yml","section":"","timestamp":"2023-02-25T17:23:38.394Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/registry-proxy/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.394Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Load module and workflow configs from /garden/static/kubernetes/system/util/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.395Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/default-backend/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.405Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/docker-daemon/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.411Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/build-sync/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.431Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/ingress-class/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.437Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/ingress-controller/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.442Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/nfs-provisioner/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.448Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-new.garden.yml","section":"","timestamp":"2023-02-25T17:23:38.454Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/nginx-kind/nginx-kind-old.garden.yml","section":"","timestamp":"2023-02-25T17:23:38.464Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/util/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.471Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/docker-registry/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.477Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Loaded module and workflow configs from /garden/static/kubernetes/system/registry-proxy/garden.yml","section":"","timestamp":"2023-02-25T17:23:38.481Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module build-sync","section":"","timestamp":"2023-02-25T17:23:38.499Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module default-backend","section":"","timestamp":"2023-02-25T17:23:38.499Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module docker-daemon","section":"","timestamp":"2023-02-25T17:23:38.499Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module docker-registry","section":"","timestamp":"2023-02-25T17:23:38.499Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:38.499Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.499Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:38.499Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:38.500Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:38.500Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module registry-proxy","section":"","timestamp":"2023-02-25T17:23:38.500Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Adding module util","section":"","timestamp":"2023-02-25T17:23:38.500Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Scanned and found 11 modules and 0 workflows","section":"","timestamp":"2023-02-25T17:23:38.500Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving 11 modules...","section":"graph","timestamp":"2023-02-25T17:23:38.500Z","level":"info","allSections":["providers","graph"]}
{"msg":"ModuleResolver: Loop 1","section":"","timestamp":"2023-02-25T17:23:38.517Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 11 leaves","section":"","timestamp":"2023-02-25T17:23:38.517Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node build-sync","section":"","timestamp":"2023-02-25T17:23:38.517Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config build-sync","section":"","timestamp":"2023-02-25T17:23:38.517Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node default-backend","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config default-backend","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node docker-daemon","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config docker-daemon","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node docker-registry","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config docker-registry","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.518Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.519Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:38.519Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:38.519Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:38.519Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:38.519Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:38.519Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:38.519Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node registry-proxy","section":"","timestamp":"2023-02-25T17:23:38.520Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config registry-proxy","section":"","timestamp":"2023-02-25T17:23:38.520Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process node util","section":"","timestamp":"2023-02-25T17:23:38.520Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Resolve config util","section":"","timestamp":"2023-02-25T17:23:38.520Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Calling configure handler for helm module 'build-sync'","section":"","timestamp":"2023-02-25T17:23:38.645Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for container module 'default-backend'","section":"","timestamp":"2023-02-25T17:23:38.645Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'docker-daemon'","section":"","timestamp":"2023-02-25T17:23:38.645Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'docker-registry'","section":"","timestamp":"2023-02-25T17:23:38.646Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for kubernetes module 'nginx-ingress-class'","section":"","timestamp":"2023-02-25T17:23:38.646Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'ingress-controller'","section":"","timestamp":"2023-02-25T17:23:38.647Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'nfs-provisioner'","section":"","timestamp":"2023-02-25T17:23:38.647Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for kubernetes module 'nginx-kind-new'","section":"","timestamp":"2023-02-25T17:23:38.647Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for kubernetes module 'nginx-kind-old'","section":"","timestamp":"2023-02-25T17:23:38.647Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'registry-proxy'","section":"","timestamp":"2023-02-25T17:23:38.648Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling configure handler for helm module 'util'","section":"","timestamp":"2023-02-25T17:23:38.648Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called configure handler for kubernetes module 'nginx-ingress-class'","section":"","timestamp":"2023-02-25T17:23:38.659Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called configure handler for kubernetes module 'nginx-kind-new'","section":"","timestamp":"2023-02-25T17:23:38.659Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Called configure handler for kubernetes module 'nginx-kind-old'","section":"","timestamp":"2023-02-25T17:23:38.659Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:38.659Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving module nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:38.659Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving module nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:38.660Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'build-sync'","section":"","timestamp":"2023-02-25T17:23:38.661Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module build-sync","section":"","timestamp":"2023-02-25T17:23:38.661Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for container module 'default-backend'","section":"","timestamp":"2023-02-25T17:23:38.662Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module default-backend","section":"","timestamp":"2023-02-25T17:23:38.663Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'docker-daemon'","section":"","timestamp":"2023-02-25T17:23:38.664Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module docker-daemon","section":"","timestamp":"2023-02-25T17:23:38.665Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'docker-registry'","section":"","timestamp":"2023-02-25T17:23:38.667Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module docker-registry","section":"","timestamp":"2023-02-25T17:23:38.667Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'ingress-controller'","section":"","timestamp":"2023-02-25T17:23:38.670Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.670Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'nfs-provisioner'","section":"","timestamp":"2023-02-25T17:23:38.672Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:38.672Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'registry-proxy'","section":"","timestamp":"2023-02-25T17:23:38.673Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module registry-proxy","section":"","timestamp":"2023-02-25T17:23:38.673Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Called configure handler for helm module 'util'","section":"","timestamp":"2023-02-25T17:23:38.674Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Resolving module util","section":"","timestamp":"2023-02-25T17:23:38.675Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nginx-ingress-class\"]","section":"","timestamp":"2023-02-25T17:23:38.675Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nginx-ingress-class","section":"","timestamp":"2023-02-25T17:23:38.676Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nginx-kind-new\"]","section":"","timestamp":"2023-02-25T17:23:38.676Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nginx-kind-new","section":"","timestamp":"2023-02-25T17:23:38.676Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nginx-kind-old\"]","section":"","timestamp":"2023-02-25T17:23:38.677Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nginx-kind-old","section":"","timestamp":"2023-02-25T17:23:38.677Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"build-sync\"]","section":"","timestamp":"2023-02-25T17:23:38.677Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module build-sync","section":"","timestamp":"2023-02-25T17:23:38.677Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"default-backend\"]","section":"","timestamp":"2023-02-25T17:23:38.678Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module default-backend","section":"","timestamp":"2023-02-25T17:23:38.678Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"docker-daemon\"]","section":"","timestamp":"2023-02-25T17:23:38.678Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module docker-daemon","section":"","timestamp":"2023-02-25T17:23:38.678Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"docker-registry\"]","section":"","timestamp":"2023-02-25T17:23:38.679Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module docker-registry","section":"","timestamp":"2023-02-25T17:23:38.679Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"ingress-controller\"]","section":"","timestamp":"2023-02-25T17:23:38.679Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.679Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"nfs-provisioner\"]","section":"","timestamp":"2023-02-25T17:23:38.680Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module nfs-provisioner","section":"","timestamp":"2023-02-25T17:23:38.680Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"registry-proxy\"]","section":"","timestamp":"2023-02-25T17:23:38.680Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module registry-proxy","section":"","timestamp":"2023-02-25T17:23:38.680Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: No cached value for key [\"moduleVersions\",\"util\"]","section":"","timestamp":"2023-02-25T17:23:38.681Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving version for module util","section":"","timestamp":"2023-02-25T17:23:38.681Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nginx-ingress-class\"]","section":"","timestamp":"2023-02-25T17:23:38.688Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nginx-kind-old\"]","section":"","timestamp":"2023-02-25T17:23:38.691Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"build-sync\"]","section":"","timestamp":"2023-02-25T17:23:38.694Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"default-backend\"]","section":"","timestamp":"2023-02-25T17:23:38.696Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"docker-daemon\"]","section":"","timestamp":"2023-02-25T17:23:38.698Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"docker-registry\"]","section":"","timestamp":"2023-02-25T17:23:38.701Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"ingress-controller\"]","section":"","timestamp":"2023-02-25T17:23:38.703Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nfs-provisioner\"]","section":"","timestamp":"2023-02-25T17:23:38.706Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"registry-proxy\"]","section":"","timestamp":"2023-02-25T17:23:38.708Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"util\"]","section":"","timestamp":"2023-02-25T17:23:38.710Z","level":"silly","allSections":["graph","providers"]}
{"msg":"TreeCache: Setting value for key [\"moduleVersions\",\"nginx-kind-new\"]","section":"","timestamp":"2023-02-25T17:23:38.712Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nginx-ingress-class resolved","section":"","timestamp":"2023-02-25T17:23:38.719Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.719Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nginx-kind-old resolved","section":"","timestamp":"2023-02-25T17:23:38.720Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.720Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module build-sync resolved","section":"","timestamp":"2023-02-25T17:23:38.721Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.721Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module default-backend resolved","section":"","timestamp":"2023-02-25T17:23:38.721Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.722Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module docker-daemon resolved","section":"","timestamp":"2023-02-25T17:23:38.722Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.722Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module docker-registry resolved","section":"","timestamp":"2023-02-25T17:23:38.722Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.722Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module ingress-controller resolved","section":"","timestamp":"2023-02-25T17:23:38.723Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.723Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nfs-provisioner resolved","section":"","timestamp":"2023-02-25T17:23:38.723Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.723Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module registry-proxy resolved","section":"","timestamp":"2023-02-25T17:23:38.726Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.726Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module util resolved","section":"","timestamp":"2023-02-25T17:23:38.727Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.727Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Module nginx-kind-new resolved","section":"","timestamp":"2023-02-25T17:23:38.733Z","level":"silly","allSections":["graph","providers"]}
{"msg":"ModuleResolver: Process 0 leaves","section":"","timestamp":"2023-02-25T17:23:38.733Z","level":"silly","allSections":["graph","providers"]}
{"msg":"Resolving 11 modules... - Done","section":"graph","timestamp":"2023-02-25T17:23:38.735Z","level":"info","allSections":["providers","graph"]}
{"msg":"TaskGraph: Processing 2 tasks: deploy.ingress-controller,deploy.default-backend","section":"","timestamp":"2023-02-25T17:23:38.739Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node deploy.ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.739Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node deploy.default-backend","section":"","timestamp":"2023-02-25T17:23:38.740Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 3 dependencies for node deploy.ingress-controller: get-service-status.ingress-controller,build.ingress-controller,deploy.default-backend","section":"","timestamp":"2023-02-25T17:23:38.741Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 2 dependencies for node deploy.default-backend: get-service-status.default-backend,build.default-backend","section":"","timestamp":"2023-02-25T17:23:38.741Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node get-service-status.ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.741Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node build.ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.742Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node get-service-status.default-backend","section":"","timestamp":"2023-02-25T17:23:38.742Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node build.default-backend","section":"","timestamp":"2023-02-25T17:23:38.743Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 1 dependencies for node get-service-status.ingress-controller: get-service-status.default-backend","section":"","timestamp":"2023-02-25T17:23:38.745Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 1 dependencies for node build.ingress-controller: stage-build.ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.745Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node get-service-status.default-backend:","section":"","timestamp":"2023-02-25T17:23:38.745Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 1 dependencies for node build.default-backend: stage-build.default-backend","section":"","timestamp":"2023-02-25T17:23:38.746Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node stage-build.ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.746Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Resolving dependencies for node stage-build.default-backend","section":"","timestamp":"2023-02-25T17:23:38.746Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node stage-build.ingress-controller:","section":"","timestamp":"2023-02-25T17:23:38.747Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Got 0 dependencies for node stage-build.default-backend:","section":"","timestamp":"2023-02-25T17:23:38.747Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Partitioning into batches","section":"","timestamp":"2023-02-25T17:23:38.748Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: Split into 1 batches","section":"","timestamp":"2023-02-25T17:23:38.749Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"TaskGraph: this.index before processing","section":"","timestamp":"2023-02-25T17:23:38.749Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"---------------------------------------","section":"","timestamp":"2023-02-25T17:23:38.749Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"{}","section":"","timestamp":"2023-02-25T17:23:38.749Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task get-service-status.default-backend.246b7342-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"get-service-status","key":"get-service-status.default-backend","status":"active","uid":"246b7342-b531-11ed-aa0d-6fe020002795","versionString":"v-2d58c28944"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.751Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [get-service-status.default-backend.246b7342-b531-11ed-aa0d-6fe020002795, stage-build.ingress-controller.246c3690-b531-11ed-aa0d-6fe020002795, stage-build.default-backend.246c3691-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.751Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task stage-build.ingress-controller.246c3690-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"stage-build","key":"stage-build.ingress-controller","status":"active","uid":"246c3690-b531-11ed-aa0d-6fe020002795","versionString":"v-9f251da908"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.754Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [get-service-status.default-backend.246b7342-b531-11ed-aa0d-6fe020002795, stage-build.ingress-controller.246c3690-b531-11ed-aa0d-6fe020002795, stage-build.default-backend.246c3691-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.754Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task stage-build.default-backend.246c3691-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"stage-build","key":"stage-build.default-backend","status":"active","uid":"246c3691-b531-11ed-aa0d-6fe020002795","versionString":"v-24864f339e"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.754Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [get-service-status.default-backend.246b7342-b531-11ed-aa0d-6fe020002795, stage-build.ingress-controller.246c3690-b531-11ed-aa0d-6fe020002795, stage-build.default-backend.246c3691-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.754Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting getServiceStatus handler for service default-backend","section":"","timestamp":"2023-02-25T17:23:38.755Z","level":"silly","allSections":["providers"]}
{"msg":"Calling getServiceStatus handler for service default-backend","section":"","timestamp":"2023-02-25T17:23:38.756Z","level":"silly","allSections":["providers"]}
{"msg":"Syncing 0 files from ingress-controller to ../../../../workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller (and removing any extraneous files)","section":"","timestamp":"2023-02-25T17:23:38.758Z","level":"debug","allSections":["providers"]}
{"msg":"Syncing 0 files from default-backend to ../../../../workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/default-backend (and removing any extraneous files)","section":"","timestamp":"2023-02-25T17:23:38.758Z","level":"debug","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource apps/v1/Deployment/default-backend","section":"","timestamp":"2023-02-25T17:23:38.759Z","level":"silly","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource v1/Service/default-backend","section":"","timestamp":"2023-02-25T17:23:38.759Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/apis/apps/v1/namespaces/garden-system/deployments/default-backend","section":"","timestamp":"2023-02-25T17:23:38.760Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/api/v1/namespaces/garden-system/services/default-backend","section":"","timestamp":"2023-02-25T17:23:38.761Z","level":"silly","allSections":["providers"]}
{"msg":"Completed task stage-build.default-backend.246c3691-b531-11ed-aa0d-6fe020002795 (took 0.031 sec)","metadata":{"task":{"type":"stage-build","key":"stage-build.default-backend","status":"success","uid":"246c3691-b531-11ed-aa0d-6fe020002795","versionString":"v-24864f339e","durationMs":31}},"section":"tasks","timestamp":"2023-02-25T17:23:38.785Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 7","section":"","timestamp":"2023-02-25T17:23:38.785Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task build.default-backend.246b9a50-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"build","key":"build.default-backend","status":"active","uid":"246b9a50-b531-11ed-aa0d-6fe020002795","versionString":"v-24864f339e"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.786Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [get-service-status.default-backend.246b7342-b531-11ed-aa0d-6fe020002795, stage-build.ingress-controller.246c3690-b531-11ed-aa0d-6fe020002795, build.default-backend.246b9a50-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.786Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Completed task stage-build.ingress-controller.246c3690-b531-11ed-aa0d-6fe020002795 (took 0.032 sec)","metadata":{"task":{"type":"stage-build","key":"stage-build.ingress-controller","status":"success","uid":"246c3690-b531-11ed-aa0d-6fe020002795","versionString":"v-9f251da908","durationMs":32}},"section":"tasks","timestamp":"2023-02-25T17:23:38.786Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 6","section":"","timestamp":"2023-02-25T17:23:38.786Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task build.ingress-controller.246b7341-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"build","key":"build.ingress-controller","status":"active","uid":"246b7341-b531-11ed-aa0d-6fe020002795","versionString":"v-9f251da908"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.787Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [get-service-status.default-backend.246b7342-b531-11ed-aa0d-6fe020002795, build.default-backend.246b9a50-b531-11ed-aa0d-6fe020002795, build.ingress-controller.246b7341-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.787Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting build status for v-24864f339e...","section":"default-backend","timestamp":"2023-02-25T17:23:38.787Z","level":"info","allSections":["providers","default-backend"]}
{"msg":"Getting 'getBuildStatus' handler for module 'default-backend' (type 'container')","section":"","timestamp":"2023-02-25T17:23:38.790Z","level":"silly","allSections":["providers"]}
{"msg":"Getting build status for v-9f251da908...","section":"ingress-controller","timestamp":"2023-02-25T17:23:38.790Z","level":"info","allSections":["providers","ingress-controller"]}
{"msg":"Getting 'getBuildStatus' handler for module 'ingress-controller' (type 'helm')","section":"","timestamp":"2023-02-25T17:23:38.794Z","level":"silly","allSections":["providers"]}
{"msg":"Calling getBuildStatus handler for module default-backend","section":"","timestamp":"2023-02-25T17:23:38.796Z","level":"silly","allSections":["providers"]}
{"msg":"Calling getBuildStatus handler for module ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.797Z","level":"silly","allSections":["providers"]}
{"msg":"Getting build status for v-24864f339e... - Already built","section":"default-backend","timestamp":"2023-02-25T17:23:38.797Z","level":"info","allSections":["providers","default-backend"]}
{"msg":"Building version v-9f251da908...","section":"ingress-controller","timestamp":"2023-02-25T17:23:38.800Z","level":"info","allSections":["providers","ingress-controller"]}
{"msg":"Completed task build.default-backend.246b9a50-b531-11ed-aa0d-6fe020002795 (took 0.017 sec)","metadata":{"task":{"type":"build","key":"build.default-backend","status":"success","uid":"246b9a50-b531-11ed-aa0d-6fe020002795","versionString":"v-24864f339e","durationMs":17}},"section":"tasks","timestamp":"2023-02-25T17:23:38.803Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 5","section":"","timestamp":"2023-02-25T17:23:38.803Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting 'build' handler for module 'ingress-controller' (type 'helm')","section":"","timestamp":"2023-02-25T17:23:38.807Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Calling build handler for module ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.813Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Fetching chart...","section":"","timestamp":"2023-02-25T17:23:38.816Z","level":"debug","allSections":["ingress-controller","providers"]}
{"msg":"Getting currently deployed resource statuses...","section":"","timestamp":"2023-02-25T17:23:38.818Z","level":"debug","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource apps/v1/Deployment/default-backend","section":"","timestamp":"2023-02-25T17:23:38.822Z","level":"silly","allSections":["providers"]}
{"msg":"Fetching Kubernetes resource v1/Service/default-backend","section":"","timestamp":"2023-02-25T17:23:38.822Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/apis/apps/v1/namespaces/garden-system/deployments/default-backend","section":"","timestamp":"2023-02-25T17:23:38.823Z","level":"silly","allSections":["providers"]}
{"msg":"GET https://0.0.0.0:6443/api/v1/namespaces/garden-system/services/default-backend","section":"","timestamp":"2023-02-25T17:23:38.823Z","level":"silly","allSections":["providers"]}
{"msg":"Execing '/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default pull ingress-nginx --untar --untardir /tmp/tmp-25118-vw19phKJQeE4 --version 4.0.13 --repo https://kubernetes.github.io/ingress-nginx' in /tmp/tmp-25118-vw19phKJQeE4","section":"","timestamp":"2023-02-25T17:23:38.850Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Comparing expected and deployed resources...","section":"","timestamp":"2023-02-25T17:23:38.867Z","level":"verbose","allSections":["providers"]}
{"msg":"All resources match.","section":"","timestamp":"2023-02-25T17:23:38.869Z","level":"verbose","allSections":["providers"]}
{"msg":"Completed task get-service-status.default-backend.246b7342-b531-11ed-aa0d-6fe020002795 (took 0.124 sec)","metadata":{"task":{"type":"get-service-status","key":"get-service-status.default-backend","status":"success","uid":"246b7342-b531-11ed-aa0d-6fe020002795","versionString":"v-2d58c28944","durationMs":124}},"section":"tasks","timestamp":"2023-02-25T17:23:38.875Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 4","section":"","timestamp":"2023-02-25T17:23:38.875Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task get-service-status.ingress-controller.246b7340-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"get-service-status","key":"get-service-status.ingress-controller","status":"active","uid":"246b7340-b531-11ed-aa0d-6fe020002795","versionString":"v-b5ac3ef2a2"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.875Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [build.ingress-controller.246b7341-b531-11ed-aa0d-6fe020002795, get-service-status.ingress-controller.246b7340-b531-11ed-aa0d-6fe020002795, deploy.default-backend.246b4c31-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.876Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task deploy.default-backend.246b4c31-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"deploy","key":"deploy.default-backend","status":"active","uid":"246b4c31-b531-11ed-aa0d-6fe020002795","versionString":"v-2d58c28944"}},"section":"tasks","timestamp":"2023-02-25T17:23:38.879Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [build.ingress-controller.246b7341-b531-11ed-aa0d-6fe020002795, get-service-status.ingress-controller.246b7340-b531-11ed-aa0d-6fe020002795, deploy.default-backend.246b4c31-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:38.879Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Getting getServiceStatus handler for service ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.880Z","level":"silly","allSections":["providers"]}
{"msg":"Deploying version v-2d58c28944...","section":"default-backend","timestamp":"2023-02-25T17:23:38.880Z","level":"info","allSections":["providers","default-backend"]}
{"msg":"Deploying version v-2d58c28944... - Already deployed","section":"default-backend","timestamp":"2023-02-25T17:23:38.883Z","level":"info","allSections":["providers","default-backend"]}
{"msg":"Completed task deploy.default-backend.246b4c31-b531-11ed-aa0d-6fe020002795 (took 0.012 sec)","metadata":{"task":{"type":"deploy","key":"deploy.default-backend","status":"success","uid":"246b4c31-b531-11ed-aa0d-6fe020002795","versionString":"v-2d58c28944","durationMs":12}},"section":"tasks","timestamp":"2023-02-25T17:23:38.891Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 3","section":"","timestamp":"2023-02-25T17:23:38.891Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Calling getServiceStatus handler for service ingress-controller","section":"","timestamp":"2023-02-25T17:23:38.893Z","level":"silly","allSections":["providers"]}
{"msg":"Getting the release status for garden-nginx","section":"","timestamp":"2023-02-25T17:23:38.894Z","level":"silly","allSections":["providers"]}
{"msg":"Execing '/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system status garden-nginx --output json' in /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64","section":"","timestamp":"2023-02-25T17:23:38.907Z","level":"silly","allSections":["providers"]}
{"msg":"Completed task get-service-status.ingress-controller.246b7340-b531-11ed-aa0d-6fe020002795 (took 0.117 sec)","metadata":{"task":{"type":"get-service-status","key":"get-service-status.ingress-controller","status":"success","uid":"246b7340-b531-11ed-aa0d-6fe020002795","versionString":"v-b5ac3ef2a2","durationMs":117}},"section":"tasks","timestamp":"2023-02-25T17:23:38.992Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 2","section":"","timestamp":"2023-02-25T17:23:38.993Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Building version v-9f251da908... - Done (took 2.6 sec)","section":"ingress-controller","timestamp":"2023-02-25T17:23:41.393Z","level":"info","allSections":["providers","ingress-controller"]}
{"msg":"Completed task build.ingress-controller.246b7341-b531-11ed-aa0d-6fe020002795 (took 2.611 sec)","metadata":{"task":{"type":"build","key":"build.ingress-controller","status":"success","uid":"246b7341-b531-11ed-aa0d-6fe020002795","versionString":"v-9f251da908","durationMs":2611}},"section":"tasks","timestamp":"2023-02-25T17:23:41.398Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 1","section":"","timestamp":"2023-02-25T17:23:41.398Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Processing task deploy.ingress-controller.246b4c30-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"deploy","key":"deploy.ingress-controller","status":"active","uid":"246b4c30-b531-11ed-aa0d-6fe020002795","versionString":"v-b5ac3ef2a2"}},"section":"tasks","timestamp":"2023-02-25T17:23:41.398Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Currently in progress [deploy.ingress-controller.246b4c30-b531-11ed-aa0d-6fe020002795]","section":"","timestamp":"2023-02-25T17:23:41.399Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Deploying version v-b5ac3ef2a2...","section":"ingress-controller","timestamp":"2023-02-25T17:23:41.399Z","level":"info","allSections":["providers","ingress-controller"]}
{"msg":"Getting deployService handler for service ingress-controller","section":"","timestamp":"2023-02-25T17:23:41.404Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Calling deployService handler for service ingress-controller","section":"","timestamp":"2023-02-25T17:23:41.407Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Writing chart values to /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml","section":"","timestamp":"2023-02-25T17:23:41.410Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Getting the release status for garden-nginx","section":"","timestamp":"2023-02-25T17:23:41.432Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Execing '/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system status garden-nginx --output json' in /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64","section":"","timestamp":"2023-02-25T17:23:41.434Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Installing Helm release garden-nginx","section":"","timestamp":"2023-02-25T17:23:41.508Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"Execing '/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system install garden-nginx /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx --namespace garden-system --timeout 300s --values /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml --atomic' in /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64","section":"","timestamp":"2023-02-25T17:23:41.509Z","level":"silly","allSections":["ingress-controller","providers"]}
{"msg":"[helm]: Error: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition","section":"","timestamp":"2023-02-25T17:28:42.616Z","level":"verbose","allSections":["ingress-controller","providers"]}
{"msg":"Deploying version v-b5ac3ef2a2...","section":"ingress-controller","timestamp":"2023-02-25T17:28:42.621Z","level":"info","allSections":["providers","ingress-controller"]}
{"msg":"Failed deploying service 'ingress-controller' (from module 'ingress-controller'). Here is the output:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nCommand \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system install garden-nginx /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx --namespace garden-system --timeout 300s --values /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml --atomic\" failed with code 1:\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━","section":"","timestamp":"2023-02-25T17:28:42.728Z","level":"debug","allSections":["garden system","providers"],"errorDetail":"Error: Command \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system install garden-nginx /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx --namespace garden-system --timeout 300s --values /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml --atomic\" failed with code 1:\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n    at makeError (/snapshot/project/tmp/pkg/cli/node_modules/execa/lib/error.js:59:11)\n    at handlePromise (/snapshot/project/tmp/pkg/cli/node_modules/execa/index.js:114:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at exec (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/util/util.ts:215:17)\n    at PluginTool.stdout (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/util/ext-tools.ts:90:19)\n    at Object.deployHelmService (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/helm/deployment.ts:111:5)\n    at /snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:1325:24\n    at ActionRouter.callServiceHandler (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:1145:40)\n    at ActionRouter.deployService (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:585:24)\n    at wrapped.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/tasks/deploy.ts:183:18)\n    at TaskNode.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:801:20)\n    at wrapped.processNode (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:436:18)\n\nError Details:\n\nshortMessage: >-\n  Command failed with exit code 1:\n  /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context\n  k3d-k3s-default --namespace garden-system install garden-nginx\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n  --namespace garden-system --timeout 300s --values\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n  --atomic\ncommand: >-\n  /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context\n  k3d-k3s-default --namespace garden-system install garden-nginx\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n  --namespace garden-system --timeout 300s --values\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n  --atomic\nexitCode: 1\nstdout: ''\nstderr: >-\n  Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n  uninstalled due to atomic being set: timed out waiting for the condition\nall: >-\n  Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n  uninstalled due to atomic being set: timed out waiting for the condition\nfailed: true\ntimedOut: false\nisCanceled: false\nkilled: false\n"}
{"msg":"Error: Command \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system install garden-nginx /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx --namespace garden-system --timeout 300s --values /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml --atomic\" failed with code 1:\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n    at makeError (/snapshot/project/tmp/pkg/cli/node_modules/execa/lib/error.js:59:11)\n    at handlePromise (/snapshot/project/tmp/pkg/cli/node_modules/execa/index.js:114:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at exec (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/util/util.ts:215:17)\n    at PluginTool.stdout (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/util/ext-tools.ts:90:19)\n    at Object.deployHelmService (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/helm/deployment.ts:111:5)\n    at /snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:1325:24\n    at ActionRouter.callServiceHandler (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:1145:40)\n    at ActionRouter.deployService (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:585:24)\n    at wrapped.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/tasks/deploy.ts:183:18)\n    at TaskNode.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:801:20)\n    at wrapped.processNode (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:436:18)\n\nError Details:\n\nshortMessage: >-\n  Command failed with exit code 1:\n  /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context\n  k3d-k3s-default --namespace garden-system install garden-nginx\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n  --namespace garden-system --timeout 300s --values\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n  --atomic\ncommand: >-\n  /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context\n  k3d-k3s-default --namespace garden-system install garden-nginx\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n  --namespace garden-system --timeout 300s --values\n  /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n  --atomic\nexitCode: 1\nstdout: ''\nstderr: >-\n  Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n  uninstalled due to atomic being set: timed out waiting for the condition\nall: >-\n  Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n  uninstalled due to atomic being set: timed out waiting for the condition\nfailed: true\ntimedOut: false\nisCanceled: false\nkilled: false","section":"","timestamp":"2023-02-25T17:28:42.730Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Failed task deploy.ingress-controller.246b4c30-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"deploy","key":"deploy.ingress-controller","status":"error","uid":"246b4c30-b531-11ed-aa0d-6fe020002795","versionString":"v-b5ac3ef2a2"}},"section":"tasks","timestamp":"2023-02-25T17:28:42.731Z","level":"silly","allSections":["garden system","providers","tasks"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:28:42.731Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:28:42.731Z","level":"silly","allSections":["garden system","providers"]}
{"msg":"Failed resolving provider local-kubernetes. Here is the output:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nlocal-kubernetes — an error occurred when configuring environment:\nError: Command \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system install garden-nginx /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx --namespace garden-system --timeout 300s --values /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml --atomic\" failed with code 1:\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━","section":"","timestamp":"2023-02-25T17:28:42.733Z","level":"error","allSections":[],"errorDetail":"Error: local-kubernetes — an error occurred when configuring environment:\nError: Command \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system install garden-nginx /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx --namespace garden-system --timeout 300s --values /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml --atomic\" failed with code 1:\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n    at prepareSystemServices (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/system.ts:141:13)\n    at prepareSystem (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/init.ts:343:3)\n    at Object.prepareEnvironment (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/init.ts:236:3)\n    at /snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:1293:24\n    at wrapped.ensurePrepared (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/tasks/resolve-provider.ts:358:22)\n    at wrapped.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/tasks/resolve-provider.ts:241:20)\n    at TaskNode.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:801:20)\n    at wrapped.processNode (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:436:18)\n\nError Details:\n\nerror:\n  shortMessage: >-\n    Command failed with exit code 1:\n    /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n    --kube-context k3d-k3s-default --namespace garden-system install\n    garden-nginx\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n    --namespace garden-system --timeout 300s --values\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n    --atomic\n  command: >-\n    /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n    --kube-context k3d-k3s-default --namespace garden-system install\n    garden-nginx\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n    --namespace garden-system --timeout 300s --values\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n    --atomic\n  exitCode: 1\n  stdout: ''\n  stderr: >-\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition\n  all: >-\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition\n  failed: true\n  timedOut: false\n  isCanceled: false\n  killed: false\nresults:\n  stage-build.default-backend:\n    type: stage-build\n    key: stage-build.default-backend\n    name: default-backend\n    description: staging build for default-backend\n    completedAt: '2023-02-25T17:23:38.785Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output: {}\n    dependencyResults: {}\n    version: v-24864f339e\n    startedAt: '2023-02-25T17:23:38.754Z'\n  stage-build.ingress-controller:\n    type: stage-build\n    key: stage-build.ingress-controller\n    name: ingress-controller\n    description: staging build for ingress-controller\n    completedAt: '2023-02-25T17:23:38.785Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output: {}\n    dependencyResults: {}\n    version: v-9f251da908\n    startedAt: '2023-02-25T17:23:38.754Z'\n  build.default-backend:\n    type: build\n    key: build.default-backend\n    name: default-backend\n    description: building default-backend\n    completedAt: '2023-02-25T17:23:38.803Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      fresh: false\n    dependencyResults:\n      stage-build.default-backend:\n        type: stage-build\n        key: stage-build.default-backend\n        name: default-backend\n        description: staging build for default-backend\n        completedAt: '2023-02-25T17:23:38.785Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output: {}\n        dependencyResults: {}\n        version: v-24864f339e\n        startedAt: '2023-02-25T17:23:38.754Z'\n    version: v-24864f339e\n    startedAt: '2023-02-25T17:23:38.786Z'\n  get-service-status.default-backend:\n    type: get-service-status\n    key: get-service-status.default-backend\n    name: default-backend\n    description: >-\n      getting status for service 'default-backend' (from module\n      'default-backend')\n    completedAt: '2023-02-25T17:23:38.871Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      forwardablePorts:\n        - name: http\n          protocol: TCP\n          targetPort: 80\n      ingresses: []\n      state: ready\n      namespaceStatuses:\n        - pluginName: local-kubernetes\n          namespaceName: garden-system\n          state: ready\n      version: v-2d58c28944\n      detail:\n        remoteResources:\n          - kind: Deployment\n            apiVersion: apps/v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: 661181cf-6532-441f-bf03-d86c109f6a14\n              resourceVersion: '1110'\n              generation: 1\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                deployment.kubernetes.io/revision: '1'\n                garden.io/configured.replicas: '1'\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/configured.replicas': {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:progressDeadlineSeconds': {}\n                      'f:replicas': {}\n                      'f:revisionHistoryLimit': {}\n                      'f:selector': {}\n                      'f:strategy':\n                        'f:rollingUpdate':\n                          .: {}\n                          'f:maxSurge': {}\n                          'f:maxUnavailable': {}\n                        'f:type': {}\n                      'f:template':\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:containers':\n                            'k:{\"name\":\"default-backend\"}':\n                              .: {}\n                              'f:env':\n                                .: {}\n                                'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"GARDEN_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"POD_HOST_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAMESPACE\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NODE_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_UID\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                              'f:image': {}\n                              'f:imagePullPolicy': {}\n                              'f:name': {}\n                              'f:ports':\n                                .: {}\n                                'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                  .: {}\n                                  'f:containerPort': {}\n                                  'f:name': {}\n                                  'f:protocol': {}\n                              'f:resources':\n                                .: {}\n                                'f:limits':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                                'f:requests':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                              'f:securityContext':\n                                .: {}\n                                'f:allowPrivilegeEscalation': {}\n                              'f:terminationMessagePath': {}\n                              'f:terminationMessagePolicy': {}\n                          'f:dnsPolicy': {}\n                          'f:restartPolicy': {}\n                          'f:schedulerName': {}\n                          'f:securityContext': {}\n                          'f:terminationGracePeriodSeconds': {}\n                - manager: k3s\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:09Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        'f:deployment.kubernetes.io/revision': {}\n                    'f:status':\n                      'f:availableReplicas': {}\n                      'f:conditions':\n                        .: {}\n                        'k:{\"type\":\"Available\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                        'k:{\"type\":\"Progressing\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                      'f:observedGeneration': {}\n                      'f:readyReplicas': {}\n                      'f:replicas': {}\n                      'f:updatedReplicas': {}\n                  subresource: status\n            spec:\n              replicas: 1\n              selector:\n                matchLabels:\n                  service: default-backend\n              template:\n                metadata:\n                  creationTimestamp: null\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                spec:\n                  containers:\n                    - name: default-backend\n                      image: 'gardendev/default-backend:v0.1'\n                      ports:\n                        - name: http\n                          containerPort: 80\n                          protocol: TCP\n                      env:\n                        - name: GARDEN_VERSION\n                          value: v-2d58c28944\n                        - name: GARDEN_MODULE_VERSION\n                          value: v-24864f339e\n                        - name: POD_HOST_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.hostIP\n                        - name: POD_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.podIP\n                        - name: POD_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.name\n                        - name: POD_NAMESPACE\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.namespace\n                        - name: POD_NODE_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.nodeName\n                        - name: POD_SERVICE_ACCOUNT\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.serviceAccountName\n                        - name: POD_UID\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.uid\n                      resources:\n                        limits:\n                          cpu: '1'\n                          memory: 1Gi\n                        requests:\n                          cpu: 10m\n                          memory: 90Mi\n                      terminationMessagePath: /dev/termination-log\n                      terminationMessagePolicy: File\n                      imagePullPolicy: IfNotPresent\n                      securityContext:\n                        allowPrivilegeEscalation: false\n                  restartPolicy: Always\n                  terminationGracePeriodSeconds: 5\n                  dnsPolicy: ClusterFirst\n                  securityContext: {}\n                  schedulerName: default-scheduler\n              strategy:\n                type: RollingUpdate\n                rollingUpdate:\n                  maxUnavailable: 1\n                  maxSurge: 1\n              revisionHistoryLimit: 3\n              progressDeadlineSeconds: 600\n            status:\n              observedGeneration: 1\n              replicas: 1\n              updatedReplicas: 1\n              readyReplicas: 1\n              availableReplicas: 1\n              conditions:\n                - type: Available\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:04Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: MinimumReplicasAvailable\n                  message: Deployment has minimum availability.\n                - type: Progressing\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:09Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: NewReplicaSetAvailable\n                  message: >-\n                    ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                    progressed.\n          - kind: Service\n            apiVersion: v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: ea9b7635-4491-49de-9fea-041c64bee19c\n              resourceVersion: '1088'\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:internalTrafficPolicy': {}\n                      'f:ports':\n                        .: {}\n                        'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                          .: {}\n                          'f:name': {}\n                          'f:port': {}\n                          'f:protocol': {}\n                          'f:targetPort': {}\n                      'f:selector': {}\n                      'f:sessionAffinity': {}\n                      'f:type': {}\n            spec:\n              ports:\n                - name: http\n                  protocol: TCP\n                  port: 80\n                  targetPort: 80\n              selector:\n                service: default-backend\n              clusterIP: 10.43.113.188\n              clusterIPs:\n                - 10.43.113.188\n              type: ClusterIP\n              sessionAffinity: None\n              ipFamilies:\n                - IPv4\n              ipFamilyPolicy: SingleStack\n              internalTrafficPolicy: Cluster\n            status:\n              loadBalancer: {}\n        workload:\n          kind: Deployment\n          apiVersion: apps/v1\n          metadata:\n            name: default-backend\n            annotations:\n              garden.io/configured.replicas: '1'\n              garden.io/generated: 'true'\n              garden.io/version: v-2d58c28944\n            namespace: garden-system\n            labels:\n              module: default-backend\n              service: default-backend\n          spec:\n            selector:\n              matchLabels:\n                service: default-backend\n            template:\n              metadata:\n                annotations:\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                containers:\n                  - name: default-backend\n                    image: 'gardendev/default-backend:v0.1'\n                    env:\n                      - name: GARDEN_VERSION\n                        value: v-2d58c28944\n                      - name: GARDEN_MODULE_VERSION\n                        value: v-24864f339e\n                      - name: POD_HOST_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.hostIP\n                      - name: POD_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.podIP\n                      - name: POD_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.name\n                      - name: POD_NAMESPACE\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.namespace\n                      - name: POD_NODE_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.nodeName\n                      - name: POD_SERVICE_ACCOUNT\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.serviceAccountName\n                      - name: POD_UID\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.uid\n                    ports:\n                      - name: http\n                        protocol: TCP\n                        containerPort: 80\n                    resources:\n                      requests:\n                        cpu: 10m\n                        memory: 90Mi\n                      limits:\n                        memory: 1Gi\n                        cpu: '1'\n                    imagePullPolicy: IfNotPresent\n                    securityContext:\n                      allowPrivilegeEscalation: false\n                restartPolicy: Always\n                terminationGracePeriodSeconds: 5\n                dnsPolicy: ClusterFirst\n            replicas: 1\n            strategy:\n              type: RollingUpdate\n              rollingUpdate:\n                maxUnavailable: 1\n                maxSurge: 1\n            revisionHistoryLimit: 3\n      devMode: false\n      localMode: false\n      outputs: {}\n    dependencyResults: {}\n    version: v-2d58c28944\n    startedAt: '2023-02-25T17:23:38.751Z'\n  deploy.default-backend:\n    type: deploy\n    key: deploy.default-backend\n    name: default-backend\n    description: deploying service 'default-backend' (from module 'default-backend')\n    completedAt: '2023-02-25T17:23:38.889Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      forwardablePorts:\n        - name: http\n          protocol: TCP\n          targetPort: 80\n      ingresses: []\n      state: ready\n      namespaceStatuses:\n        - pluginName: local-kubernetes\n          namespaceName: garden-system\n          state: ready\n      version: v-2d58c28944\n      detail:\n        remoteResources:\n          - kind: Deployment\n            apiVersion: apps/v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: 661181cf-6532-441f-bf03-d86c109f6a14\n              resourceVersion: '1110'\n              generation: 1\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                deployment.kubernetes.io/revision: '1'\n                garden.io/configured.replicas: '1'\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/configured.replicas': {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:progressDeadlineSeconds': {}\n                      'f:replicas': {}\n                      'f:revisionHistoryLimit': {}\n                      'f:selector': {}\n                      'f:strategy':\n                        'f:rollingUpdate':\n                          .: {}\n                          'f:maxSurge': {}\n                          'f:maxUnavailable': {}\n                        'f:type': {}\n                      'f:template':\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:containers':\n                            'k:{\"name\":\"default-backend\"}':\n                              .: {}\n                              'f:env':\n                                .: {}\n                                'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"GARDEN_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"POD_HOST_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAMESPACE\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NODE_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_UID\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                              'f:image': {}\n                              'f:imagePullPolicy': {}\n                              'f:name': {}\n                              'f:ports':\n                                .: {}\n                                'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                  .: {}\n                                  'f:containerPort': {}\n                                  'f:name': {}\n                                  'f:protocol': {}\n                              'f:resources':\n                                .: {}\n                                'f:limits':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                                'f:requests':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                              'f:securityContext':\n                                .: {}\n                                'f:allowPrivilegeEscalation': {}\n                              'f:terminationMessagePath': {}\n                              'f:terminationMessagePolicy': {}\n                          'f:dnsPolicy': {}\n                          'f:restartPolicy': {}\n                          'f:schedulerName': {}\n                          'f:securityContext': {}\n                          'f:terminationGracePeriodSeconds': {}\n                - manager: k3s\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:09Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        'f:deployment.kubernetes.io/revision': {}\n                    'f:status':\n                      'f:availableReplicas': {}\n                      'f:conditions':\n                        .: {}\n                        'k:{\"type\":\"Available\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                        'k:{\"type\":\"Progressing\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                      'f:observedGeneration': {}\n                      'f:readyReplicas': {}\n                      'f:replicas': {}\n                      'f:updatedReplicas': {}\n                  subresource: status\n            spec:\n              replicas: 1\n              selector:\n                matchLabels:\n                  service: default-backend\n              template:\n                metadata:\n                  creationTimestamp: null\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                spec:\n                  containers:\n                    - name: default-backend\n                      image: 'gardendev/default-backend:v0.1'\n                      ports:\n                        - name: http\n                          containerPort: 80\n                          protocol: TCP\n                      env:\n                        - name: GARDEN_VERSION\n                          value: v-2d58c28944\n                        - name: GARDEN_MODULE_VERSION\n                          value: v-24864f339e\n                        - name: POD_HOST_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.hostIP\n                        - name: POD_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.podIP\n                        - name: POD_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.name\n                        - name: POD_NAMESPACE\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.namespace\n                        - name: POD_NODE_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.nodeName\n                        - name: POD_SERVICE_ACCOUNT\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.serviceAccountName\n                        - name: POD_UID\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.uid\n                      resources:\n                        limits:\n                          cpu: '1'\n                          memory: 1Gi\n                        requests:\n                          cpu: 10m\n                          memory: 90Mi\n                      terminationMessagePath: /dev/termination-log\n                      terminationMessagePolicy: File\n                      imagePullPolicy: IfNotPresent\n                      securityContext:\n                        allowPrivilegeEscalation: false\n                  restartPolicy: Always\n                  terminationGracePeriodSeconds: 5\n                  dnsPolicy: ClusterFirst\n                  securityContext: {}\n                  schedulerName: default-scheduler\n              strategy:\n                type: RollingUpdate\n                rollingUpdate:\n                  maxUnavailable: 1\n                  maxSurge: 1\n              revisionHistoryLimit: 3\n              progressDeadlineSeconds: 600\n            status:\n              observedGeneration: 1\n              replicas: 1\n              updatedReplicas: 1\n              readyReplicas: 1\n              availableReplicas: 1\n              conditions:\n                - type: Available\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:04Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: MinimumReplicasAvailable\n                  message: Deployment has minimum availability.\n                - type: Progressing\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:09Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: NewReplicaSetAvailable\n                  message: >-\n                    ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                    progressed.\n          - kind: Service\n            apiVersion: v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: ea9b7635-4491-49de-9fea-041c64bee19c\n              resourceVersion: '1088'\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:internalTrafficPolicy': {}\n                      'f:ports':\n                        .: {}\n                        'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                          .: {}\n                          'f:name': {}\n                          'f:port': {}\n                          'f:protocol': {}\n                          'f:targetPort': {}\n                      'f:selector': {}\n                      'f:sessionAffinity': {}\n                      'f:type': {}\n            spec:\n              ports:\n                - name: http\n                  protocol: TCP\n                  port: 80\n                  targetPort: 80\n              selector:\n                service: default-backend\n              clusterIP: 10.43.113.188\n              clusterIPs:\n                - 10.43.113.188\n              type: ClusterIP\n              sessionAffinity: None\n              ipFamilies:\n                - IPv4\n              ipFamilyPolicy: SingleStack\n              internalTrafficPolicy: Cluster\n            status:\n              loadBalancer: {}\n        workload:\n          kind: Deployment\n          apiVersion: apps/v1\n          metadata:\n            name: default-backend\n            annotations:\n              garden.io/configured.replicas: '1'\n              garden.io/generated: 'true'\n              garden.io/version: v-2d58c28944\n            namespace: garden-system\n            labels:\n              module: default-backend\n              service: default-backend\n          spec:\n            selector:\n              matchLabels:\n                service: default-backend\n            template:\n              metadata:\n                annotations:\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                containers:\n                  - name: default-backend\n                    image: 'gardendev/default-backend:v0.1'\n                    env:\n                      - name: GARDEN_VERSION\n                        value: v-2d58c28944\n                      - name: GARDEN_MODULE_VERSION\n                        value: v-24864f339e\n                      - name: POD_HOST_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.hostIP\n                      - name: POD_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.podIP\n                      - name: POD_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.name\n                      - name: POD_NAMESPACE\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.namespace\n                      - name: POD_NODE_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.nodeName\n                      - name: POD_SERVICE_ACCOUNT\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.serviceAccountName\n                      - name: POD_UID\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.uid\n                    ports:\n                      - name: http\n                        protocol: TCP\n                        containerPort: 80\n                    resources:\n                      requests:\n                        cpu: 10m\n                        memory: 90Mi\n                      limits:\n                        memory: 1Gi\n                        cpu: '1'\n                    imagePullPolicy: IfNotPresent\n                    securityContext:\n                      allowPrivilegeEscalation: false\n                restartPolicy: Always\n                terminationGracePeriodSeconds: 5\n                dnsPolicy: ClusterFirst\n            replicas: 1\n            strategy:\n              type: RollingUpdate\n              rollingUpdate:\n                maxUnavailable: 1\n                maxSurge: 1\n            revisionHistoryLimit: 3\n      devMode: false\n      localMode: false\n      outputs: {}\n    dependencyResults:\n      get-service-status.default-backend:\n        type: get-service-status\n        key: get-service-status.default-backend\n        name: default-backend\n        description: >-\n          getting status for service 'default-backend' (from module\n          'default-backend')\n        completedAt: '2023-02-25T17:23:38.871Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output:\n          forwardablePorts:\n            - name: http\n              protocol: TCP\n              targetPort: 80\n          ingresses: []\n          state: ready\n          namespaceStatuses:\n            - pluginName: local-kubernetes\n              namespaceName: garden-system\n              state: ready\n          version: v-2d58c28944\n          detail:\n            remoteResources:\n              - kind: Deployment\n                apiVersion: apps/v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: 661181cf-6532-441f-bf03-d86c109f6a14\n                  resourceVersion: '1110'\n                  generation: 1\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    deployment.kubernetes.io/revision: '1'\n                    garden.io/configured.replicas: '1'\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/configured.replicas': {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:progressDeadlineSeconds': {}\n                          'f:replicas': {}\n                          'f:revisionHistoryLimit': {}\n                          'f:selector': {}\n                          'f:strategy':\n                            'f:rollingUpdate':\n                              .: {}\n                              'f:maxSurge': {}\n                              'f:maxUnavailable': {}\n                            'f:type': {}\n                          'f:template':\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:containers':\n                                'k:{\"name\":\"default-backend\"}':\n                                  .: {}\n                                  'f:env':\n                                    .: {}\n                                    'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"GARDEN_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"POD_HOST_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAMESPACE\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NODE_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_UID\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                  'f:image': {}\n                                  'f:imagePullPolicy': {}\n                                  'f:name': {}\n                                  'f:ports':\n                                    .: {}\n                                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                      .: {}\n                                      'f:containerPort': {}\n                                      'f:name': {}\n                                      'f:protocol': {}\n                                  'f:resources':\n                                    .: {}\n                                    'f:limits':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                    'f:requests':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                  'f:securityContext':\n                                    .: {}\n                                    'f:allowPrivilegeEscalation': {}\n                                  'f:terminationMessagePath': {}\n                                  'f:terminationMessagePolicy': {}\n                              'f:dnsPolicy': {}\n                              'f:restartPolicy': {}\n                              'f:schedulerName': {}\n                              'f:securityContext': {}\n                              'f:terminationGracePeriodSeconds': {}\n                    - manager: k3s\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:09Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            'f:deployment.kubernetes.io/revision': {}\n                        'f:status':\n                          'f:availableReplicas': {}\n                          'f:conditions':\n                            .: {}\n                            'k:{\"type\":\"Available\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                            'k:{\"type\":\"Progressing\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                          'f:observedGeneration': {}\n                          'f:readyReplicas': {}\n                          'f:replicas': {}\n                          'f:updatedReplicas': {}\n                      subresource: status\n                spec:\n                  replicas: 1\n                  selector:\n                    matchLabels:\n                      service: default-backend\n                  template:\n                    metadata:\n                      creationTimestamp: null\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                        garden.io/version: v-2d58c28944\n                    spec:\n                      containers:\n                        - name: default-backend\n                          image: 'gardendev/default-backend:v0.1'\n                          ports:\n                            - name: http\n                              containerPort: 80\n                              protocol: TCP\n                          env:\n                            - name: GARDEN_VERSION\n                              value: v-2d58c28944\n                            - name: GARDEN_MODULE_VERSION\n                              value: v-24864f339e\n                            - name: POD_HOST_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.hostIP\n                            - name: POD_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.podIP\n                            - name: POD_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.name\n                            - name: POD_NAMESPACE\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.namespace\n                            - name: POD_NODE_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.nodeName\n                            - name: POD_SERVICE_ACCOUNT\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.serviceAccountName\n                            - name: POD_UID\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.uid\n                          resources:\n                            limits:\n                              cpu: '1'\n                              memory: 1Gi\n                            requests:\n                              cpu: 10m\n                              memory: 90Mi\n                          terminationMessagePath: /dev/termination-log\n                          terminationMessagePolicy: File\n                          imagePullPolicy: IfNotPresent\n                          securityContext:\n                            allowPrivilegeEscalation: false\n                      restartPolicy: Always\n                      terminationGracePeriodSeconds: 5\n                      dnsPolicy: ClusterFirst\n                      securityContext: {}\n                      schedulerName: default-scheduler\n                  strategy:\n                    type: RollingUpdate\n                    rollingUpdate:\n                      maxUnavailable: 1\n                      maxSurge: 1\n                  revisionHistoryLimit: 3\n                  progressDeadlineSeconds: 600\n                status:\n                  observedGeneration: 1\n                  replicas: 1\n                  updatedReplicas: 1\n                  readyReplicas: 1\n                  availableReplicas: 1\n                  conditions:\n                    - type: Available\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:04Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: MinimumReplicasAvailable\n                      message: Deployment has minimum availability.\n                    - type: Progressing\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:09Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: NewReplicaSetAvailable\n                      message: >-\n                        ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                        progressed.\n              - kind: Service\n                apiVersion: v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: ea9b7635-4491-49de-9fea-041c64bee19c\n                  resourceVersion: '1088'\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:internalTrafficPolicy': {}\n                          'f:ports':\n                            .: {}\n                            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                              .: {}\n                              'f:name': {}\n                              'f:port': {}\n                              'f:protocol': {}\n                              'f:targetPort': {}\n                          'f:selector': {}\n                          'f:sessionAffinity': {}\n                          'f:type': {}\n                spec:\n                  ports:\n                    - name: http\n                      protocol: TCP\n                      port: 80\n                      targetPort: 80\n                  selector:\n                    service: default-backend\n                  clusterIP: 10.43.113.188\n                  clusterIPs:\n                    - 10.43.113.188\n                  type: ClusterIP\n                  sessionAffinity: None\n                  ipFamilies:\n                    - IPv4\n                  ipFamilyPolicy: SingleStack\n                  internalTrafficPolicy: Cluster\n                status:\n                  loadBalancer: {}\n            workload:\n              kind: Deployment\n              apiVersion: apps/v1\n              metadata:\n                name: default-backend\n                annotations:\n                  garden.io/configured.replicas: '1'\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                namespace: garden-system\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                selector:\n                  matchLabels:\n                    service: default-backend\n                template:\n                  metadata:\n                    annotations:\n                      garden.io/generated: 'true'\n                      garden.io/version: v-2d58c28944\n                    labels:\n                      module: default-backend\n                      service: default-backend\n                  spec:\n                    containers:\n                      - name: default-backend\n                        image: 'gardendev/default-backend:v0.1'\n                        env:\n                          - name: GARDEN_VERSION\n                            value: v-2d58c28944\n                          - name: GARDEN_MODULE_VERSION\n                            value: v-24864f339e\n                          - name: POD_HOST_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.hostIP\n                          - name: POD_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.podIP\n                          - name: POD_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.name\n                          - name: POD_NAMESPACE\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.namespace\n                          - name: POD_NODE_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.nodeName\n                          - name: POD_SERVICE_ACCOUNT\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.serviceAccountName\n                          - name: POD_UID\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.uid\n                        ports:\n                          - name: http\n                            protocol: TCP\n                            containerPort: 80\n                        resources:\n                          requests:\n                            cpu: 10m\n                            memory: 90Mi\n                          limits:\n                            memory: 1Gi\n                            cpu: '1'\n                        imagePullPolicy: IfNotPresent\n                        securityContext:\n                          allowPrivilegeEscalation: false\n                    restartPolicy: Always\n                    terminationGracePeriodSeconds: 5\n                    dnsPolicy: ClusterFirst\n                replicas: 1\n                strategy:\n                  type: RollingUpdate\n                  rollingUpdate:\n                    maxUnavailable: 1\n                    maxSurge: 1\n                revisionHistoryLimit: 3\n          devMode: false\n          localMode: false\n          outputs: {}\n        dependencyResults: {}\n        version: v-2d58c28944\n        startedAt: '2023-02-25T17:23:38.751Z'\n      build.default-backend:\n        type: build\n        key: build.default-backend\n        name: default-backend\n        description: building default-backend\n        completedAt: '2023-02-25T17:23:38.803Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output:\n          fresh: false\n        dependencyResults:\n          stage-build.default-backend:\n            type: stage-build\n            key: stage-build.default-backend\n            name: default-backend\n            description: staging build for default-backend\n            completedAt: '2023-02-25T17:23:38.785Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: {}\n            dependencyResults: {}\n            version: v-24864f339e\n            startedAt: '2023-02-25T17:23:38.754Z'\n        version: v-24864f339e\n        startedAt: '2023-02-25T17:23:38.786Z'\n    version: v-2d58c28944\n    startedAt: '2023-02-25T17:23:38.879Z'\n  get-service-status.ingress-controller:\n    type: get-service-status\n    key: get-service-status.ingress-controller\n    name: ingress-controller\n    description: >-\n      getting status for service 'ingress-controller' (from module\n      'ingress-controller')\n    completedAt: '2023-02-25T17:23:38.992Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      forwardablePorts: []\n      state: missing\n      detail: {}\n      namespaceStatuses:\n        - pluginName: local-kubernetes\n          namespaceName: garden-system\n          state: ready\n      ingresses: []\n      outputs: {}\n    dependencyResults:\n      get-service-status.default-backend:\n        type: get-service-status\n        key: get-service-status.default-backend\n        name: default-backend\n        description: >-\n          getting status for service 'default-backend' (from module\n          'default-backend')\n        completedAt: '2023-02-25T17:23:38.871Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output:\n          forwardablePorts:\n            - name: http\n              protocol: TCP\n              targetPort: 80\n          ingresses: []\n          state: ready\n          namespaceStatuses:\n            - pluginName: local-kubernetes\n              namespaceName: garden-system\n              state: ready\n          version: v-2d58c28944\n          detail:\n            remoteResources:\n              - kind: Deployment\n                apiVersion: apps/v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: 661181cf-6532-441f-bf03-d86c109f6a14\n                  resourceVersion: '1110'\n                  generation: 1\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    deployment.kubernetes.io/revision: '1'\n                    garden.io/configured.replicas: '1'\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/configured.replicas': {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:progressDeadlineSeconds': {}\n                          'f:replicas': {}\n                          'f:revisionHistoryLimit': {}\n                          'f:selector': {}\n                          'f:strategy':\n                            'f:rollingUpdate':\n                              .: {}\n                              'f:maxSurge': {}\n                              'f:maxUnavailable': {}\n                            'f:type': {}\n                          'f:template':\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:containers':\n                                'k:{\"name\":\"default-backend\"}':\n                                  .: {}\n                                  'f:env':\n                                    .: {}\n                                    'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"GARDEN_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"POD_HOST_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAMESPACE\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NODE_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_UID\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                  'f:image': {}\n                                  'f:imagePullPolicy': {}\n                                  'f:name': {}\n                                  'f:ports':\n                                    .: {}\n                                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                      .: {}\n                                      'f:containerPort': {}\n                                      'f:name': {}\n                                      'f:protocol': {}\n                                  'f:resources':\n                                    .: {}\n                                    'f:limits':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                    'f:requests':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                  'f:securityContext':\n                                    .: {}\n                                    'f:allowPrivilegeEscalation': {}\n                                  'f:terminationMessagePath': {}\n                                  'f:terminationMessagePolicy': {}\n                              'f:dnsPolicy': {}\n                              'f:restartPolicy': {}\n                              'f:schedulerName': {}\n                              'f:securityContext': {}\n                              'f:terminationGracePeriodSeconds': {}\n                    - manager: k3s\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:09Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            'f:deployment.kubernetes.io/revision': {}\n                        'f:status':\n                          'f:availableReplicas': {}\n                          'f:conditions':\n                            .: {}\n                            'k:{\"type\":\"Available\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                            'k:{\"type\":\"Progressing\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                          'f:observedGeneration': {}\n                          'f:readyReplicas': {}\n                          'f:replicas': {}\n                          'f:updatedReplicas': {}\n                      subresource: status\n                spec:\n                  replicas: 1\n                  selector:\n                    matchLabels:\n                      service: default-backend\n                  template:\n                    metadata:\n                      creationTimestamp: null\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                        garden.io/version: v-2d58c28944\n                    spec:\n                      containers:\n                        - name: default-backend\n                          image: 'gardendev/default-backend:v0.1'\n                          ports:\n                            - name: http\n                              containerPort: 80\n                              protocol: TCP\n                          env:\n                            - name: GARDEN_VERSION\n                              value: v-2d58c28944\n                            - name: GARDEN_MODULE_VERSION\n                              value: v-24864f339e\n                            - name: POD_HOST_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.hostIP\n                            - name: POD_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.podIP\n                            - name: POD_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.name\n                            - name: POD_NAMESPACE\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.namespace\n                            - name: POD_NODE_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.nodeName\n                            - name: POD_SERVICE_ACCOUNT\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.serviceAccountName\n                            - name: POD_UID\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.uid\n                          resources:\n                            limits:\n                              cpu: '1'\n                              memory: 1Gi\n                            requests:\n                              cpu: 10m\n                              memory: 90Mi\n                          terminationMessagePath: /dev/termination-log\n                          terminationMessagePolicy: File\n                          imagePullPolicy: IfNotPresent\n                          securityContext:\n                            allowPrivilegeEscalation: false\n                      restartPolicy: Always\n                      terminationGracePeriodSeconds: 5\n                      dnsPolicy: ClusterFirst\n                      securityContext: {}\n                      schedulerName: default-scheduler\n                  strategy:\n                    type: RollingUpdate\n                    rollingUpdate:\n                      maxUnavailable: 1\n                      maxSurge: 1\n                  revisionHistoryLimit: 3\n                  progressDeadlineSeconds: 600\n                status:\n                  observedGeneration: 1\n                  replicas: 1\n                  updatedReplicas: 1\n                  readyReplicas: 1\n                  availableReplicas: 1\n                  conditions:\n                    - type: Available\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:04Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: MinimumReplicasAvailable\n                      message: Deployment has minimum availability.\n                    - type: Progressing\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:09Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: NewReplicaSetAvailable\n                      message: >-\n                        ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                        progressed.\n              - kind: Service\n                apiVersion: v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: ea9b7635-4491-49de-9fea-041c64bee19c\n                  resourceVersion: '1088'\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:internalTrafficPolicy': {}\n                          'f:ports':\n                            .: {}\n                            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                              .: {}\n                              'f:name': {}\n                              'f:port': {}\n                              'f:protocol': {}\n                              'f:targetPort': {}\n                          'f:selector': {}\n                          'f:sessionAffinity': {}\n                          'f:type': {}\n                spec:\n                  ports:\n                    - name: http\n                      protocol: TCP\n                      port: 80\n                      targetPort: 80\n                  selector:\n                    service: default-backend\n                  clusterIP: 10.43.113.188\n                  clusterIPs:\n                    - 10.43.113.188\n                  type: ClusterIP\n                  sessionAffinity: None\n                  ipFamilies:\n                    - IPv4\n                  ipFamilyPolicy: SingleStack\n                  internalTrafficPolicy: Cluster\n                status:\n                  loadBalancer: {}\n            workload:\n              kind: Deployment\n              apiVersion: apps/v1\n              metadata:\n                name: default-backend\n                annotations:\n                  garden.io/configured.replicas: '1'\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                namespace: garden-system\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                selector:\n                  matchLabels:\n                    service: default-backend\n                template:\n                  metadata:\n                    annotations:\n                      garden.io/generated: 'true'\n                      garden.io/version: v-2d58c28944\n                    labels:\n                      module: default-backend\n                      service: default-backend\n                  spec:\n                    containers:\n                      - name: default-backend\n                        image: 'gardendev/default-backend:v0.1'\n                        env:\n                          - name: GARDEN_VERSION\n                            value: v-2d58c28944\n                          - name: GARDEN_MODULE_VERSION\n                            value: v-24864f339e\n                          - name: POD_HOST_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.hostIP\n                          - name: POD_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.podIP\n                          - name: POD_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.name\n                          - name: POD_NAMESPACE\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.namespace\n                          - name: POD_NODE_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.nodeName\n                          - name: POD_SERVICE_ACCOUNT\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.serviceAccountName\n                          - name: POD_UID\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.uid\n                        ports:\n                          - name: http\n                            protocol: TCP\n                            containerPort: 80\n                        resources:\n                          requests:\n                            cpu: 10m\n                            memory: 90Mi\n                          limits:\n                            memory: 1Gi\n                            cpu: '1'\n                        imagePullPolicy: IfNotPresent\n                        securityContext:\n                          allowPrivilegeEscalation: false\n                    restartPolicy: Always\n                    terminationGracePeriodSeconds: 5\n                    dnsPolicy: ClusterFirst\n                replicas: 1\n                strategy:\n                  type: RollingUpdate\n                  rollingUpdate:\n                    maxUnavailable: 1\n                    maxSurge: 1\n                revisionHistoryLimit: 3\n          devMode: false\n          localMode: false\n          outputs: {}\n        dependencyResults: {}\n        version: v-2d58c28944\n        startedAt: '2023-02-25T17:23:38.751Z'\n    version: v-b5ac3ef2a2\n    startedAt: '2023-02-25T17:23:38.876Z'\n  build.ingress-controller:\n    type: build\n    key: build.ingress-controller\n    name: ingress-controller\n    description: building ingress-controller\n    completedAt: '2023-02-25T17:23:41.397Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      fresh: true\n    dependencyResults:\n      stage-build.ingress-controller:\n        type: stage-build\n        key: stage-build.ingress-controller\n        name: ingress-controller\n        description: staging build for ingress-controller\n        completedAt: '2023-02-25T17:23:38.785Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output: {}\n        dependencyResults: {}\n        version: v-9f251da908\n        startedAt: '2023-02-25T17:23:38.754Z'\n    version: v-9f251da908\n    startedAt: '2023-02-25T17:23:38.787Z'\n  deploy.ingress-controller:\n    type: deploy\n    description: deploying service 'ingress-controller' (from module 'ingress-controller')\n    key: deploy.ingress-controller\n    name: ingress-controller\n    error: ~error\n    startedAt: '2023-02-25T17:23:41.399Z'\n    completedAt: '2023-02-25T17:28:42.631Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    version: v-b5ac3ef2a2\n"}
{"msg":"Error: local-kubernetes — an error occurred when configuring environment:\nError: Command \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm --kube-context k3d-k3s-default --namespace garden-system install garden-nginx /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx --namespace garden-system --timeout 300s --values /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml --atomic\" failed with code 1:\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n\nError: INSTALLATION FAILED: release garden-nginx failed, and has been uninstalled due to atomic being set: timed out waiting for the condition\n    at prepareSystemServices (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/system.ts:141:13)\n    at prepareSystem (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/init.ts:343:3)\n    at Object.prepareEnvironment (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/plugins/kubernetes/init.ts:236:3)\n    at /snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/actions.ts:1293:24\n    at wrapped.ensurePrepared (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/tasks/resolve-provider.ts:358:22)\n    at wrapped.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/tasks/resolve-provider.ts:241:20)\n    at TaskNode.process (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:801:20)\n    at wrapped.processNode (/snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/task-graph.ts:436:18)\n\nError Details:\n\nerror:\n  shortMessage: >-\n    Command failed with exit code 1:\n    /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n    --kube-context k3d-k3s-default --namespace garden-system install\n    garden-nginx\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n    --namespace garden-system --timeout 300s --values\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n    --atomic\n  command: >-\n    /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n    --kube-context k3d-k3s-default --namespace garden-system install\n    garden-nginx\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n    --namespace garden-system --timeout 300s --values\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n    --atomic\n  exitCode: 1\n  stdout: ''\n  stderr: >-\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition\n  all: >-\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition\n  failed: true\n  timedOut: false\n  isCanceled: false\n  killed: false\nresults:\n  stage-build.default-backend:\n    type: stage-build\n    key: stage-build.default-backend\n    name: default-backend\n    description: staging build for default-backend\n    completedAt: '2023-02-25T17:23:38.785Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output: {}\n    dependencyResults: {}\n    version: v-24864f339e\n    startedAt: '2023-02-25T17:23:38.754Z'\n  stage-build.ingress-controller:\n    type: stage-build\n    key: stage-build.ingress-controller\n    name: ingress-controller\n    description: staging build for ingress-controller\n    completedAt: '2023-02-25T17:23:38.785Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output: {}\n    dependencyResults: {}\n    version: v-9f251da908\n    startedAt: '2023-02-25T17:23:38.754Z'\n  build.default-backend:\n    type: build\n    key: build.default-backend\n    name: default-backend\n    description: building default-backend\n    completedAt: '2023-02-25T17:23:38.803Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      fresh: false\n    dependencyResults:\n      stage-build.default-backend:\n        type: stage-build\n        key: stage-build.default-backend\n        name: default-backend\n        description: staging build for default-backend\n        completedAt: '2023-02-25T17:23:38.785Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output: {}\n        dependencyResults: {}\n        version: v-24864f339e\n        startedAt: '2023-02-25T17:23:38.754Z'\n    version: v-24864f339e\n    startedAt: '2023-02-25T17:23:38.786Z'\n  get-service-status.default-backend:\n    type: get-service-status\n    key: get-service-status.default-backend\n    name: default-backend\n    description: >-\n      getting status for service 'default-backend' (from module\n      'default-backend')\n    completedAt: '2023-02-25T17:23:38.871Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      forwardablePorts:\n        - name: http\n          protocol: TCP\n          targetPort: 80\n      ingresses: []\n      state: ready\n      namespaceStatuses:\n        - pluginName: local-kubernetes\n          namespaceName: garden-system\n          state: ready\n      version: v-2d58c28944\n      detail:\n        remoteResources:\n          - kind: Deployment\n            apiVersion: apps/v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: 661181cf-6532-441f-bf03-d86c109f6a14\n              resourceVersion: '1110'\n              generation: 1\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                deployment.kubernetes.io/revision: '1'\n                garden.io/configured.replicas: '1'\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/configured.replicas': {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:progressDeadlineSeconds': {}\n                      'f:replicas': {}\n                      'f:revisionHistoryLimit': {}\n                      'f:selector': {}\n                      'f:strategy':\n                        'f:rollingUpdate':\n                          .: {}\n                          'f:maxSurge': {}\n                          'f:maxUnavailable': {}\n                        'f:type': {}\n                      'f:template':\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:containers':\n                            'k:{\"name\":\"default-backend\"}':\n                              .: {}\n                              'f:env':\n                                .: {}\n                                'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"GARDEN_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"POD_HOST_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAMESPACE\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NODE_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_UID\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                              'f:image': {}\n                              'f:imagePullPolicy': {}\n                              'f:name': {}\n                              'f:ports':\n                                .: {}\n                                'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                  .: {}\n                                  'f:containerPort': {}\n                                  'f:name': {}\n                                  'f:protocol': {}\n                              'f:resources':\n                                .: {}\n                                'f:limits':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                                'f:requests':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                              'f:securityContext':\n                                .: {}\n                                'f:allowPrivilegeEscalation': {}\n                              'f:terminationMessagePath': {}\n                              'f:terminationMessagePolicy': {}\n                          'f:dnsPolicy': {}\n                          'f:restartPolicy': {}\n                          'f:schedulerName': {}\n                          'f:securityContext': {}\n                          'f:terminationGracePeriodSeconds': {}\n                - manager: k3s\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:09Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        'f:deployment.kubernetes.io/revision': {}\n                    'f:status':\n                      'f:availableReplicas': {}\n                      'f:conditions':\n                        .: {}\n                        'k:{\"type\":\"Available\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                        'k:{\"type\":\"Progressing\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                      'f:observedGeneration': {}\n                      'f:readyReplicas': {}\n                      'f:replicas': {}\n                      'f:updatedReplicas': {}\n                  subresource: status\n            spec:\n              replicas: 1\n              selector:\n                matchLabels:\n                  service: default-backend\n              template:\n                metadata:\n                  creationTimestamp: null\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                spec:\n                  containers:\n                    - name: default-backend\n                      image: 'gardendev/default-backend:v0.1'\n                      ports:\n                        - name: http\n                          containerPort: 80\n                          protocol: TCP\n                      env:\n                        - name: GARDEN_VERSION\n                          value: v-2d58c28944\n                        - name: GARDEN_MODULE_VERSION\n                          value: v-24864f339e\n                        - name: POD_HOST_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.hostIP\n                        - name: POD_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.podIP\n                        - name: POD_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.name\n                        - name: POD_NAMESPACE\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.namespace\n                        - name: POD_NODE_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.nodeName\n                        - name: POD_SERVICE_ACCOUNT\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.serviceAccountName\n                        - name: POD_UID\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.uid\n                      resources:\n                        limits:\n                          cpu: '1'\n                          memory: 1Gi\n                        requests:\n                          cpu: 10m\n                          memory: 90Mi\n                      terminationMessagePath: /dev/termination-log\n                      terminationMessagePolicy: File\n                      imagePullPolicy: IfNotPresent\n                      securityContext:\n                        allowPrivilegeEscalation: false\n                  restartPolicy: Always\n                  terminationGracePeriodSeconds: 5\n                  dnsPolicy: ClusterFirst\n                  securityContext: {}\n                  schedulerName: default-scheduler\n              strategy:\n                type: RollingUpdate\n                rollingUpdate:\n                  maxUnavailable: 1\n                  maxSurge: 1\n              revisionHistoryLimit: 3\n              progressDeadlineSeconds: 600\n            status:\n              observedGeneration: 1\n              replicas: 1\n              updatedReplicas: 1\n              readyReplicas: 1\n              availableReplicas: 1\n              conditions:\n                - type: Available\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:04Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: MinimumReplicasAvailable\n                  message: Deployment has minimum availability.\n                - type: Progressing\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:09Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: NewReplicaSetAvailable\n                  message: >-\n                    ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                    progressed.\n          - kind: Service\n            apiVersion: v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: ea9b7635-4491-49de-9fea-041c64bee19c\n              resourceVersion: '1088'\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:internalTrafficPolicy': {}\n                      'f:ports':\n                        .: {}\n                        'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                          .: {}\n                          'f:name': {}\n                          'f:port': {}\n                          'f:protocol': {}\n                          'f:targetPort': {}\n                      'f:selector': {}\n                      'f:sessionAffinity': {}\n                      'f:type': {}\n            spec:\n              ports:\n                - name: http\n                  protocol: TCP\n                  port: 80\n                  targetPort: 80\n              selector:\n                service: default-backend\n              clusterIP: 10.43.113.188\n              clusterIPs:\n                - 10.43.113.188\n              type: ClusterIP\n              sessionAffinity: None\n              ipFamilies:\n                - IPv4\n              ipFamilyPolicy: SingleStack\n              internalTrafficPolicy: Cluster\n            status:\n              loadBalancer: {}\n        workload:\n          kind: Deployment\n          apiVersion: apps/v1\n          metadata:\n            name: default-backend\n            annotations:\n              garden.io/configured.replicas: '1'\n              garden.io/generated: 'true'\n              garden.io/version: v-2d58c28944\n            namespace: garden-system\n            labels:\n              module: default-backend\n              service: default-backend\n          spec:\n            selector:\n              matchLabels:\n                service: default-backend\n            template:\n              metadata:\n                annotations:\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                containers:\n                  - name: default-backend\n                    image: 'gardendev/default-backend:v0.1'\n                    env:\n                      - name: GARDEN_VERSION\n                        value: v-2d58c28944\n                      - name: GARDEN_MODULE_VERSION\n                        value: v-24864f339e\n                      - name: POD_HOST_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.hostIP\n                      - name: POD_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.podIP\n                      - name: POD_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.name\n                      - name: POD_NAMESPACE\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.namespace\n                      - name: POD_NODE_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.nodeName\n                      - name: POD_SERVICE_ACCOUNT\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.serviceAccountName\n                      - name: POD_UID\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.uid\n                    ports:\n                      - name: http\n                        protocol: TCP\n                        containerPort: 80\n                    resources:\n                      requests:\n                        cpu: 10m\n                        memory: 90Mi\n                      limits:\n                        memory: 1Gi\n                        cpu: '1'\n                    imagePullPolicy: IfNotPresent\n                    securityContext:\n                      allowPrivilegeEscalation: false\n                restartPolicy: Always\n                terminationGracePeriodSeconds: 5\n                dnsPolicy: ClusterFirst\n            replicas: 1\n            strategy:\n              type: RollingUpdate\n              rollingUpdate:\n                maxUnavailable: 1\n                maxSurge: 1\n            revisionHistoryLimit: 3\n      devMode: false\n      localMode: false\n      outputs: {}\n    dependencyResults: {}\n    version: v-2d58c28944\n    startedAt: '2023-02-25T17:23:38.751Z'\n  deploy.default-backend:\n    type: deploy\n    key: deploy.default-backend\n    name: default-backend\n    description: deploying service 'default-backend' (from module 'default-backend')\n    completedAt: '2023-02-25T17:23:38.889Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      forwardablePorts:\n        - name: http\n          protocol: TCP\n          targetPort: 80\n      ingresses: []\n      state: ready\n      namespaceStatuses:\n        - pluginName: local-kubernetes\n          namespaceName: garden-system\n          state: ready\n      version: v-2d58c28944\n      detail:\n        remoteResources:\n          - kind: Deployment\n            apiVersion: apps/v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: 661181cf-6532-441f-bf03-d86c109f6a14\n              resourceVersion: '1110'\n              generation: 1\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                deployment.kubernetes.io/revision: '1'\n                garden.io/configured.replicas: '1'\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/configured.replicas': {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:progressDeadlineSeconds': {}\n                      'f:replicas': {}\n                      'f:revisionHistoryLimit': {}\n                      'f:selector': {}\n                      'f:strategy':\n                        'f:rollingUpdate':\n                          .: {}\n                          'f:maxSurge': {}\n                          'f:maxUnavailable': {}\n                        'f:type': {}\n                      'f:template':\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:containers':\n                            'k:{\"name\":\"default-backend\"}':\n                              .: {}\n                              'f:env':\n                                .: {}\n                                'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"GARDEN_VERSION\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:value': {}\n                                'k:{\"name\":\"POD_HOST_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_IP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NAMESPACE\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_NODE_NAME\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                                'k:{\"name\":\"POD_UID\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:valueFrom':\n                                    .: {}\n                                    'f:fieldRef': {}\n                              'f:image': {}\n                              'f:imagePullPolicy': {}\n                              'f:name': {}\n                              'f:ports':\n                                .: {}\n                                'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                  .: {}\n                                  'f:containerPort': {}\n                                  'f:name': {}\n                                  'f:protocol': {}\n                              'f:resources':\n                                .: {}\n                                'f:limits':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                                'f:requests':\n                                  .: {}\n                                  'f:cpu': {}\n                                  'f:memory': {}\n                              'f:securityContext':\n                                .: {}\n                                'f:allowPrivilegeEscalation': {}\n                              'f:terminationMessagePath': {}\n                              'f:terminationMessagePolicy': {}\n                          'f:dnsPolicy': {}\n                          'f:restartPolicy': {}\n                          'f:schedulerName': {}\n                          'f:securityContext': {}\n                          'f:terminationGracePeriodSeconds': {}\n                - manager: k3s\n                  operation: Update\n                  apiVersion: apps/v1\n                  time: '2023-02-25T17:15:09Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        'f:deployment.kubernetes.io/revision': {}\n                    'f:status':\n                      'f:availableReplicas': {}\n                      'f:conditions':\n                        .: {}\n                        'k:{\"type\":\"Available\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                        'k:{\"type\":\"Progressing\"}':\n                          .: {}\n                          'f:lastTransitionTime': {}\n                          'f:lastUpdateTime': {}\n                          'f:message': {}\n                          'f:reason': {}\n                          'f:status': {}\n                          'f:type': {}\n                      'f:observedGeneration': {}\n                      'f:readyReplicas': {}\n                      'f:replicas': {}\n                      'f:updatedReplicas': {}\n                  subresource: status\n            spec:\n              replicas: 1\n              selector:\n                matchLabels:\n                  service: default-backend\n              template:\n                metadata:\n                  creationTimestamp: null\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                spec:\n                  containers:\n                    - name: default-backend\n                      image: 'gardendev/default-backend:v0.1'\n                      ports:\n                        - name: http\n                          containerPort: 80\n                          protocol: TCP\n                      env:\n                        - name: GARDEN_VERSION\n                          value: v-2d58c28944\n                        - name: GARDEN_MODULE_VERSION\n                          value: v-24864f339e\n                        - name: POD_HOST_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.hostIP\n                        - name: POD_IP\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: status.podIP\n                        - name: POD_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.name\n                        - name: POD_NAMESPACE\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.namespace\n                        - name: POD_NODE_NAME\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.nodeName\n                        - name: POD_SERVICE_ACCOUNT\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: spec.serviceAccountName\n                        - name: POD_UID\n                          valueFrom:\n                            fieldRef:\n                              apiVersion: v1\n                              fieldPath: metadata.uid\n                      resources:\n                        limits:\n                          cpu: '1'\n                          memory: 1Gi\n                        requests:\n                          cpu: 10m\n                          memory: 90Mi\n                      terminationMessagePath: /dev/termination-log\n                      terminationMessagePolicy: File\n                      imagePullPolicy: IfNotPresent\n                      securityContext:\n                        allowPrivilegeEscalation: false\n                  restartPolicy: Always\n                  terminationGracePeriodSeconds: 5\n                  dnsPolicy: ClusterFirst\n                  securityContext: {}\n                  schedulerName: default-scheduler\n              strategy:\n                type: RollingUpdate\n                rollingUpdate:\n                  maxUnavailable: 1\n                  maxSurge: 1\n              revisionHistoryLimit: 3\n              progressDeadlineSeconds: 600\n            status:\n              observedGeneration: 1\n              replicas: 1\n              updatedReplicas: 1\n              readyReplicas: 1\n              availableReplicas: 1\n              conditions:\n                - type: Available\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:04Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: MinimumReplicasAvailable\n                  message: Deployment has minimum availability.\n                - type: Progressing\n                  status: 'True'\n                  lastUpdateTime: '2023-02-25T17:15:09Z'\n                  lastTransitionTime: '2023-02-25T17:15:04Z'\n                  reason: NewReplicaSetAvailable\n                  message: >-\n                    ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                    progressed.\n          - kind: Service\n            apiVersion: v1\n            metadata:\n              name: default-backend\n              namespace: garden-system\n              uid: ea9b7635-4491-49de-9fea-041c64bee19c\n              resourceVersion: '1088'\n              creationTimestamp: '2023-02-25T17:15:04Z'\n              labels:\n                module: default-backend\n                service: default-backend\n              annotations:\n                garden.io/generated: 'true'\n                garden.io/manifest-hash: >-\n                  e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                garden.io/version: v-2d58c28944\n                kubectl.kubernetes.io/last-applied-configuration: >\n                  {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n              managedFields:\n                - manager: kubectl-client-side-apply\n                  operation: Update\n                  apiVersion: v1\n                  time: '2023-02-25T17:15:04Z'\n                  fieldsType: FieldsV1\n                  fieldsV1:\n                    'f:metadata':\n                      'f:annotations':\n                        .: {}\n                        'f:garden.io/generated': {}\n                        'f:garden.io/manifest-hash': {}\n                        'f:garden.io/version': {}\n                        'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                      'f:labels':\n                        .: {}\n                        'f:module': {}\n                        'f:service': {}\n                    'f:spec':\n                      'f:internalTrafficPolicy': {}\n                      'f:ports':\n                        .: {}\n                        'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                          .: {}\n                          'f:name': {}\n                          'f:port': {}\n                          'f:protocol': {}\n                          'f:targetPort': {}\n                      'f:selector': {}\n                      'f:sessionAffinity': {}\n                      'f:type': {}\n            spec:\n              ports:\n                - name: http\n                  protocol: TCP\n                  port: 80\n                  targetPort: 80\n              selector:\n                service: default-backend\n              clusterIP: 10.43.113.188\n              clusterIPs:\n                - 10.43.113.188\n              type: ClusterIP\n              sessionAffinity: None\n              ipFamilies:\n                - IPv4\n              ipFamilyPolicy: SingleStack\n              internalTrafficPolicy: Cluster\n            status:\n              loadBalancer: {}\n        workload:\n          kind: Deployment\n          apiVersion: apps/v1\n          metadata:\n            name: default-backend\n            annotations:\n              garden.io/configured.replicas: '1'\n              garden.io/generated: 'true'\n              garden.io/version: v-2d58c28944\n            namespace: garden-system\n            labels:\n              module: default-backend\n              service: default-backend\n          spec:\n            selector:\n              matchLabels:\n                service: default-backend\n            template:\n              metadata:\n                annotations:\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                containers:\n                  - name: default-backend\n                    image: 'gardendev/default-backend:v0.1'\n                    env:\n                      - name: GARDEN_VERSION\n                        value: v-2d58c28944\n                      - name: GARDEN_MODULE_VERSION\n                        value: v-24864f339e\n                      - name: POD_HOST_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.hostIP\n                      - name: POD_IP\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: status.podIP\n                      - name: POD_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.name\n                      - name: POD_NAMESPACE\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.namespace\n                      - name: POD_NODE_NAME\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.nodeName\n                      - name: POD_SERVICE_ACCOUNT\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: spec.serviceAccountName\n                      - name: POD_UID\n                        valueFrom:\n                          fieldRef:\n                            fieldPath: metadata.uid\n                    ports:\n                      - name: http\n                        protocol: TCP\n                        containerPort: 80\n                    resources:\n                      requests:\n                        cpu: 10m\n                        memory: 90Mi\n                      limits:\n                        memory: 1Gi\n                        cpu: '1'\n                    imagePullPolicy: IfNotPresent\n                    securityContext:\n                      allowPrivilegeEscalation: false\n                restartPolicy: Always\n                terminationGracePeriodSeconds: 5\n                dnsPolicy: ClusterFirst\n            replicas: 1\n            strategy:\n              type: RollingUpdate\n              rollingUpdate:\n                maxUnavailable: 1\n                maxSurge: 1\n            revisionHistoryLimit: 3\n      devMode: false\n      localMode: false\n      outputs: {}\n    dependencyResults:\n      get-service-status.default-backend:\n        type: get-service-status\n        key: get-service-status.default-backend\n        name: default-backend\n        description: >-\n          getting status for service 'default-backend' (from module\n          'default-backend')\n        completedAt: '2023-02-25T17:23:38.871Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output:\n          forwardablePorts:\n            - name: http\n              protocol: TCP\n              targetPort: 80\n          ingresses: []\n          state: ready\n          namespaceStatuses:\n            - pluginName: local-kubernetes\n              namespaceName: garden-system\n              state: ready\n          version: v-2d58c28944\n          detail:\n            remoteResources:\n              - kind: Deployment\n                apiVersion: apps/v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: 661181cf-6532-441f-bf03-d86c109f6a14\n                  resourceVersion: '1110'\n                  generation: 1\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    deployment.kubernetes.io/revision: '1'\n                    garden.io/configured.replicas: '1'\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/configured.replicas': {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:progressDeadlineSeconds': {}\n                          'f:replicas': {}\n                          'f:revisionHistoryLimit': {}\n                          'f:selector': {}\n                          'f:strategy':\n                            'f:rollingUpdate':\n                              .: {}\n                              'f:maxSurge': {}\n                              'f:maxUnavailable': {}\n                            'f:type': {}\n                          'f:template':\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:containers':\n                                'k:{\"name\":\"default-backend\"}':\n                                  .: {}\n                                  'f:env':\n                                    .: {}\n                                    'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"GARDEN_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"POD_HOST_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAMESPACE\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NODE_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_UID\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                  'f:image': {}\n                                  'f:imagePullPolicy': {}\n                                  'f:name': {}\n                                  'f:ports':\n                                    .: {}\n                                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                      .: {}\n                                      'f:containerPort': {}\n                                      'f:name': {}\n                                      'f:protocol': {}\n                                  'f:resources':\n                                    .: {}\n                                    'f:limits':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                    'f:requests':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                  'f:securityContext':\n                                    .: {}\n                                    'f:allowPrivilegeEscalation': {}\n                                  'f:terminationMessagePath': {}\n                                  'f:terminationMessagePolicy': {}\n                              'f:dnsPolicy': {}\n                              'f:restartPolicy': {}\n                              'f:schedulerName': {}\n                              'f:securityContext': {}\n                              'f:terminationGracePeriodSeconds': {}\n                    - manager: k3s\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:09Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            'f:deployment.kubernetes.io/revision': {}\n                        'f:status':\n                          'f:availableReplicas': {}\n                          'f:conditions':\n                            .: {}\n                            'k:{\"type\":\"Available\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                            'k:{\"type\":\"Progressing\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                          'f:observedGeneration': {}\n                          'f:readyReplicas': {}\n                          'f:replicas': {}\n                          'f:updatedReplicas': {}\n                      subresource: status\n                spec:\n                  replicas: 1\n                  selector:\n                    matchLabels:\n                      service: default-backend\n                  template:\n                    metadata:\n                      creationTimestamp: null\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                        garden.io/version: v-2d58c28944\n                    spec:\n                      containers:\n                        - name: default-backend\n                          image: 'gardendev/default-backend:v0.1'\n                          ports:\n                            - name: http\n                              containerPort: 80\n                              protocol: TCP\n                          env:\n                            - name: GARDEN_VERSION\n                              value: v-2d58c28944\n                            - name: GARDEN_MODULE_VERSION\n                              value: v-24864f339e\n                            - name: POD_HOST_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.hostIP\n                            - name: POD_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.podIP\n                            - name: POD_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.name\n                            - name: POD_NAMESPACE\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.namespace\n                            - name: POD_NODE_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.nodeName\n                            - name: POD_SERVICE_ACCOUNT\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.serviceAccountName\n                            - name: POD_UID\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.uid\n                          resources:\n                            limits:\n                              cpu: '1'\n                              memory: 1Gi\n                            requests:\n                              cpu: 10m\n                              memory: 90Mi\n                          terminationMessagePath: /dev/termination-log\n                          terminationMessagePolicy: File\n                          imagePullPolicy: IfNotPresent\n                          securityContext:\n                            allowPrivilegeEscalation: false\n                      restartPolicy: Always\n                      terminationGracePeriodSeconds: 5\n                      dnsPolicy: ClusterFirst\n                      securityContext: {}\n                      schedulerName: default-scheduler\n                  strategy:\n                    type: RollingUpdate\n                    rollingUpdate:\n                      maxUnavailable: 1\n                      maxSurge: 1\n                  revisionHistoryLimit: 3\n                  progressDeadlineSeconds: 600\n                status:\n                  observedGeneration: 1\n                  replicas: 1\n                  updatedReplicas: 1\n                  readyReplicas: 1\n                  availableReplicas: 1\n                  conditions:\n                    - type: Available\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:04Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: MinimumReplicasAvailable\n                      message: Deployment has minimum availability.\n                    - type: Progressing\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:09Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: NewReplicaSetAvailable\n                      message: >-\n                        ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                        progressed.\n              - kind: Service\n                apiVersion: v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: ea9b7635-4491-49de-9fea-041c64bee19c\n                  resourceVersion: '1088'\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:internalTrafficPolicy': {}\n                          'f:ports':\n                            .: {}\n                            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                              .: {}\n                              'f:name': {}\n                              'f:port': {}\n                              'f:protocol': {}\n                              'f:targetPort': {}\n                          'f:selector': {}\n                          'f:sessionAffinity': {}\n                          'f:type': {}\n                spec:\n                  ports:\n                    - name: http\n                      protocol: TCP\n                      port: 80\n                      targetPort: 80\n                  selector:\n                    service: default-backend\n                  clusterIP: 10.43.113.188\n                  clusterIPs:\n                    - 10.43.113.188\n                  type: ClusterIP\n                  sessionAffinity: None\n                  ipFamilies:\n                    - IPv4\n                  ipFamilyPolicy: SingleStack\n                  internalTrafficPolicy: Cluster\n                status:\n                  loadBalancer: {}\n            workload:\n              kind: Deployment\n              apiVersion: apps/v1\n              metadata:\n                name: default-backend\n                annotations:\n                  garden.io/configured.replicas: '1'\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                namespace: garden-system\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                selector:\n                  matchLabels:\n                    service: default-backend\n                template:\n                  metadata:\n                    annotations:\n                      garden.io/generated: 'true'\n                      garden.io/version: v-2d58c28944\n                    labels:\n                      module: default-backend\n                      service: default-backend\n                  spec:\n                    containers:\n                      - name: default-backend\n                        image: 'gardendev/default-backend:v0.1'\n                        env:\n                          - name: GARDEN_VERSION\n                            value: v-2d58c28944\n                          - name: GARDEN_MODULE_VERSION\n                            value: v-24864f339e\n                          - name: POD_HOST_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.hostIP\n                          - name: POD_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.podIP\n                          - name: POD_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.name\n                          - name: POD_NAMESPACE\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.namespace\n                          - name: POD_NODE_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.nodeName\n                          - name: POD_SERVICE_ACCOUNT\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.serviceAccountName\n                          - name: POD_UID\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.uid\n                        ports:\n                          - name: http\n                            protocol: TCP\n                            containerPort: 80\n                        resources:\n                          requests:\n                            cpu: 10m\n                            memory: 90Mi\n                          limits:\n                            memory: 1Gi\n                            cpu: '1'\n                        imagePullPolicy: IfNotPresent\n                        securityContext:\n                          allowPrivilegeEscalation: false\n                    restartPolicy: Always\n                    terminationGracePeriodSeconds: 5\n                    dnsPolicy: ClusterFirst\n                replicas: 1\n                strategy:\n                  type: RollingUpdate\n                  rollingUpdate:\n                    maxUnavailable: 1\n                    maxSurge: 1\n                revisionHistoryLimit: 3\n          devMode: false\n          localMode: false\n          outputs: {}\n        dependencyResults: {}\n        version: v-2d58c28944\n        startedAt: '2023-02-25T17:23:38.751Z'\n      build.default-backend:\n        type: build\n        key: build.default-backend\n        name: default-backend\n        description: building default-backend\n        completedAt: '2023-02-25T17:23:38.803Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output:\n          fresh: false\n        dependencyResults:\n          stage-build.default-backend:\n            type: stage-build\n            key: stage-build.default-backend\n            name: default-backend\n            description: staging build for default-backend\n            completedAt: '2023-02-25T17:23:38.785Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: {}\n            dependencyResults: {}\n            version: v-24864f339e\n            startedAt: '2023-02-25T17:23:38.754Z'\n        version: v-24864f339e\n        startedAt: '2023-02-25T17:23:38.786Z'\n    version: v-2d58c28944\n    startedAt: '2023-02-25T17:23:38.879Z'\n  get-service-status.ingress-controller:\n    type: get-service-status\n    key: get-service-status.ingress-controller\n    name: ingress-controller\n    description: >-\n      getting status for service 'ingress-controller' (from module\n      'ingress-controller')\n    completedAt: '2023-02-25T17:23:38.992Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      forwardablePorts: []\n      state: missing\n      detail: {}\n      namespaceStatuses:\n        - pluginName: local-kubernetes\n          namespaceName: garden-system\n          state: ready\n      ingresses: []\n      outputs: {}\n    dependencyResults:\n      get-service-status.default-backend:\n        type: get-service-status\n        key: get-service-status.default-backend\n        name: default-backend\n        description: >-\n          getting status for service 'default-backend' (from module\n          'default-backend')\n        completedAt: '2023-02-25T17:23:38.871Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output:\n          forwardablePorts:\n            - name: http\n              protocol: TCP\n              targetPort: 80\n          ingresses: []\n          state: ready\n          namespaceStatuses:\n            - pluginName: local-kubernetes\n              namespaceName: garden-system\n              state: ready\n          version: v-2d58c28944\n          detail:\n            remoteResources:\n              - kind: Deployment\n                apiVersion: apps/v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: 661181cf-6532-441f-bf03-d86c109f6a14\n                  resourceVersion: '1110'\n                  generation: 1\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    deployment.kubernetes.io/revision: '1'\n                    garden.io/configured.replicas: '1'\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/configured.replicas': {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:progressDeadlineSeconds': {}\n                          'f:replicas': {}\n                          'f:revisionHistoryLimit': {}\n                          'f:selector': {}\n                          'f:strategy':\n                            'f:rollingUpdate':\n                              .: {}\n                              'f:maxSurge': {}\n                              'f:maxUnavailable': {}\n                            'f:type': {}\n                          'f:template':\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:containers':\n                                'k:{\"name\":\"default-backend\"}':\n                                  .: {}\n                                  'f:env':\n                                    .: {}\n                                    'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"GARDEN_VERSION\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:value': {}\n                                    'k:{\"name\":\"POD_HOST_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_IP\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NAMESPACE\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_NODE_NAME\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                    'k:{\"name\":\"POD_UID\"}':\n                                      .: {}\n                                      'f:name': {}\n                                      'f:valueFrom':\n                                        .: {}\n                                        'f:fieldRef': {}\n                                  'f:image': {}\n                                  'f:imagePullPolicy': {}\n                                  'f:name': {}\n                                  'f:ports':\n                                    .: {}\n                                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                      .: {}\n                                      'f:containerPort': {}\n                                      'f:name': {}\n                                      'f:protocol': {}\n                                  'f:resources':\n                                    .: {}\n                                    'f:limits':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                    'f:requests':\n                                      .: {}\n                                      'f:cpu': {}\n                                      'f:memory': {}\n                                  'f:securityContext':\n                                    .: {}\n                                    'f:allowPrivilegeEscalation': {}\n                                  'f:terminationMessagePath': {}\n                                  'f:terminationMessagePolicy': {}\n                              'f:dnsPolicy': {}\n                              'f:restartPolicy': {}\n                              'f:schedulerName': {}\n                              'f:securityContext': {}\n                              'f:terminationGracePeriodSeconds': {}\n                    - manager: k3s\n                      operation: Update\n                      apiVersion: apps/v1\n                      time: '2023-02-25T17:15:09Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            'f:deployment.kubernetes.io/revision': {}\n                        'f:status':\n                          'f:availableReplicas': {}\n                          'f:conditions':\n                            .: {}\n                            'k:{\"type\":\"Available\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                            'k:{\"type\":\"Progressing\"}':\n                              .: {}\n                              'f:lastTransitionTime': {}\n                              'f:lastUpdateTime': {}\n                              'f:message': {}\n                              'f:reason': {}\n                              'f:status': {}\n                              'f:type': {}\n                          'f:observedGeneration': {}\n                          'f:readyReplicas': {}\n                          'f:replicas': {}\n                          'f:updatedReplicas': {}\n                      subresource: status\n                spec:\n                  replicas: 1\n                  selector:\n                    matchLabels:\n                      service: default-backend\n                  template:\n                    metadata:\n                      creationTimestamp: null\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                        garden.io/version: v-2d58c28944\n                    spec:\n                      containers:\n                        - name: default-backend\n                          image: 'gardendev/default-backend:v0.1'\n                          ports:\n                            - name: http\n                              containerPort: 80\n                              protocol: TCP\n                          env:\n                            - name: GARDEN_VERSION\n                              value: v-2d58c28944\n                            - name: GARDEN_MODULE_VERSION\n                              value: v-24864f339e\n                            - name: POD_HOST_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.hostIP\n                            - name: POD_IP\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: status.podIP\n                            - name: POD_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.name\n                            - name: POD_NAMESPACE\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.namespace\n                            - name: POD_NODE_NAME\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.nodeName\n                            - name: POD_SERVICE_ACCOUNT\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: spec.serviceAccountName\n                            - name: POD_UID\n                              valueFrom:\n                                fieldRef:\n                                  apiVersion: v1\n                                  fieldPath: metadata.uid\n                          resources:\n                            limits:\n                              cpu: '1'\n                              memory: 1Gi\n                            requests:\n                              cpu: 10m\n                              memory: 90Mi\n                          terminationMessagePath: /dev/termination-log\n                          terminationMessagePolicy: File\n                          imagePullPolicy: IfNotPresent\n                          securityContext:\n                            allowPrivilegeEscalation: false\n                      restartPolicy: Always\n                      terminationGracePeriodSeconds: 5\n                      dnsPolicy: ClusterFirst\n                      securityContext: {}\n                      schedulerName: default-scheduler\n                  strategy:\n                    type: RollingUpdate\n                    rollingUpdate:\n                      maxUnavailable: 1\n                      maxSurge: 1\n                  revisionHistoryLimit: 3\n                  progressDeadlineSeconds: 600\n                status:\n                  observedGeneration: 1\n                  replicas: 1\n                  updatedReplicas: 1\n                  readyReplicas: 1\n                  availableReplicas: 1\n                  conditions:\n                    - type: Available\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:04Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: MinimumReplicasAvailable\n                      message: Deployment has minimum availability.\n                    - type: Progressing\n                      status: 'True'\n                      lastUpdateTime: '2023-02-25T17:15:09Z'\n                      lastTransitionTime: '2023-02-25T17:15:04Z'\n                      reason: NewReplicaSetAvailable\n                      message: >-\n                        ReplicaSet \"default-backend-7d7d4b7b58\" has successfully\n                        progressed.\n              - kind: Service\n                apiVersion: v1\n                metadata:\n                  name: default-backend\n                  namespace: garden-system\n                  uid: ea9b7635-4491-49de-9fea-041c64bee19c\n                  resourceVersion: '1088'\n                  creationTimestamp: '2023-02-25T17:15:04Z'\n                  labels:\n                    module: default-backend\n                    service: default-backend\n                  annotations:\n                    garden.io/generated: 'true'\n                    garden.io/manifest-hash: >-\n                      e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                    garden.io/version: v-2d58c28944\n                    kubectl.kubernetes.io/last-applied-configuration: >\n                      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n                  managedFields:\n                    - manager: kubectl-client-side-apply\n                      operation: Update\n                      apiVersion: v1\n                      time: '2023-02-25T17:15:04Z'\n                      fieldsType: FieldsV1\n                      fieldsV1:\n                        'f:metadata':\n                          'f:annotations':\n                            .: {}\n                            'f:garden.io/generated': {}\n                            'f:garden.io/manifest-hash': {}\n                            'f:garden.io/version': {}\n                            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                          'f:labels':\n                            .: {}\n                            'f:module': {}\n                            'f:service': {}\n                        'f:spec':\n                          'f:internalTrafficPolicy': {}\n                          'f:ports':\n                            .: {}\n                            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                              .: {}\n                              'f:name': {}\n                              'f:port': {}\n                              'f:protocol': {}\n                              'f:targetPort': {}\n                          'f:selector': {}\n                          'f:sessionAffinity': {}\n                          'f:type': {}\n                spec:\n                  ports:\n                    - name: http\n                      protocol: TCP\n                      port: 80\n                      targetPort: 80\n                  selector:\n                    service: default-backend\n                  clusterIP: 10.43.113.188\n                  clusterIPs:\n                    - 10.43.113.188\n                  type: ClusterIP\n                  sessionAffinity: None\n                  ipFamilies:\n                    - IPv4\n                  ipFamilyPolicy: SingleStack\n                  internalTrafficPolicy: Cluster\n                status:\n                  loadBalancer: {}\n            workload:\n              kind: Deployment\n              apiVersion: apps/v1\n              metadata:\n                name: default-backend\n                annotations:\n                  garden.io/configured.replicas: '1'\n                  garden.io/generated: 'true'\n                  garden.io/version: v-2d58c28944\n                namespace: garden-system\n                labels:\n                  module: default-backend\n                  service: default-backend\n              spec:\n                selector:\n                  matchLabels:\n                    service: default-backend\n                template:\n                  metadata:\n                    annotations:\n                      garden.io/generated: 'true'\n                      garden.io/version: v-2d58c28944\n                    labels:\n                      module: default-backend\n                      service: default-backend\n                  spec:\n                    containers:\n                      - name: default-backend\n                        image: 'gardendev/default-backend:v0.1'\n                        env:\n                          - name: GARDEN_VERSION\n                            value: v-2d58c28944\n                          - name: GARDEN_MODULE_VERSION\n                            value: v-24864f339e\n                          - name: POD_HOST_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.hostIP\n                          - name: POD_IP\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: status.podIP\n                          - name: POD_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.name\n                          - name: POD_NAMESPACE\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.namespace\n                          - name: POD_NODE_NAME\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.nodeName\n                          - name: POD_SERVICE_ACCOUNT\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: spec.serviceAccountName\n                          - name: POD_UID\n                            valueFrom:\n                              fieldRef:\n                                fieldPath: metadata.uid\n                        ports:\n                          - name: http\n                            protocol: TCP\n                            containerPort: 80\n                        resources:\n                          requests:\n                            cpu: 10m\n                            memory: 90Mi\n                          limits:\n                            memory: 1Gi\n                            cpu: '1'\n                        imagePullPolicy: IfNotPresent\n                        securityContext:\n                          allowPrivilegeEscalation: false\n                    restartPolicy: Always\n                    terminationGracePeriodSeconds: 5\n                    dnsPolicy: ClusterFirst\n                replicas: 1\n                strategy:\n                  type: RollingUpdate\n                  rollingUpdate:\n                    maxUnavailable: 1\n                    maxSurge: 1\n                revisionHistoryLimit: 3\n          devMode: false\n          localMode: false\n          outputs: {}\n        dependencyResults: {}\n        version: v-2d58c28944\n        startedAt: '2023-02-25T17:23:38.751Z'\n    version: v-b5ac3ef2a2\n    startedAt: '2023-02-25T17:23:38.876Z'\n  build.ingress-controller:\n    type: build\n    key: build.ingress-controller\n    name: ingress-controller\n    description: building ingress-controller\n    completedAt: '2023-02-25T17:23:41.397Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    output:\n      fresh: true\n    dependencyResults:\n      stage-build.ingress-controller:\n        type: stage-build\n        key: stage-build.ingress-controller\n        name: ingress-controller\n        description: staging build for ingress-controller\n        completedAt: '2023-02-25T17:23:38.785Z'\n        batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n        output: {}\n        dependencyResults: {}\n        version: v-9f251da908\n        startedAt: '2023-02-25T17:23:38.754Z'\n    version: v-9f251da908\n    startedAt: '2023-02-25T17:23:38.787Z'\n  deploy.ingress-controller:\n    type: deploy\n    description: deploying service 'ingress-controller' (from module 'ingress-controller')\n    key: deploy.ingress-controller\n    name: ingress-controller\n    error: ~error\n    startedAt: '2023-02-25T17:23:41.399Z'\n    completedAt: '2023-02-25T17:28:42.631Z'\n    batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n    version: v-b5ac3ef2a2","section":"","timestamp":"2023-02-25T17:28:42.891Z","level":"silly","allSections":[]}
{"msg":"Failed task resolve-provider.local-kubernetes.22ebff33-b531-11ed-aa0d-6fe020002795","metadata":{"task":{"type":"resolve-provider","key":"resolve-provider.local-kubernetes","status":"error","uid":"22ebff33-b531-11ed-aa0d-6fe020002795","versionString":"0.12.51"}},"section":"tasks","timestamp":"2023-02-25T17:28:42.893Z","level":"silly","allSections":["tasks"]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:28:42.893Z","level":"silly","allSections":[]}
{"msg":"Remaining tasks 0","section":"","timestamp":"2023-02-25T17:28:42.893Z","level":"silly","allSections":[]}
{"msg":"Done flushing all events and log entries.","section":"","timestamp":"2023-02-25T17:28:42.901Z","level":"debug","allSections":[]}
{"msg":"Failed resolving one or more providers:\n- local-kubernetes","section":"","timestamp":"2023-02-25T17:28:42.902Z","level":"error","allSections":[],"errorDetail":"Error: Failed resolving one or more providers:\n- local-kubernetes\n    at /snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/garden.ts:611:15\n\nError Details:\n\nrawConfigs:\n  - name: exec\n  - name: container\n  - name: templated\n  - name: local-kubernetes\n    environments:\n      - default\n    context: k3d-k3s-default\n    dependencies: []\ntaskResults:\n  resolve-provider.exec:\n    type: resolve-provider\n    key: resolve-provider.exec\n    name: exec\n    description: resolving provider exec\n    completedAt: '2023-02-25T17:23:36.295Z'\n    batchId: db55c2ca-dd67-46bd-8b2e-351052b83a21\n    output:\n      name: exec\n      dependencies: {}\n      moduleConfigs: []\n      config:\n        name: exec\n        dependencies: []\n        path: /workspaces/garden/garden/examples/demo-project-start\n      status:\n        ready: true\n        outputs: {}\n        cached: true\n      dashboardPages: []\n    dependencyResults: {}\n    version: 0.12.51\n    startedAt: '2023-02-25T17:23:36.246Z'\n  resolve-provider.container:\n    type: resolve-provider\n    key: resolve-provider.container\n    name: container\n    description: resolving provider container\n    completedAt: '2023-02-25T17:23:36.319Z'\n    batchId: 9caacfb8-6bdd-4307-962f-2d6258065e2c\n    output:\n      name: container\n      dependencies: {}\n      moduleConfigs: []\n      config:\n        name: container\n        dependencies: []\n        path: /workspaces/garden/garden/examples/demo-project-start\n      status:\n        ready: true\n        outputs: {}\n        cached: true\n      dashboardPages: []\n    dependencyResults: {}\n    version: 0.12.51\n    startedAt: '2023-02-25T17:23:36.247Z'\n  resolve-provider.local-kubernetes:\n    type: resolve-provider\n    description: resolving provider local-kubernetes\n    key: resolve-provider.local-kubernetes\n    name: local-kubernetes\n    error:\n      detail:\n        error:\n          shortMessage: >-\n            Command failed with exit code 1:\n            /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n            --kube-context k3d-k3s-default --namespace garden-system install\n            garden-nginx\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n            --namespace garden-system --timeout 300s --values\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n            --atomic\n          command: >-\n            /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n            --kube-context k3d-k3s-default --namespace garden-system install\n            garden-nginx\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n            --namespace garden-system --timeout 300s --values\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n            --atomic\n          exitCode: 1\n          stdout: ''\n          stderr: >-\n            Error: INSTALLATION FAILED: release garden-nginx failed, and has\n            been uninstalled due to atomic being set: timed out waiting for the\n            condition\n          all: >-\n            Error: INSTALLATION FAILED: release garden-nginx failed, and has\n            been uninstalled due to atomic being set: timed out waiting for the\n            condition\n          failed: true\n          timedOut: false\n          isCanceled: false\n          killed: false\n        results:\n          stage-build.default-backend:\n            type: stage-build\n            key: stage-build.default-backend\n            name: default-backend\n            description: staging build for default-backend\n            completedAt: '2023-02-25T17:23:38.785Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: {}\n            dependencyResults: {}\n            version: v-24864f339e\n            startedAt: '2023-02-25T17:23:38.754Z'\n          stage-build.ingress-controller:\n            type: stage-build\n            key: stage-build.ingress-controller\n            name: ingress-controller\n            description: staging build for ingress-controller\n            completedAt: '2023-02-25T17:23:38.785Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: {}\n            dependencyResults: {}\n            version: v-9f251da908\n            startedAt: '2023-02-25T17:23:38.754Z'\n          build.default-backend:\n            type: build\n            key: build.default-backend\n            name: default-backend\n            description: building default-backend\n            completedAt: '2023-02-25T17:23:38.803Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              fresh: false\n            dependencyResults:\n              stage-build.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~stage-build.default-backend\n            version: v-24864f339e\n            startedAt: '2023-02-25T17:23:38.786Z'\n          get-service-status.default-backend:\n            type: get-service-status\n            key: get-service-status.default-backend\n            name: default-backend\n            description: >-\n              getting status for service 'default-backend' (from module\n              'default-backend')\n            completedAt: '2023-02-25T17:23:38.871Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              forwardablePorts:\n                - name: http\n                  protocol: TCP\n                  targetPort: 80\n              ingresses: []\n              state: ready\n              namespaceStatuses:\n                - pluginName: local-kubernetes\n                  namespaceName: garden-system\n                  state: ready\n              version: v-2d58c28944\n              detail:\n                remoteResources:\n                  - kind: Deployment\n                    apiVersion: apps/v1\n                    metadata:\n                      name: default-backend\n                      namespace: garden-system\n                      uid: 661181cf-6532-441f-bf03-d86c109f6a14\n                      resourceVersion: '1110'\n                      generation: 1\n                      creationTimestamp: '2023-02-25T17:15:04Z'\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        deployment.kubernetes.io/revision: '1'\n                        garden.io/configured.replicas: '1'\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                        garden.io/version: v-2d58c28944\n                        kubectl.kubernetes.io/last-applied-configuration: >\n                          {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n                      managedFields:\n                        - manager: kubectl-client-side-apply\n                          operation: Update\n                          apiVersion: apps/v1\n                          time: '2023-02-25T17:15:04Z'\n                          fieldsType: FieldsV1\n                          fieldsV1:\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/configured.replicas': {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                                'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:progressDeadlineSeconds': {}\n                              'f:replicas': {}\n                              'f:revisionHistoryLimit': {}\n                              'f:selector': {}\n                              'f:strategy':\n                                'f:rollingUpdate':\n                                  .: {}\n                                  'f:maxSurge': {}\n                                  'f:maxUnavailable': {}\n                                'f:type': {}\n                              'f:template':\n                                'f:metadata':\n                                  'f:annotations':\n                                    .: {}\n                                    'f:garden.io/generated': {}\n                                    'f:garden.io/manifest-hash': {}\n                                    'f:garden.io/version': {}\n                                  'f:labels':\n                                    .: {}\n                                    'f:module': {}\n                                    'f:service': {}\n                                'f:spec':\n                                  'f:containers':\n                                    'k:{\"name\":\"default-backend\"}':\n                                      .: {}\n                                      'f:env':\n                                        .: {}\n                                        'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:value': {}\n                                        'k:{\"name\":\"GARDEN_VERSION\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:value': {}\n                                        'k:{\"name\":\"POD_HOST_IP\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_IP\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_NAME\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_NAMESPACE\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_NODE_NAME\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_UID\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                      'f:image': {}\n                                      'f:imagePullPolicy': {}\n                                      'f:name': {}\n                                      'f:ports':\n                                        .: {}\n                                        'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                          .: {}\n                                          'f:containerPort': {}\n                                          'f:name': {}\n                                          'f:protocol': {}\n                                      'f:resources':\n                                        .: {}\n                                        'f:limits':\n                                          .: {}\n                                          'f:cpu': {}\n                                          'f:memory': {}\n                                        'f:requests':\n                                          .: {}\n                                          'f:cpu': {}\n                                          'f:memory': {}\n                                      'f:securityContext':\n                                        .: {}\n                                        'f:allowPrivilegeEscalation': {}\n                                      'f:terminationMessagePath': {}\n                                      'f:terminationMessagePolicy': {}\n                                  'f:dnsPolicy': {}\n                                  'f:restartPolicy': {}\n                                  'f:schedulerName': {}\n                                  'f:securityContext': {}\n                                  'f:terminationGracePeriodSeconds': {}\n                        - manager: k3s\n                          operation: Update\n                          apiVersion: apps/v1\n                          time: '2023-02-25T17:15:09Z'\n                          fieldsType: FieldsV1\n                          fieldsV1:\n                            'f:metadata':\n                              'f:annotations':\n                                'f:deployment.kubernetes.io/revision': {}\n                            'f:status':\n                              'f:availableReplicas': {}\n                              'f:conditions':\n                                .: {}\n                                'k:{\"type\":\"Available\"}':\n                                  .: {}\n                                  'f:lastTransitionTime': {}\n                                  'f:lastUpdateTime': {}\n                                  'f:message': {}\n                                  'f:reason': {}\n                                  'f:status': {}\n                                  'f:type': {}\n                                'k:{\"type\":\"Progressing\"}':\n                                  .: {}\n                                  'f:lastTransitionTime': {}\n                                  'f:lastUpdateTime': {}\n                                  'f:message': {}\n                                  'f:reason': {}\n                                  'f:status': {}\n                                  'f:type': {}\n                              'f:observedGeneration': {}\n                              'f:readyReplicas': {}\n                              'f:replicas': {}\n                              'f:updatedReplicas': {}\n                          subresource: status\n                    spec:\n                      replicas: 1\n                      selector:\n                        matchLabels:\n                          service: default-backend\n                      template:\n                        metadata:\n                          creationTimestamp: null\n                          labels:\n                            module: default-backend\n                            service: default-backend\n                          annotations:\n                            garden.io/generated: 'true'\n                            garden.io/manifest-hash: >-\n                              e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                            garden.io/version: v-2d58c28944\n                        spec:\n                          containers:\n                            - name: default-backend\n                              image: 'gardendev/default-backend:v0.1'\n                              ports:\n                                - name: http\n                                  containerPort: 80\n                                  protocol: TCP\n                              env:\n                                - name: GARDEN_VERSION\n                                  value: v-2d58c28944\n                                - name: GARDEN_MODULE_VERSION\n                                  value: v-24864f339e\n                                - name: POD_HOST_IP\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: status.hostIP\n                                - name: POD_IP\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: status.podIP\n                                - name: POD_NAME\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: metadata.name\n                                - name: POD_NAMESPACE\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: metadata.namespace\n                                - name: POD_NODE_NAME\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: spec.nodeName\n                                - name: POD_SERVICE_ACCOUNT\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: spec.serviceAccountName\n                                - name: POD_UID\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: metadata.uid\n                              resources:\n                                limits:\n                                  cpu: '1'\n                                  memory: 1Gi\n                                requests:\n                                  cpu: 10m\n                                  memory: 90Mi\n                              terminationMessagePath: /dev/termination-log\n                              terminationMessagePolicy: File\n                              imagePullPolicy: IfNotPresent\n                              securityContext:\n                                allowPrivilegeEscalation: false\n                          restartPolicy: Always\n                          terminationGracePeriodSeconds: 5\n                          dnsPolicy: ClusterFirst\n                          securityContext: {}\n                          schedulerName: default-scheduler\n                      strategy:\n                        type: RollingUpdate\n                        rollingUpdate:\n                          maxUnavailable: 1\n                          maxSurge: 1\n                      revisionHistoryLimit: 3\n                      progressDeadlineSeconds: 600\n                    status:\n                      observedGeneration: 1\n                      replicas: 1\n                      updatedReplicas: 1\n                      readyReplicas: 1\n                      availableReplicas: 1\n                      conditions:\n                        - type: Available\n                          status: 'True'\n                          lastUpdateTime: '2023-02-25T17:15:04Z'\n                          lastTransitionTime: '2023-02-25T17:15:04Z'\n                          reason: MinimumReplicasAvailable\n                          message: Deployment has minimum availability.\n                        - type: Progressing\n                          status: 'True'\n                          lastUpdateTime: '2023-02-25T17:15:09Z'\n                          lastTransitionTime: '2023-02-25T17:15:04Z'\n                          reason: NewReplicaSetAvailable\n                          message: >-\n                            ReplicaSet \"default-backend-7d7d4b7b58\" has\n                            successfully progressed.\n                  - kind: Service\n                    apiVersion: v1\n                    metadata:\n                      name: default-backend\n                      namespace: garden-system\n                      uid: ea9b7635-4491-49de-9fea-041c64bee19c\n                      resourceVersion: '1088'\n                      creationTimestamp: '2023-02-25T17:15:04Z'\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                        garden.io/version: v-2d58c28944\n                        kubectl.kubernetes.io/last-applied-configuration: >\n                          {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n                      managedFields:\n                        - manager: kubectl-client-side-apply\n                          operation: Update\n                          apiVersion: v1\n                          time: '2023-02-25T17:15:04Z'\n                          fieldsType: FieldsV1\n                          fieldsV1:\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                                'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:internalTrafficPolicy': {}\n                              'f:ports':\n                                .: {}\n                                'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:port': {}\n                                  'f:protocol': {}\n                                  'f:targetPort': {}\n                              'f:selector': {}\n                              'f:sessionAffinity': {}\n                              'f:type': {}\n                    spec:\n                      ports:\n                        - name: http\n                          protocol: TCP\n                          port: 80\n                          targetPort: 80\n                      selector:\n                        service: default-backend\n                      clusterIP: 10.43.113.188\n                      clusterIPs:\n                        - 10.43.113.188\n                      type: ClusterIP\n                      sessionAffinity: None\n                      ipFamilies:\n                        - IPv4\n                      ipFamilyPolicy: SingleStack\n                      internalTrafficPolicy: Cluster\n                    status:\n                      loadBalancer: {}\n                workload:\n                  kind: Deployment\n                  apiVersion: apps/v1\n                  metadata:\n                    name: default-backend\n                    annotations:\n                      garden.io/configured.replicas: '1'\n                      garden.io/generated: 'true'\n                      garden.io/version: v-2d58c28944\n                    namespace: garden-system\n                    labels:\n                      module: default-backend\n                      service: default-backend\n                  spec:\n                    selector:\n                      matchLabels:\n                        service: default-backend\n                    template:\n                      metadata:\n                        annotations:\n                          garden.io/generated: 'true'\n                          garden.io/version: v-2d58c28944\n                        labels: >-\n                          ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend~output~detail~workload~metadata~labels\n                      spec:\n                        containers:\n                          - name: default-backend\n                            image: 'gardendev/default-backend:v0.1'\n                            env:\n                              - name: GARDEN_VERSION\n                                value: v-2d58c28944\n                              - name: GARDEN_MODULE_VERSION\n                                value: v-24864f339e\n                              - name: POD_HOST_IP\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: status.hostIP\n                              - name: POD_IP\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: status.podIP\n                              - name: POD_NAME\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: metadata.name\n                              - name: POD_NAMESPACE\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: metadata.namespace\n                              - name: POD_NODE_NAME\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: spec.nodeName\n                              - name: POD_SERVICE_ACCOUNT\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: spec.serviceAccountName\n                              - name: POD_UID\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: metadata.uid\n                            ports:\n                              - name: http\n                                protocol: TCP\n                                containerPort: 80\n                            resources:\n                              requests:\n                                cpu: 10m\n                                memory: 90Mi\n                              limits:\n                                memory: 1Gi\n                                cpu: '1'\n                            imagePullPolicy: IfNotPresent\n                            securityContext:\n                              allowPrivilegeEscalation: false\n                        restartPolicy: Always\n                        terminationGracePeriodSeconds: 5\n                        dnsPolicy: ClusterFirst\n                    replicas: 1\n                    strategy:\n                      type: RollingUpdate\n                      rollingUpdate:\n                        maxUnavailable: 1\n                        maxSurge: 1\n                    revisionHistoryLimit: 3\n              devMode: false\n              localMode: false\n              outputs: {}\n            dependencyResults: {}\n            version: v-2d58c28944\n            startedAt: '2023-02-25T17:23:38.751Z'\n          deploy.default-backend:\n            type: deploy\n            key: deploy.default-backend\n            name: default-backend\n            description: >-\n              deploying service 'default-backend' (from module\n              'default-backend')\n            completedAt: '2023-02-25T17:23:38.889Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: >-\n              ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend~output\n            dependencyResults:\n              get-service-status.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend\n              build.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~build.default-backend\n            version: v-2d58c28944\n            startedAt: '2023-02-25T17:23:38.879Z'\n          get-service-status.ingress-controller:\n            type: get-service-status\n            key: get-service-status.ingress-controller\n            name: ingress-controller\n            description: >-\n              getting status for service 'ingress-controller' (from module\n              'ingress-controller')\n            completedAt: '2023-02-25T17:23:38.992Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              forwardablePorts: []\n              state: missing\n              detail: {}\n              namespaceStatuses:\n                - pluginName: local-kubernetes\n                  namespaceName: garden-system\n                  state: ready\n              ingresses: []\n              outputs: {}\n            dependencyResults:\n              get-service-status.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend\n            version: v-b5ac3ef2a2\n            startedAt: '2023-02-25T17:23:38.876Z'\n          build.ingress-controller:\n            type: build\n            key: build.ingress-controller\n            name: ingress-controller\n            description: building ingress-controller\n            completedAt: '2023-02-25T17:23:41.397Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              fresh: true\n            dependencyResults:\n              stage-build.ingress-controller: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~stage-build.ingress-controller\n            version: v-9f251da908\n            startedAt: '2023-02-25T17:23:38.787Z'\n          deploy.ingress-controller:\n            type: deploy\n            description: >-\n              deploying service 'ingress-controller' (from module\n              'ingress-controller')\n            key: deploy.ingress-controller\n            name: ingress-controller\n            error: ~taskResults~resolve-provider.local-kubernetes~error~detail~error\n            startedAt: '2023-02-25T17:23:41.399Z'\n            completedAt: '2023-02-25T17:28:42.631Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            version: v-b5ac3ef2a2\n      type: plugin\n    startedAt: '2023-02-25T17:23:36.320Z'\n    completedAt: '2023-02-25T17:28:42.731Z'\n    batchId: 9caacfb8-6bdd-4307-962f-2d6258065e2c\n    version: 0.12.51\n  resolve-provider.templated:\n    type: resolve-provider\n    key: resolve-provider.templated\n    name: templated\n    description: resolving provider templated\n    completedAt: '2023-02-25T17:23:36.318Z'\n    batchId: 24bde6c5-3468-432c-ab8c-37f543a7feaf\n    output:\n      name: templated\n      dependencies: {}\n      moduleConfigs: []\n      config:\n        name: templated\n        path: /workspaces/garden/garden/examples/demo-project-start\n      status:\n        ready: true\n        outputs: {}\n        cached: true\n      dashboardPages: []\n    dependencyResults: {}\n    version: 0.12.51\n    startedAt: '2023-02-25T17:23:36.248Z'\nmessages:\n  - >-\n    - local-kubernetes: local-kubernetes — an error occurred when configuring\n    environment:\n\n    Error: Command\n    \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n    --kube-context k3d-k3s-default --namespace garden-system install\n    garden-nginx\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n    --namespace garden-system --timeout 300s --values\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n    --atomic\" failed with code 1:\n\n\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition\n\n\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition\n"}
{"msg":"Error: Failed resolving one or more providers:\n- local-kubernetes\n    at /snapshot/project/tmp/pkg/cli/node_modules/@garden-io/core/src/garden.ts:611:15\n\nError Details:\n\nrawConfigs:\n  - name: exec\n  - name: container\n  - name: templated\n  - name: local-kubernetes\n    environments:\n      - default\n    context: k3d-k3s-default\n    dependencies: []\ntaskResults:\n  resolve-provider.exec:\n    type: resolve-provider\n    key: resolve-provider.exec\n    name: exec\n    description: resolving provider exec\n    completedAt: '2023-02-25T17:23:36.295Z'\n    batchId: db55c2ca-dd67-46bd-8b2e-351052b83a21\n    output:\n      name: exec\n      dependencies: {}\n      moduleConfigs: []\n      config:\n        name: exec\n        dependencies: []\n        path: /workspaces/garden/garden/examples/demo-project-start\n      status:\n        ready: true\n        outputs: {}\n        cached: true\n      dashboardPages: []\n    dependencyResults: {}\n    version: 0.12.51\n    startedAt: '2023-02-25T17:23:36.246Z'\n  resolve-provider.container:\n    type: resolve-provider\n    key: resolve-provider.container\n    name: container\n    description: resolving provider container\n    completedAt: '2023-02-25T17:23:36.319Z'\n    batchId: 9caacfb8-6bdd-4307-962f-2d6258065e2c\n    output:\n      name: container\n      dependencies: {}\n      moduleConfigs: []\n      config:\n        name: container\n        dependencies: []\n        path: /workspaces/garden/garden/examples/demo-project-start\n      status:\n        ready: true\n        outputs: {}\n        cached: true\n      dashboardPages: []\n    dependencyResults: {}\n    version: 0.12.51\n    startedAt: '2023-02-25T17:23:36.247Z'\n  resolve-provider.local-kubernetes:\n    type: resolve-provider\n    description: resolving provider local-kubernetes\n    key: resolve-provider.local-kubernetes\n    name: local-kubernetes\n    error:\n      detail:\n        error:\n          shortMessage: >-\n            Command failed with exit code 1:\n            /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n            --kube-context k3d-k3s-default --namespace garden-system install\n            garden-nginx\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n            --namespace garden-system --timeout 300s --values\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n            --atomic\n          command: >-\n            /home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n            --kube-context k3d-k3s-default --namespace garden-system install\n            garden-nginx\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n            --namespace garden-system --timeout 300s --values\n            /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n            --atomic\n          exitCode: 1\n          stdout: ''\n          stderr: >-\n            Error: INSTALLATION FAILED: release garden-nginx failed, and has\n            been uninstalled due to atomic being set: timed out waiting for the\n            condition\n          all: >-\n            Error: INSTALLATION FAILED: release garden-nginx failed, and has\n            been uninstalled due to atomic being set: timed out waiting for the\n            condition\n          failed: true\n          timedOut: false\n          isCanceled: false\n          killed: false\n        results:\n          stage-build.default-backend:\n            type: stage-build\n            key: stage-build.default-backend\n            name: default-backend\n            description: staging build for default-backend\n            completedAt: '2023-02-25T17:23:38.785Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: {}\n            dependencyResults: {}\n            version: v-24864f339e\n            startedAt: '2023-02-25T17:23:38.754Z'\n          stage-build.ingress-controller:\n            type: stage-build\n            key: stage-build.ingress-controller\n            name: ingress-controller\n            description: staging build for ingress-controller\n            completedAt: '2023-02-25T17:23:38.785Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: {}\n            dependencyResults: {}\n            version: v-9f251da908\n            startedAt: '2023-02-25T17:23:38.754Z'\n          build.default-backend:\n            type: build\n            key: build.default-backend\n            name: default-backend\n            description: building default-backend\n            completedAt: '2023-02-25T17:23:38.803Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              fresh: false\n            dependencyResults:\n              stage-build.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~stage-build.default-backend\n            version: v-24864f339e\n            startedAt: '2023-02-25T17:23:38.786Z'\n          get-service-status.default-backend:\n            type: get-service-status\n            key: get-service-status.default-backend\n            name: default-backend\n            description: >-\n              getting status for service 'default-backend' (from module\n              'default-backend')\n            completedAt: '2023-02-25T17:23:38.871Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              forwardablePorts:\n                - name: http\n                  protocol: TCP\n                  targetPort: 80\n              ingresses: []\n              state: ready\n              namespaceStatuses:\n                - pluginName: local-kubernetes\n                  namespaceName: garden-system\n                  state: ready\n              version: v-2d58c28944\n              detail:\n                remoteResources:\n                  - kind: Deployment\n                    apiVersion: apps/v1\n                    metadata:\n                      name: default-backend\n                      namespace: garden-system\n                      uid: 661181cf-6532-441f-bf03-d86c109f6a14\n                      resourceVersion: '1110'\n                      generation: 1\n                      creationTimestamp: '2023-02-25T17:15:04Z'\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        deployment.kubernetes.io/revision: '1'\n                        garden.io/configured.replicas: '1'\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\n                        garden.io/version: v-2d58c28944\n                        kubectl.kubernetes.io/last-applied-configuration: >\n                          {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"garden.io/configured.replicas\":\"1\",\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"f1477dfc4a89c46adbd86b74880d94e2fb2cf55da79c61f16f1d4b4dda9b80ca\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"service\":\"default-backend\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GARDEN_VERSION\",\"value\":\"v-2d58c28944\"},{\"name\":\"GARDEN_MODULE_VERSION\",\"value\":\"v-24864f339e\"},{\"name\":\"POD_HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"gardendev/default-backend:v0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"default-backend\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5}}}}\n                      managedFields:\n                        - manager: kubectl-client-side-apply\n                          operation: Update\n                          apiVersion: apps/v1\n                          time: '2023-02-25T17:15:04Z'\n                          fieldsType: FieldsV1\n                          fieldsV1:\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/configured.replicas': {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                                'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:progressDeadlineSeconds': {}\n                              'f:replicas': {}\n                              'f:revisionHistoryLimit': {}\n                              'f:selector': {}\n                              'f:strategy':\n                                'f:rollingUpdate':\n                                  .: {}\n                                  'f:maxSurge': {}\n                                  'f:maxUnavailable': {}\n                                'f:type': {}\n                              'f:template':\n                                'f:metadata':\n                                  'f:annotations':\n                                    .: {}\n                                    'f:garden.io/generated': {}\n                                    'f:garden.io/manifest-hash': {}\n                                    'f:garden.io/version': {}\n                                  'f:labels':\n                                    .: {}\n                                    'f:module': {}\n                                    'f:service': {}\n                                'f:spec':\n                                  'f:containers':\n                                    'k:{\"name\":\"default-backend\"}':\n                                      .: {}\n                                      'f:env':\n                                        .: {}\n                                        'k:{\"name\":\"GARDEN_MODULE_VERSION\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:value': {}\n                                        'k:{\"name\":\"GARDEN_VERSION\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:value': {}\n                                        'k:{\"name\":\"POD_HOST_IP\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_IP\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_NAME\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_NAMESPACE\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_NODE_NAME\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_SERVICE_ACCOUNT\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                        'k:{\"name\":\"POD_UID\"}':\n                                          .: {}\n                                          'f:name': {}\n                                          'f:valueFrom':\n                                            .: {}\n                                            'f:fieldRef': {}\n                                      'f:image': {}\n                                      'f:imagePullPolicy': {}\n                                      'f:name': {}\n                                      'f:ports':\n                                        .: {}\n                                        'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                                          .: {}\n                                          'f:containerPort': {}\n                                          'f:name': {}\n                                          'f:protocol': {}\n                                      'f:resources':\n                                        .: {}\n                                        'f:limits':\n                                          .: {}\n                                          'f:cpu': {}\n                                          'f:memory': {}\n                                        'f:requests':\n                                          .: {}\n                                          'f:cpu': {}\n                                          'f:memory': {}\n                                      'f:securityContext':\n                                        .: {}\n                                        'f:allowPrivilegeEscalation': {}\n                                      'f:terminationMessagePath': {}\n                                      'f:terminationMessagePolicy': {}\n                                  'f:dnsPolicy': {}\n                                  'f:restartPolicy': {}\n                                  'f:schedulerName': {}\n                                  'f:securityContext': {}\n                                  'f:terminationGracePeriodSeconds': {}\n                        - manager: k3s\n                          operation: Update\n                          apiVersion: apps/v1\n                          time: '2023-02-25T17:15:09Z'\n                          fieldsType: FieldsV1\n                          fieldsV1:\n                            'f:metadata':\n                              'f:annotations':\n                                'f:deployment.kubernetes.io/revision': {}\n                            'f:status':\n                              'f:availableReplicas': {}\n                              'f:conditions':\n                                .: {}\n                                'k:{\"type\":\"Available\"}':\n                                  .: {}\n                                  'f:lastTransitionTime': {}\n                                  'f:lastUpdateTime': {}\n                                  'f:message': {}\n                                  'f:reason': {}\n                                  'f:status': {}\n                                  'f:type': {}\n                                'k:{\"type\":\"Progressing\"}':\n                                  .: {}\n                                  'f:lastTransitionTime': {}\n                                  'f:lastUpdateTime': {}\n                                  'f:message': {}\n                                  'f:reason': {}\n                                  'f:status': {}\n                                  'f:type': {}\n                              'f:observedGeneration': {}\n                              'f:readyReplicas': {}\n                              'f:replicas': {}\n                              'f:updatedReplicas': {}\n                          subresource: status\n                    spec:\n                      replicas: 1\n                      selector:\n                        matchLabels:\n                          service: default-backend\n                      template:\n                        metadata:\n                          creationTimestamp: null\n                          labels:\n                            module: default-backend\n                            service: default-backend\n                          annotations:\n                            garden.io/generated: 'true'\n                            garden.io/manifest-hash: >-\n                              e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                            garden.io/version: v-2d58c28944\n                        spec:\n                          containers:\n                            - name: default-backend\n                              image: 'gardendev/default-backend:v0.1'\n                              ports:\n                                - name: http\n                                  containerPort: 80\n                                  protocol: TCP\n                              env:\n                                - name: GARDEN_VERSION\n                                  value: v-2d58c28944\n                                - name: GARDEN_MODULE_VERSION\n                                  value: v-24864f339e\n                                - name: POD_HOST_IP\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: status.hostIP\n                                - name: POD_IP\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: status.podIP\n                                - name: POD_NAME\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: metadata.name\n                                - name: POD_NAMESPACE\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: metadata.namespace\n                                - name: POD_NODE_NAME\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: spec.nodeName\n                                - name: POD_SERVICE_ACCOUNT\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: spec.serviceAccountName\n                                - name: POD_UID\n                                  valueFrom:\n                                    fieldRef:\n                                      apiVersion: v1\n                                      fieldPath: metadata.uid\n                              resources:\n                                limits:\n                                  cpu: '1'\n                                  memory: 1Gi\n                                requests:\n                                  cpu: 10m\n                                  memory: 90Mi\n                              terminationMessagePath: /dev/termination-log\n                              terminationMessagePolicy: File\n                              imagePullPolicy: IfNotPresent\n                              securityContext:\n                                allowPrivilegeEscalation: false\n                          restartPolicy: Always\n                          terminationGracePeriodSeconds: 5\n                          dnsPolicy: ClusterFirst\n                          securityContext: {}\n                          schedulerName: default-scheduler\n                      strategy:\n                        type: RollingUpdate\n                        rollingUpdate:\n                          maxUnavailable: 1\n                          maxSurge: 1\n                      revisionHistoryLimit: 3\n                      progressDeadlineSeconds: 600\n                    status:\n                      observedGeneration: 1\n                      replicas: 1\n                      updatedReplicas: 1\n                      readyReplicas: 1\n                      availableReplicas: 1\n                      conditions:\n                        - type: Available\n                          status: 'True'\n                          lastUpdateTime: '2023-02-25T17:15:04Z'\n                          lastTransitionTime: '2023-02-25T17:15:04Z'\n                          reason: MinimumReplicasAvailable\n                          message: Deployment has minimum availability.\n                        - type: Progressing\n                          status: 'True'\n                          lastUpdateTime: '2023-02-25T17:15:09Z'\n                          lastTransitionTime: '2023-02-25T17:15:04Z'\n                          reason: NewReplicaSetAvailable\n                          message: >-\n                            ReplicaSet \"default-backend-7d7d4b7b58\" has\n                            successfully progressed.\n                  - kind: Service\n                    apiVersion: v1\n                    metadata:\n                      name: default-backend\n                      namespace: garden-system\n                      uid: ea9b7635-4491-49de-9fea-041c64bee19c\n                      resourceVersion: '1088'\n                      creationTimestamp: '2023-02-25T17:15:04Z'\n                      labels:\n                        module: default-backend\n                        service: default-backend\n                      annotations:\n                        garden.io/generated: 'true'\n                        garden.io/manifest-hash: >-\n                          e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\n                        garden.io/version: v-2d58c28944\n                        kubectl.kubernetes.io/last-applied-configuration: >\n                          {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"garden.io/generated\":\"true\",\"garden.io/manifest-hash\":\"e14e60d4361d65242c498b88ed26ce481592d6535d5c8102d20fef3f2ac0f0d5\",\"garden.io/version\":\"v-2d58c28944\"},\"labels\":{\"module\":\"default-backend\",\"service\":\"default-backend\"},\"name\":\"default-backend\",\"namespace\":\"garden-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"service\":\"default-backend\"},\"type\":\"ClusterIP\"}}\n                      managedFields:\n                        - manager: kubectl-client-side-apply\n                          operation: Update\n                          apiVersion: v1\n                          time: '2023-02-25T17:15:04Z'\n                          fieldsType: FieldsV1\n                          fieldsV1:\n                            'f:metadata':\n                              'f:annotations':\n                                .: {}\n                                'f:garden.io/generated': {}\n                                'f:garden.io/manifest-hash': {}\n                                'f:garden.io/version': {}\n                                'f:kubectl.kubernetes.io/last-applied-configuration': {}\n                              'f:labels':\n                                .: {}\n                                'f:module': {}\n                                'f:service': {}\n                            'f:spec':\n                              'f:internalTrafficPolicy': {}\n                              'f:ports':\n                                .: {}\n                                'k:{\"port\":80,\"protocol\":\"TCP\"}':\n                                  .: {}\n                                  'f:name': {}\n                                  'f:port': {}\n                                  'f:protocol': {}\n                                  'f:targetPort': {}\n                              'f:selector': {}\n                              'f:sessionAffinity': {}\n                              'f:type': {}\n                    spec:\n                      ports:\n                        - name: http\n                          protocol: TCP\n                          port: 80\n                          targetPort: 80\n                      selector:\n                        service: default-backend\n                      clusterIP: 10.43.113.188\n                      clusterIPs:\n                        - 10.43.113.188\n                      type: ClusterIP\n                      sessionAffinity: None\n                      ipFamilies:\n                        - IPv4\n                      ipFamilyPolicy: SingleStack\n                      internalTrafficPolicy: Cluster\n                    status:\n                      loadBalancer: {}\n                workload:\n                  kind: Deployment\n                  apiVersion: apps/v1\n                  metadata:\n                    name: default-backend\n                    annotations:\n                      garden.io/configured.replicas: '1'\n                      garden.io/generated: 'true'\n                      garden.io/version: v-2d58c28944\n                    namespace: garden-system\n                    labels:\n                      module: default-backend\n                      service: default-backend\n                  spec:\n                    selector:\n                      matchLabels:\n                        service: default-backend\n                    template:\n                      metadata:\n                        annotations:\n                          garden.io/generated: 'true'\n                          garden.io/version: v-2d58c28944\n                        labels: >-\n                          ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend~output~detail~workload~metadata~labels\n                      spec:\n                        containers:\n                          - name: default-backend\n                            image: 'gardendev/default-backend:v0.1'\n                            env:\n                              - name: GARDEN_VERSION\n                                value: v-2d58c28944\n                              - name: GARDEN_MODULE_VERSION\n                                value: v-24864f339e\n                              - name: POD_HOST_IP\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: status.hostIP\n                              - name: POD_IP\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: status.podIP\n                              - name: POD_NAME\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: metadata.name\n                              - name: POD_NAMESPACE\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: metadata.namespace\n                              - name: POD_NODE_NAME\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: spec.nodeName\n                              - name: POD_SERVICE_ACCOUNT\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: spec.serviceAccountName\n                              - name: POD_UID\n                                valueFrom:\n                                  fieldRef:\n                                    fieldPath: metadata.uid\n                            ports:\n                              - name: http\n                                protocol: TCP\n                                containerPort: 80\n                            resources:\n                              requests:\n                                cpu: 10m\n                                memory: 90Mi\n                              limits:\n                                memory: 1Gi\n                                cpu: '1'\n                            imagePullPolicy: IfNotPresent\n                            securityContext:\n                              allowPrivilegeEscalation: false\n                        restartPolicy: Always\n                        terminationGracePeriodSeconds: 5\n                        dnsPolicy: ClusterFirst\n                    replicas: 1\n                    strategy:\n                      type: RollingUpdate\n                      rollingUpdate:\n                        maxUnavailable: 1\n                        maxSurge: 1\n                    revisionHistoryLimit: 3\n              devMode: false\n              localMode: false\n              outputs: {}\n            dependencyResults: {}\n            version: v-2d58c28944\n            startedAt: '2023-02-25T17:23:38.751Z'\n          deploy.default-backend:\n            type: deploy\n            key: deploy.default-backend\n            name: default-backend\n            description: >-\n              deploying service 'default-backend' (from module\n              'default-backend')\n            completedAt: '2023-02-25T17:23:38.889Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output: >-\n              ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend~output\n            dependencyResults:\n              get-service-status.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend\n              build.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~build.default-backend\n            version: v-2d58c28944\n            startedAt: '2023-02-25T17:23:38.879Z'\n          get-service-status.ingress-controller:\n            type: get-service-status\n            key: get-service-status.ingress-controller\n            name: ingress-controller\n            description: >-\n              getting status for service 'ingress-controller' (from module\n              'ingress-controller')\n            completedAt: '2023-02-25T17:23:38.992Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              forwardablePorts: []\n              state: missing\n              detail: {}\n              namespaceStatuses:\n                - pluginName: local-kubernetes\n                  namespaceName: garden-system\n                  state: ready\n              ingresses: []\n              outputs: {}\n            dependencyResults:\n              get-service-status.default-backend: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~get-service-status.default-backend\n            version: v-b5ac3ef2a2\n            startedAt: '2023-02-25T17:23:38.876Z'\n          build.ingress-controller:\n            type: build\n            key: build.ingress-controller\n            name: ingress-controller\n            description: building ingress-controller\n            completedAt: '2023-02-25T17:23:41.397Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            output:\n              fresh: true\n            dependencyResults:\n              stage-build.ingress-controller: >-\n                ~taskResults~resolve-provider.local-kubernetes~error~detail~results~stage-build.ingress-controller\n            version: v-9f251da908\n            startedAt: '2023-02-25T17:23:38.787Z'\n          deploy.ingress-controller:\n            type: deploy\n            description: >-\n              deploying service 'ingress-controller' (from module\n              'ingress-controller')\n            key: deploy.ingress-controller\n            name: ingress-controller\n            error: ~taskResults~resolve-provider.local-kubernetes~error~detail~error\n            startedAt: '2023-02-25T17:23:41.399Z'\n            completedAt: '2023-02-25T17:28:42.631Z'\n            batchId: 8d4396e3-374a-4775-88d2-d8b2291eddd8\n            version: v-b5ac3ef2a2\n      type: plugin\n    startedAt: '2023-02-25T17:23:36.320Z'\n    completedAt: '2023-02-25T17:28:42.731Z'\n    batchId: 9caacfb8-6bdd-4307-962f-2d6258065e2c\n    version: 0.12.51\n  resolve-provider.templated:\n    type: resolve-provider\n    key: resolve-provider.templated\n    name: templated\n    description: resolving provider templated\n    completedAt: '2023-02-25T17:23:36.318Z'\n    batchId: 24bde6c5-3468-432c-ab8c-37f543a7feaf\n    output:\n      name: templated\n      dependencies: {}\n      moduleConfigs: []\n      config:\n        name: templated\n        path: /workspaces/garden/garden/examples/demo-project-start\n      status:\n        ready: true\n        outputs: {}\n        cached: true\n      dashboardPages: []\n    dependencyResults: {}\n    version: 0.12.51\n    startedAt: '2023-02-25T17:23:36.248Z'\nmessages:\n  - >-\n    - local-kubernetes: local-kubernetes — an error occurred when configuring\n    environment:\n\n    Error: Command\n    \"/home/node/.garden/tools/helm/f67f27f2837e2821/linux-amd64/helm\n    --kube-context k3d-k3s-default --namespace garden-system install\n    garden-nginx\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx\n    --namespace garden-system --timeout 300s --values\n    /workspaces/garden/garden/examples/demo-project-start/.garden/kubernetes.garden/build/ingress-controller/ingress-nginx/garden-values.yml\n    --atomic\" failed with code 1:\n\n\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition\n\n\n    Error: INSTALLATION FAILED: release garden-nginx failed, and has been\n    uninstalled due to atomic being set: timed out waiting for the condition","section":"","timestamp":"2023-02-25T17:28:42.989Z","level":"silly","allSections":[]}
{"msg":"See .garden/error.log for detailed error message","section":"","timestamp":"2023-02-25T17:28:42.990Z","level":"info","allSections":[]}
{"msg":"Preparing environment...","section":"providers","timestamp":"2023-02-25T17:28:43.095Z","level":"info","allSections":["providers"]}
