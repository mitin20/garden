kind: Module
description: Postgres container for storing voting results
type: container
name: postgres
image: postgres:11.7-alpine
services:
  - name: postgres
    volumes:
      - name: data
        containerPath: /db-data
    ports:
      - name: postgres
        containerPort: 5432
    env:
      POSTGRES_DATABASE: ${var.postgres-database}
      POSTGRES_USERNAME: ${var.postgres-username}
      POSTGRES_PASSWORD: ${var.postgres-password}
    healthCheck:
      command: [psql, -w, -U, "${var.postgres-username}", -d, "${var.postgres-database}", -c, "SELECT 1"]
tasks:
  - name: db-init
    command: [/bin/sh, -c]
    # The postgres health check appears to go through before the server accepts remote connections, so we need to
    # sleep for a while.
    # https://github.com/CrunchyData/crunchy-containers/issues/653
    args:
      [
        "sleep 15 && psql -w -U ${var.postgres-username} --host=postgres --port=5432 -d ${var.postgres-database} -c 'CREATE TABLE IF NOT EXISTS votes (id VARCHAR(255) NOT NULL UNIQUE, vote VARCHAR(255) NOT NULL, created_at timestamp default NULL)'",
      ]
    dependencies: [postgres]
    env: &env
      PGDATABASE: ${var.postgres-database}
      PGUSER: ${var.postgres-username}
      PGPASSWORD: ${var.postgres-password}
  - name: db-clear
    command: [/bin/sh, -c]
    args: ["psql -w -U ${var.postgres-username} --host=postgres --port=5432 -d ${var.postgres-database} -c 'TRUNCATE votes'"]
    dependencies: [postgres]
    env:
      <<: *env
